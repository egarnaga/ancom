!function(t){var r={};function i(e){var n;return(r[e]||(n=r[e]={i:e,l:!1,exports:{}},t[e].call(n.exports,n,n.exports,i),n.l=!0,n)).exports}i.m=t,i.c=r,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)i.d(t,r,function(e){return n[e]}.bind(null,r));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="",i(i.s="./js/vendor.js")}({"../node_modules/webpack/buildin/amd-options.js":function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))\n\n//# sourceURL=webpack:///../node_modules/webpack/buildin/amd-options.js?")},"../node_modules/webpack/buildin/harmony-module.js":function(module,exports){eval('module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "exports", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///../node_modules/webpack/buildin/harmony-module.js?')},"./js/vendor.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vendor_swiper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/swiper */ "./js/vendor/swiper.js");\n/* harmony import */ var _vendor_gsap_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vendor/gsap.min.js */ "./js/vendor/gsap.min.js");\n/* harmony import */ var _vendor_gsap_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vendor_gsap_min_js__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n//# sourceURL=webpack:///./js/vendor.js?')},"./js/vendor/gsap.min.js":function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n/*!\n * GSAP 3.6.0\n * https://greensock.com\n * \n * @license Copyright 2021, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n */\n\n!function (t, e) {\n  "object" == ( false ? undefined : _typeof(exports)) && "undefined" != typeof module ? e(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function (e) {\n  "use strict";\n\n  function _inheritsLoose(t, e) {\n    t.prototype = Object.create(e.prototype), (t.prototype.constructor = t).__proto__ = e;\n  }\n  function _assertThisInitialized(t) {\n    if (void 0 === t) throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n    return t;\n  }\n  function o(t) {\n    return "string" == typeof t;\n  }\n  function p(t) {\n    return "function" == typeof t;\n  }\n  function q(t) {\n    return "number" == typeof t;\n  }\n  function r(t) {\n    return void 0 === t;\n  }\n  function s(t) {\n    return "object" == _typeof(t);\n  }\n  function t(t) {\n    return !1 !== t;\n  }\n  function u() {\n    return "undefined" != typeof window;\n  }\n  function v(t) {\n    return p(t) || o(t);\n  }\n  function M(t) {\n    return (h = mt(t, ot)) && ae;\n  }\n  function N(t, e) {\n    return console.warn("Invalid property", t, "set to", e, "Missing plugin? gsap.registerPlugin()");\n  }\n  function O(t, e) {\n    return !e && console.warn(t);\n  }\n  function P(t, e) {\n    return t && (ot[t] = e) && h && (h[t] = e) || ot;\n  }\n  function Q() {\n    return 0;\n  }\n  function $(t) {\n    var e,\n      r,\n      i = t[0];\n    if (s(i) || p(i) || (t = [t]), !(e = (i._gsap || {}).harness)) {\n      for (r = pt.length; r-- && !pt[r].targetTest(i);) {\n        ;\n      }\n      e = pt[r];\n    }\n    for (r = t.length; r--;) {\n      t[r] && (t[r]._gsap || (t[r]._gsap = new Lt(t[r], e))) || t.splice(r, 1);\n    }\n    return t;\n  }\n  function _(t) {\n    return t._gsap || $(Tt(t))[0]._gsap;\n  }\n  function aa(t, e, i) {\n    return (i = t[e]) && p(i) ? t[e]() : r(i) && t.getAttribute && t.getAttribute(e) || i;\n  }\n  function ba(t, e) {\n    return (t = t.split(",")).forEach(e) || t;\n  }\n  function ca(t) {\n    return Math.round(1e5 * t) / 1e5 || 0;\n  }\n  function da(t, e) {\n    for (var r = e.length, i = 0; t.indexOf(e[i]) < 0 && ++i < r;) {\n      ;\n    }\n    return i < r;\n  }\n  function ea(e, r, i) {\n    var n,\n      a = q(e[1]),\n      s = (a ? 2 : 1) + (r < 2 ? 0 : 1),\n      o = e[s];\n    if (a && (o.duration = e[1]), o.parent = i, r) {\n      for (n = o; i && !("immediateRender" in n);) {\n        n = i.vars.defaults || {}, i = t(i.vars.inherit) && i.parent;\n      }\n      o.immediateRender = t(n.immediateRender), r < 2 ? o.runBackwards = 1 : o.startAt = e[s - 1];\n    }\n    return o;\n  }\n  function fa() {\n    var t,\n      e,\n      r = ht.length,\n      i = ht.slice(0);\n    for (lt = {}, t = ht.length = 0; t < r; t++) {\n      (e = i[t]) && e._lazy && (e.render(e._lazy[0], e._lazy[1], !0)._lazy = 0);\n    }\n  }\n  function ga(t, e, r, i) {\n    ht.length && fa(), t.render(e, r, i), ht.length && fa();\n  }\n  function ha(t) {\n    var e = parseFloat(t);\n    return (e || 0 === e) && (t + "").match(at).length < 2 ? e : o(t) ? t.trim() : t;\n  }\n  function ia(t) {\n    return t;\n  }\n  function ja(t, e) {\n    for (var r in e) {\n      r in t || (t[r] = e[r]);\n    }\n    return t;\n  }\n  function ka(t, e) {\n    for (var r in e) {\n      r in t || "duration" === r || "ease" === r || (t[r] = e[r]);\n    }\n  }\n  function ma(t, e) {\n    for (var r in e) {\n      "__proto__" !== r && "constructor" !== r && "prototype" !== r && (t[r] = s(e[r]) ? ma(t[r] || (t[r] = {}), e[r]) : e[r]);\n    }\n    return t;\n  }\n  function na(t, e) {\n    var r,\n      i = {};\n    for (r in t) {\n      r in e || (i[r] = t[r]);\n    }\n    return i;\n  }\n  function oa(e) {\n    var r = e.parent || F,\n      i = e.keyframes ? ka : ja;\n    if (t(e.inherit)) for (; r;) {\n      i(e, r.vars.defaults), r = r.parent || r._dp;\n    }\n    return e;\n  }\n  function ra(t, e, r, i) {\n    void 0 === r && (r = "_first"), void 0 === i && (i = "_last");\n    var n = e._prev,\n      a = e._next;\n    n ? n._next = a : t[r] === e && (t[r] = a), a ? a._prev = n : t[i] === e && (t[i] = n), e._next = e._prev = e.parent = null;\n  }\n  function sa(t, e) {\n    !t.parent || e && !t.parent.autoRemoveChildren || t.parent.remove(t), t._act = 0;\n  }\n  function ta(t, e) {\n    if (t && (!e || e._end > t._dur || e._start < 0)) for (var r = t; r;) {\n      r._dirty = 1, r = r.parent;\n    }\n    return t;\n  }\n  function wa(t) {\n    return t._repeat ? gt(t._tTime, t = t.duration() + t._rDelay) * t : 0;\n  }\n  function ya(t, e) {\n    return (t - e._start) * e._ts + (0 <= e._ts ? 0 : e._dirty ? e.totalDuration() : e._tDur);\n  }\n  function za(t) {\n    return t._end = ca(t._start + (t._tDur / Math.abs(t._ts || t._rts || j) || 0));\n  }\n  function Aa(t, e) {\n    var r = t._dp;\n    return r && r.smoothChildTiming && t._ts && (t._start = ca(r._time - (0 < t._ts ? e / t._ts : ((t._dirty ? t.totalDuration() : t._tDur) - e) / -t._ts)), za(t), r._dirty || ta(r, t)), t;\n  }\n  function Ba(t, e) {\n    var r;\n    if ((e._time || e._initted && !e._dur) && (r = ya(t.rawTime(), e), (!e._dur || yt(0, e.totalDuration(), r) - e._tTime > j) && e.render(r, !0)), ta(t, e)._dp && t._initted && t._time >= t._dur && t._ts) {\n      if (t._dur < t.duration()) for (r = t; r._dp;) {\n        0 <= r.rawTime() && r.totalTime(r._tTime), r = r._dp;\n      }\n      t._zTime = -j;\n    }\n  }\n  function Ca(t, e, r, i) {\n    return e.parent && sa(e), e._start = ca(r + e._delay), e._end = ca(e._start + (e.totalDuration() / Math.abs(e.timeScale()) || 0)), function _addLinkedListItem(t, e, r, i, n) {\n      void 0 === r && (r = "_first"), void 0 === i && (i = "_last");\n      var a,\n        s = t[i];\n      if (n) for (a = e[n]; s && s[n] > a;) {\n        s = s._prev;\n      }\n      s ? (e._next = s._next, s._next = e) : (e._next = t[r], t[r] = e), e._next ? e._next._prev = e : t[i] = e, e._prev = s, e.parent = e._dp = t;\n    }(t, e, "_first", "_last", t._sort ? "_start" : 0), t._recent = e, i || Ba(t, e), t;\n  }\n  function Da(t, e) {\n    return (ot.ScrollTrigger || N("scrollTrigger", e)) && ot.ScrollTrigger.create(e, t);\n  }\n  function Ea(t, e, r, i) {\n    return Nt(t, e), t._initted ? !r && t._pt && (t._dur && !1 !== t.vars.lazy || !t._dur && t.vars.lazy) && f !== Pt.frame ? (ht.push(t), t._lazy = [e, i], 1) : void 0 : 1;\n  }\n  function Ia(t, e, r, i) {\n    var n = t._repeat,\n      a = ca(e) || 0,\n      s = t._tTime / t._tDur;\n    return s && !i && (t._time *= a / t._dur), t._dur = a, t._tDur = n ? n < 0 ? 1e10 : ca(a * (n + 1) + t._rDelay * n) : a, s && !i ? Aa(t, t._tTime = t._tDur * s) : t.parent && za(t), r || ta(t.parent, t), t;\n  }\n  function Ja(t) {\n    return t instanceof Bt ? ta(t) : Ia(t, t._dur);\n  }\n  function La(t, e) {\n    var r,\n      i,\n      n = t.labels,\n      a = t._recent || vt,\n      s = t.duration() >= U ? a.endTime(!1) : t._dur;\n    return o(e) && (isNaN(e) || e in n) ? "<" === (r = e.charAt(0)) || ">" === r ? ("<" === r ? a._start : a.endTime(0 <= a._repeat)) + (parseFloat(e.substr(1)) || 0) : (r = e.indexOf("=")) < 0 ? (e in n || (n[e] = s), n[e]) : (i = +(e.charAt(r - 1) + e.substr(r + 1)), 1 < r ? La(t, e.substr(0, r - 1)) + i : s + i) : null == e ? s : +e;\n  }\n  function Ma(t, e) {\n    return t || 0 === t ? e(t) : e;\n  }\n  function Oa(t) {\n    if ("string" != typeof t) return "";\n    var e = st.exec(t);\n    return e ? t.substr(e.index + e[0].length) : "";\n  }\n  function Ra(t, e) {\n    return t && s(t) && "length" in t && (!e && !t.length || t.length - 1 in t && s(t[0])) && !t.nodeType && t !== i;\n  }\n  function Ua(t) {\n    return t.sort(function () {\n      return .5 - Math.random();\n    });\n  }\n  function Va(t) {\n    if (p(t)) return t;\n    var _ = s(t) ? t : {\n        each: t\n      },\n      m = Et(_.ease),\n      g = _.from || 0,\n      v = parseFloat(_.base) || 0,\n      y = {},\n      e = 0 < g && g < 1,\n      b = isNaN(g) || e,\n      T = _.axis,\n      w = g,\n      x = g;\n    return o(g) ? w = x = {\n      center: .5,\n      edges: .5,\n      end: 1\n    }[g] || 0 : !e && b && (w = g[0], x = g[1]), function (t, e, r) {\n      var i,\n        n,\n        a,\n        s,\n        o,\n        u,\n        h,\n        l,\n        f,\n        d = (r || _).length,\n        c = y[d];\n      if (!c) {\n        if (!(f = "auto" === _.grid ? 0 : (_.grid || [1, U])[1])) {\n          for (h = -U; h < (h = r[f++].getBoundingClientRect().left) && f < d;) {\n            ;\n          }\n          f--;\n        }\n        for (c = y[d] = [], i = b ? Math.min(f, d) * w - .5 : g % f, n = b ? d * x / f - .5 : g / f | 0, l = U, u = h = 0; u < d; u++) {\n          a = u % f - i, s = n - (u / f | 0), c[u] = o = T ? Math.abs("y" === T ? s : a) : J(a * a + s * s), h < o && (h = o), o < l && (l = o);\n        }\n        "random" === g && Ua(c), c.max = h - l, c.min = l, c.v = d = (parseFloat(_.amount) || parseFloat(_.each) * (d < f ? d - 1 : T ? "y" === T ? d / f : f : Math.max(f, d / f)) || 0) * ("edges" === g ? -1 : 1), c.b = d < 0 ? v - d : v, c.u = Oa(_.amount || _.each) || 0, m = m && d < 0 ? It(m) : m;\n      }\n      return d = (c[t] - c.min) / c.max || 0, ca(c.b + (m ? m(d) : d) * c.v) + c.u;\n    };\n  }\n  function Wa(r) {\n    var i = r < 1 ? Math.pow(10, (r + "").length - 2) : 1;\n    return function (t) {\n      var e = Math.round(parseFloat(t) / r) * r * i;\n      return (e - e % 1) / i + (q(t) ? 0 : Oa(t));\n    };\n  }\n  function Xa(u, t) {\n    var h,\n      l,\n      e = K(u);\n    return !e && s(u) && (h = e = u.radius || U, u.values ? (u = Tt(u.values), (l = !q(u[0])) && (h *= h)) : u = Wa(u.increment)), Ma(t, e ? p(u) ? function (t) {\n      return l = u(t), Math.abs(l - t) <= h ? l : t;\n    } : function (t) {\n      for (var e, r, i = parseFloat(l ? t.x : t), n = parseFloat(l ? t.y : 0), a = U, s = 0, o = u.length; o--;) {\n        (e = l ? (e = u[o].x - i) * e + (r = u[o].y - n) * r : Math.abs(u[o] - i)) < a && (a = e, s = o);\n      }\n      return s = !h || a <= h ? u[s] : t, l || s === t || q(t) ? s : s + Oa(t);\n    } : Wa(u));\n  }\n  function Ya(t, e, r, i) {\n    return Ma(K(t) ? !e : !0 === r ? !!(r = 0) : !i, function () {\n      return K(t) ? t[~~(Math.random() * t.length)] : (r = r || 1e-5) && (i = r < 1 ? Math.pow(10, (r + "").length - 2) : 1) && Math.floor(Math.round((t - r / 2 + Math.random() * (e - t + .99 * r)) / r) * r * i) / i;\n    });\n  }\n  function ab(e, r, t) {\n    return Ma(t, function (t) {\n      return e[~~r(t)];\n    });\n  }\n  function db(t) {\n    for (var e, r, i, n, a = 0, s = ""; ~(e = t.indexOf("random(", a));) {\n      i = t.indexOf(")", e), n = "[" === t.charAt(e + 7), r = t.substr(e + 7, i - e - 7).match(n ? at : tt), s += t.substr(a, e - a) + Ya(n ? r : +r[0], n ? 0 : +r[1], +r[2] || 1e-5), a = i + 1;\n    }\n    return s + t.substr(a, t.length - a);\n  }\n  function gb(t, e, r) {\n    var i,\n      n,\n      a,\n      s = t.labels,\n      o = U;\n    for (i in s) {\n      (n = s[i] - e) < 0 == !!r && n && o > (n = Math.abs(n)) && (a = i, o = n);\n    }\n    return a;\n  }\n  function ib(t) {\n    return sa(t), t.progress() < 1 && xt(t, "onInterrupt"), t;\n  }\n  function nb(t, e, r) {\n    return (6 * (t = t < 0 ? t + 1 : 1 < t ? t - 1 : t) < 1 ? e + (r - e) * t * 6 : t < .5 ? r : 3 * t < 2 ? e + (r - e) * (2 / 3 - t) * 6 : e) * Ot + .5 | 0;\n  }\n  function ob(t, e, r) {\n    var i,\n      n,\n      a,\n      s,\n      o,\n      u,\n      h,\n      l,\n      f,\n      d,\n      c = t ? q(t) ? [t >> 16, t >> 8 & Ot, t & Ot] : 0 : Mt.black;\n    if (!c) {\n      if ("," === t.substr(-1) && (t = t.substr(0, t.length - 1)), Mt[t]) c = Mt[t];else if ("#" === t.charAt(0)) {\n        if (t.length < 6 && (t = "#" + (i = t.charAt(1)) + i + (n = t.charAt(2)) + n + (a = t.charAt(3)) + a + (5 === t.length ? t.charAt(4) + t.charAt(4) : "")), 9 === t.length) return [(c = parseInt(t.substr(1, 6), 16)) >> 16, c >> 8 & Ot, c & Ot, parseInt(t.substr(7), 16) / 255];\n        c = [(t = parseInt(t.substr(1), 16)) >> 16, t >> 8 & Ot, t & Ot];\n      } else if ("hsl" === t.substr(0, 3)) {\n        if (c = d = t.match(tt), e) {\n          if (~t.indexOf("=")) return c = t.match(et), r && c.length < 4 && (c[3] = 1), c;\n        } else s = +c[0] % 360 / 360, o = c[1] / 100, i = 2 * (u = c[2] / 100) - (n = u <= .5 ? u * (o + 1) : u + o - u * o), 3 < c.length && (c[3] *= 1), c[0] = nb(s + 1 / 3, i, n), c[1] = nb(s, i, n), c[2] = nb(s - 1 / 3, i, n);\n      } else c = t.match(tt) || Mt.transparent;\n      c = c.map(Number);\n    }\n    return e && !d && (i = c[0] / Ot, n = c[1] / Ot, a = c[2] / Ot, u = ((h = Math.max(i, n, a)) + (l = Math.min(i, n, a))) / 2, h === l ? s = o = 0 : (f = h - l, o = .5 < u ? f / (2 - h - l) : f / (h + l), s = h === i ? (n - a) / f + (n < a ? 6 : 0) : h === n ? (a - i) / f + 2 : (i - n) / f + 4, s *= 60), c[0] = ~~(s + .5), c[1] = ~~(100 * o + .5), c[2] = ~~(100 * u + .5)), r && c.length < 4 && (c[3] = 1), c;\n  }\n  function pb(t) {\n    var r = [],\n      i = [],\n      n = -1;\n    return t.split(kt).forEach(function (t) {\n      var e = t.match(rt) || [];\n      r.push.apply(r, e), i.push(n += e.length + 1);\n    }), r.c = i, r;\n  }\n  function qb(t, e, r) {\n    var i,\n      n,\n      a,\n      s,\n      o = "",\n      u = (t + o).match(kt),\n      h = e ? "hsla(" : "rgba(",\n      l = 0;\n    if (!u) return t;\n    if (u = u.map(function (t) {\n      return (t = ob(t, e, 1)) && h + (e ? t[0] + "," + t[1] + "%," + t[2] + "%," + t[3] : t.join(",")) + ")";\n    }), r && (a = pb(t), (i = r.c).join(o) !== a.c.join(o))) for (s = (n = t.replace(kt, "1").split(rt)).length - 1; l < s; l++) {\n      o += n[l] + (~i.indexOf(l) ? u.shift() || h + "0,0,0,0)" : (a.length ? a : u.length ? u : r).shift());\n    }\n    if (!n) for (s = (n = t.split(kt)).length - 1; l < s; l++) {\n      o += n[l] + u[l];\n    }\n    return o + n[s];\n  }\n  function tb(t) {\n    var e,\n      r = t.join(" ");\n    if (kt.lastIndex = 0, kt.test(r)) return e = Ct.test(r), t[1] = qb(t[1], e), t[0] = qb(t[0], e, pb(t[1])), !0;\n  }\n  function Cb(t) {\n    var e = (t + "").split("("),\n      r = St[e[0]];\n    return r && 1 < e.length && r.config ? r.config.apply(null, ~t.indexOf("{") ? [function _parseObjectInString(t) {\n      for (var e, r, i, n = {}, a = t.substr(1, t.length - 3).split(":"), s = a[0], o = 1, u = a.length; o < u; o++) {\n        r = a[o], e = o !== u - 1 ? r.lastIndexOf(",") : r.length, i = r.substr(0, e), n[s] = isNaN(i) ? i.replace(zt, "").trim() : +i, s = r.substr(e + 1).trim();\n      }\n      return n;\n    }(e[1])] : function _valueInParentheses(t) {\n      var e = t.indexOf("(") + 1,\n        r = t.indexOf(")"),\n        i = t.indexOf("(", e);\n      return t.substring(e, ~i && i < r ? t.indexOf(")", r + 1) : r);\n    }(t).split(",").map(ha)) : St._CE && Dt.test(t) ? St._CE("", t) : r;\n  }\n  function Eb(t, e) {\n    for (var r, i = t._first; i;) {\n      i instanceof Bt ? Eb(i, e) : !i.vars.yoyoEase || i._yoyo && i._repeat || i._yoyo === e || (i.timeline ? Eb(i.timeline, e) : (r = i._ease, i._ease = i._yEase, i._yEase = r, i._yoyo = e)), i = i._next;\n    }\n  }\n  function Gb(t, e, r, i) {\n    void 0 === r && (r = function easeOut(t) {\n      return 1 - e(1 - t);\n    }), void 0 === i && (i = function easeInOut(t) {\n      return t < .5 ? e(2 * t) / 2 : 1 - e(2 * (1 - t)) / 2;\n    });\n    var n,\n      a = {\n        easeIn: e,\n        easeOut: r,\n        easeInOut: i\n      };\n    return ba(t, function (t) {\n      for (var e in St[t] = ot[t] = a, St[n = t.toLowerCase()] = r, a) {\n        St[n + ("easeIn" === e ? ".in" : "easeOut" === e ? ".out" : ".inOut")] = St[t + "." + e] = a[e];\n      }\n    }), a;\n  }\n  function Hb(e) {\n    return function (t) {\n      return t < .5 ? (1 - e(1 - 2 * t)) / 2 : .5 + e(2 * (t - .5)) / 2;\n    };\n  }\n  function Ib(r, t, e) {\n    function Cl(t) {\n      return 1 === t ? 1 : i * Math.pow(2, -10 * t) * H((t - a) * n) + 1;\n    }\n    var i = 1 <= t ? t : 1,\n      n = (e || (r ? .3 : .45)) / (t < 1 ? t : 1),\n      a = n / X * (Math.asin(1 / i) || 0),\n      s = "out" === r ? Cl : "in" === r ? function (t) {\n        return 1 - Cl(1 - t);\n      } : Hb(Cl);\n    return n = X / n, s.config = function (t, e) {\n      return Ib(r, t, e);\n    }, s;\n  }\n  function Jb(e, r) {\n    function Kl(t) {\n      return t ? --t * t * ((r + 1) * t + r) + 1 : 0;\n    }\n    void 0 === r && (r = 1.70158);\n    var t = "out" === e ? Kl : "in" === e ? function (t) {\n      return 1 - Kl(1 - t);\n    } : Hb(Kl);\n    return t.config = function (t) {\n      return Jb(e, t);\n    }, t;\n  }\n  var L,\n    F,\n    i,\n    n,\n    a,\n    h,\n    l,\n    f,\n    d,\n    c,\n    m,\n    g,\n    y,\n    b,\n    T,\n    w,\n    x,\n    k,\n    C,\n    A,\n    S,\n    D,\n    z,\n    I,\n    E,\n    R,\n    Y = {\n      autoSleep: 120,\n      force3D: "auto",\n      nullTargetWarn: 1,\n      units: {\n        lineHeight: ""\n      }\n    },\n    B = {\n      duration: .5,\n      overwrite: !1,\n      delay: 0\n    },\n    U = 1e8,\n    j = 1 / U,\n    X = 2 * Math.PI,\n    G = X / 4,\n    V = 0,\n    J = Math.sqrt,\n    W = Math.cos,\n    H = Math.sin,\n    Z = "function" == typeof ArrayBuffer && ArrayBuffer.isView || function () {},\n    K = Array.isArray,\n    tt = /(?:-?\\.?\\d|\\.)+/gi,\n    et = /[-+=.]*\\d+[.e\\-+]*\\d*[e\\-+]*\\d*/g,\n    rt = /[-+=.]*\\d+[.e-]*\\d*[a-z%]*/g,\n    it = /[-+=.]*\\d+\\.?\\d*(?:e-|e\\+)?\\d*/gi,\n    nt = /[+-]=-?[.\\d]+/,\n    at = /[#\\-+.]*\\b[a-z\\d-=+%.]+/gi,\n    st = /[\\d.+\\-=]+(?:e[-+]\\d*)*/i,\n    ot = {},\n    ut = {},\n    ht = [],\n    lt = {},\n    ft = {},\n    dt = {},\n    ct = 30,\n    pt = [],\n    _t = "",\n    mt = function _merge(t, e) {\n      for (var r in e) {\n        t[r] = e[r];\n      }\n      return t;\n    },\n    gt = function _animationCycle(t, e) {\n      var r = Math.floor(t /= e);\n      return t && r === t ? r - 1 : r;\n    },\n    vt = {\n      _start: 0,\n      endTime: Q\n    },\n    yt = function _clamp(t, e, r) {\n      return r < t ? t : e < r ? e : r;\n    },\n    bt = [].slice,\n    Tt = function toArray(t, e) {\n      return !o(t) || e || !n && At() ? K(t) ? function _flatten(t, e, r) {\n        return void 0 === r && (r = []), t.forEach(function (t) {\n          return o(t) && !e || Ra(t, 1) ? r.push.apply(r, Tt(t)) : r.push(t);\n        }) || r;\n      }(t, e) : Ra(t) ? bt.call(t, 0) : t ? [t] : [] : bt.call(a.querySelectorAll(t), 0);\n    },\n    wt = function mapRange(e, t, r, i, n) {\n      var a = t - e,\n        s = i - r;\n      return Ma(n, function (t) {\n        return r + ((t - e) / a * s || 0);\n      });\n    },\n    xt = function _callback(t, e, r) {\n      var i,\n        n,\n        a = t.vars,\n        s = a[e];\n      if (s) return i = a[e + "Params"], n = a.callbackScope || t, r && ht.length && fa(), i ? s.apply(n, i) : s.call(n);\n    },\n    Ot = 255,\n    Mt = {\n      aqua: [0, Ot, Ot],\n      lime: [0, Ot, 0],\n      silver: [192, 192, 192],\n      black: [0, 0, 0],\n      maroon: [128, 0, 0],\n      teal: [0, 128, 128],\n      blue: [0, 0, Ot],\n      navy: [0, 0, 128],\n      white: [Ot, Ot, Ot],\n      olive: [128, 128, 0],\n      yellow: [Ot, Ot, 0],\n      orange: [Ot, 165, 0],\n      gray: [128, 128, 128],\n      purple: [128, 0, 128],\n      green: [0, 128, 0],\n      red: [Ot, 0, 0],\n      pink: [Ot, 192, 203],\n      cyan: [0, Ot, Ot],\n      transparent: [Ot, Ot, Ot, 0]\n    },\n    kt = function () {\n      var t,\n        e = "(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3,4}){1,2}\\\\b";\n      for (t in Mt) {\n        e += "|" + t + "\\\\b";\n      }\n      return new RegExp(e + ")", "gi");\n    }(),\n    Ct = /hsl[a]?\\(/,\n    Pt = (x = Date.now, k = 500, C = 33, A = x(), S = A, z = D = 1e3 / 240, b = {\n      time: 0,\n      frame: 0,\n      tick: function tick() {\n        yk(!0);\n      },\n      deltaRatio: function deltaRatio(t) {\n        return T / (1e3 / (t || 60));\n      },\n      wake: function wake() {\n        l && (!n && u() && (i = n = window, a = i.document || {}, ot.gsap = ae, (i.gsapVersions || (i.gsapVersions = [])).push(ae.version), M(h || i.GreenSockGlobals || !i.gsap && i || {}), y = i.requestAnimationFrame), m && b.sleep(), g = y || function (t) {\n          return setTimeout(t, z - 1e3 * b.time + 1 | 0);\n        }, c = 1, yk(2));\n      },\n      sleep: function sleep() {\n        (y ? i.cancelAnimationFrame : clearTimeout)(m), c = 0, g = Q;\n      },\n      lagSmoothing: function lagSmoothing(t, e) {\n        k = t || 1e8, C = Math.min(e, k, 0);\n      },\n      fps: function fps(t) {\n        D = 1e3 / (t || 240), z = 1e3 * b.time + D;\n      },\n      add: function add(t) {\n        I.indexOf(t) < 0 && I.push(t), At();\n      },\n      remove: function remove(t) {\n        var e;\n        ~(e = I.indexOf(t)) && I.splice(e, 1) && e <= w && w--;\n      },\n      _listeners: I = []\n    }),\n    At = function _wake() {\n      return !c && Pt.wake();\n    },\n    St = {},\n    Dt = /^[\\d.\\-M][\\d.\\-,\\s]/,\n    zt = /["\']/g,\n    It = function _invertEase(e) {\n      return function (t) {\n        return 1 - e(1 - t);\n      };\n    },\n    Et = function _parseEase(t, e) {\n      return t && (p(t) ? t : St[t] || Cb(t)) || e;\n    };\n  function yk(t) {\n    var e,\n      r,\n      i,\n      n,\n      a = x() - S,\n      s = !0 === t;\n    if (k < a && (A += a - C), (0 < (e = (i = (S += a) - A) - z) || s) && (n = ++b.frame, T = i - 1e3 * b.time, b.time = i /= 1e3, z += e + (D <= e ? 4 : D - e), r = 1), s || (m = g(yk)), r) for (w = 0; w < I.length; w++) {\n      I[w](i, T, n, t);\n    }\n  }\n  function _l(t) {\n    return t < R ? E * t * t : t < .7272727272727273 ? E * Math.pow(t - 1.5 / 2.75, 2) + .75 : t < .9090909090909092 ? E * (t -= 2.25 / 2.75) * t + .9375 : E * Math.pow(t - 2.625 / 2.75, 2) + .984375;\n  }\n  ba("Linear,Quad,Cubic,Quart,Quint,Strong", function (t, e) {\n    var r = e < 5 ? e + 1 : e;\n    Gb(t + ",Power" + (r - 1), e ? function (t) {\n      return Math.pow(t, r);\n    } : function (t) {\n      return t;\n    }, function (t) {\n      return 1 - Math.pow(1 - t, r);\n    }, function (t) {\n      return t < .5 ? Math.pow(2 * t, r) / 2 : 1 - Math.pow(2 * (1 - t), r) / 2;\n    });\n  }), St.Linear.easeNone = St.none = St.Linear.easeIn, Gb("Elastic", Ib("in"), Ib("out"), Ib()), E = 7.5625, R = 1 / 2.75, Gb("Bounce", function (t) {\n    return 1 - _l(1 - t);\n  }, _l), Gb("Expo", function (t) {\n    return t ? Math.pow(2, 10 * (t - 1)) : 0;\n  }), Gb("Circ", function (t) {\n    return -(J(1 - t * t) - 1);\n  }), Gb("Sine", function (t) {\n    return 1 === t ? 1 : 1 - W(t * G);\n  }), Gb("Back", Jb("in"), Jb("out"), Jb()), St.SteppedEase = St.steps = ot.SteppedEase = {\n    config: function config(t, e) {\n      void 0 === t && (t = 1);\n      var r = 1 / t,\n        i = t + (e ? 0 : 1),\n        n = e ? 1 : 0;\n      return function (t) {\n        return ((i * yt(0, .99999999, t) | 0) + n) * r;\n      };\n    }\n  }, B.ease = St["quad.out"], ba("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function (t) {\n    return _t += t + "," + t + "Params,";\n  });\n  var Rt,\n    Lt = function GSCache(t, e) {\n      this.id = V++, (t._gsap = this).target = t, this.harness = e, this.get = e ? e.get : aa, this.set = e ? e.getSetter : Wt;\n    },\n    Ft = ((Rt = Animation.prototype).delay = function delay(t) {\n      return t || 0 === t ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + t - this._delay), this._delay = t, this) : this._delay;\n    }, Rt.duration = function duration(t) {\n      return arguments.length ? this.totalDuration(0 < this._repeat ? t + (t + this._rDelay) * this._repeat : t) : this.totalDuration() && this._dur;\n    }, Rt.totalDuration = function totalDuration(t) {\n      return arguments.length ? (this._dirty = 0, Ia(this, this._repeat < 0 ? t : (t - this._repeat * this._rDelay) / (this._repeat + 1))) : this._tDur;\n    }, Rt.totalTime = function totalTime(t, e) {\n      if (At(), !arguments.length) return this._tTime;\n      var r = this._dp;\n      if (r && r.smoothChildTiming && this._ts) {\n        for (Aa(this, t), !r._dp || r.parent || Ba(r, this); r.parent;) {\n          r.parent._time !== r._start + (0 <= r._ts ? r._tTime / r._ts : (r.totalDuration() - r._tTime) / -r._ts) && r.totalTime(r._tTime, !0), r = r.parent;\n        }\n        !this.parent && this._dp.autoRemoveChildren && (0 < this._ts && t < this._tDur || this._ts < 0 && 0 < t || !this._tDur && !t) && Ca(this._dp, this, this._start - this._delay);\n      }\n      return (this._tTime !== t || !this._dur && !e || this._initted && Math.abs(this._zTime) === j || !t && !this._initted && (this.add || this._ptLookup)) && (this._ts || (this._pTime = t), ga(this, t, e)), this;\n    }, Rt.time = function time(t, e) {\n      return arguments.length ? this.totalTime(Math.min(this.totalDuration(), t + wa(this)) % this._dur || (t ? this._dur : 0), e) : this._time;\n    }, Rt.totalProgress = function totalProgress(t, e) {\n      return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;\n    }, Rt.progress = function progress(t, e) {\n      return arguments.length ? this.totalTime(this.duration() * (!this._yoyo || 1 & this.iteration() ? t : 1 - t) + wa(this), e) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;\n    }, Rt.iteration = function iteration(t, e) {\n      var r = this.duration() + this._rDelay;\n      return arguments.length ? this.totalTime(this._time + (t - 1) * r, e) : this._repeat ? gt(this._tTime, r) + 1 : 1;\n    }, Rt.timeScale = function timeScale(t) {\n      if (!arguments.length) return this._rts === -j ? 0 : this._rts;\n      if (this._rts === t) return this;\n      var e = this.parent && this._ts ? ya(this.parent._time, this) : this._tTime;\n      return this._rts = +t || 0, this._ts = this._ps || t === -j ? 0 : this._rts, function _recacheAncestors(t) {\n        for (var e = t.parent; e && e.parent;) {\n          e._dirty = 1, e.totalDuration(), e = e.parent;\n        }\n        return t;\n      }(this.totalTime(yt(-this._delay, this._tDur, e), !0));\n    }, Rt.paused = function paused(t) {\n      return arguments.length ? (this._ps !== t && ((this._ps = t) ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (At(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, 1 === this.progress() && (this._tTime -= j) && Math.abs(this._zTime) !== j))), this) : this._ps;\n    }, Rt.startTime = function startTime(t) {\n      if (arguments.length) {\n        this._start = t;\n        var e = this.parent || this._dp;\n        return !e || !e._sort && this.parent || Ca(e, this, t - this._delay), this;\n      }\n      return this._start;\n    }, Rt.endTime = function endTime(e) {\n      return this._start + (t(e) ? this.totalDuration() : this.duration()) / Math.abs(this._ts);\n    }, Rt.rawTime = function rawTime(t) {\n      var e = this.parent || this._dp;\n      return e ? t && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? ya(e.rawTime(t), this) : this._tTime : this._tTime;\n    }, Rt.globalTime = function globalTime(t) {\n      for (var e = this, r = arguments.length ? t : e.rawTime(); e;) {\n        r = e._start + r / (e._ts || 1), e = e._dp;\n      }\n      return r;\n    }, Rt.repeat = function repeat(t) {\n      return arguments.length ? (this._repeat = t === 1 / 0 ? -2 : t, Ja(this)) : -2 === this._repeat ? 1 / 0 : this._repeat;\n    }, Rt.repeatDelay = function repeatDelay(t) {\n      return arguments.length ? (this._rDelay = t, Ja(this)) : this._rDelay;\n    }, Rt.yoyo = function yoyo(t) {\n      return arguments.length ? (this._yoyo = t, this) : this._yoyo;\n    }, Rt.seek = function seek(e, r) {\n      return this.totalTime(La(this, e), t(r));\n    }, Rt.restart = function restart(e, r) {\n      return this.play().totalTime(e ? -this._delay : 0, t(r));\n    }, Rt.play = function play(t, e) {\n      return null != t && this.seek(t, e), this.reversed(!1).paused(!1);\n    }, Rt.reverse = function reverse(t, e) {\n      return null != t && this.seek(t || this.totalDuration(), e), this.reversed(!0).paused(!1);\n    }, Rt.pause = function pause(t, e) {\n      return null != t && this.seek(t, e), this.paused(!0);\n    }, Rt.resume = function resume() {\n      return this.paused(!1);\n    }, Rt.reversed = function reversed(t) {\n      return arguments.length ? (!!t !== this.reversed() && this.timeScale(-this._rts || (t ? -j : 0)), this) : this._rts < 0;\n    }, Rt.invalidate = function invalidate() {\n      return this._initted = this._act = 0, this._zTime = -j, this;\n    }, Rt.isActive = function isActive() {\n      var t,\n        e = this.parent || this._dp,\n        r = this._start;\n      return !(e && !(this._ts && this._initted && e.isActive() && (t = e.rawTime(!0)) >= r && t < this.endTime(!0) - j));\n    }, Rt.eventCallback = function eventCallback(t, e, r) {\n      var i = this.vars;\n      return 1 < arguments.length ? (e ? (i[t] = e, r && (i[t + "Params"] = r), "onUpdate" === t && (this._onUpdate = e)) : delete i[t], this) : i[t];\n    }, Rt.then = function then(t) {\n      var i = this;\n      return new Promise(function (e) {\n        function rn() {\n          var t = i.then;\n          i.then = null, p(r) && (r = r(i)) && (r.then || r === i) && (i.then = t), e(r), i.then = t;\n        }\n        var r = p(t) ? t : ia;\n        i._initted && 1 === i.totalProgress() && 0 <= i._ts || !i._tTime && i._ts < 0 ? rn() : i._prom = rn;\n      });\n    }, Rt.kill = function kill() {\n      ib(this);\n    }, Animation);\n  function Animation(t, e) {\n    var r = t.parent || F;\n    this.vars = t, this._delay = +t.delay || 0, (this._repeat = t.repeat === 1 / 0 ? -2 : t.repeat || 0) && (this._rDelay = t.repeatDelay || 0, this._yoyo = !!t.yoyo || !!t.yoyoEase), this._ts = 1, Ia(this, +t.duration, 1, 1), this.data = t.data, c || Pt.wake(), r && Ca(r, this, e || 0 === e ? e : r._time, 1), t.reversed && this.reverse(), t.paused && this.paused(!0);\n  }\n  ja(Ft.prototype, {\n    _time: 0,\n    _start: 0,\n    _end: 0,\n    _tTime: 0,\n    _tDur: 0,\n    _dirty: 0,\n    _repeat: 0,\n    _yoyo: !1,\n    parent: null,\n    _initted: !1,\n    _rDelay: 0,\n    _ts: 1,\n    _dp: 0,\n    ratio: 0,\n    _zTime: -j,\n    _prom: 0,\n    _ps: !1,\n    _rts: 1\n  });\n  var Bt = function (n) {\n    function Timeline(e, r) {\n      var i;\n      return void 0 === e && (e = {}), (i = n.call(this, e, r) || this).labels = {}, i.smoothChildTiming = !!e.smoothChildTiming, i.autoRemoveChildren = !!e.autoRemoveChildren, i._sort = t(e.sortChildren), i.parent && Ba(i.parent, _assertThisInitialized(i)), e.scrollTrigger && Da(_assertThisInitialized(i), e.scrollTrigger), i;\n    }\n    _inheritsLoose(Timeline, n);\n    var e = Timeline.prototype;\n    return e.to = function to(t, e, r, i) {\n      return new Gt(t, ea(arguments, 0, this), La(this, q(e) ? i : r)), this;\n    }, e.from = function from(t, e, r, i) {\n      return new Gt(t, ea(arguments, 1, this), La(this, q(e) ? i : r)), this;\n    }, e.fromTo = function fromTo(t, e, r, i, n) {\n      return new Gt(t, ea(arguments, 2, this), La(this, q(e) ? n : i)), this;\n    }, e.set = function set(t, e, r) {\n      return e.duration = 0, e.parent = this, oa(e).repeatDelay || (e.repeat = 0), e.immediateRender = !!e.immediateRender, new Gt(t, e, La(this, r), 1), this;\n    }, e.call = function call(t, e, r) {\n      return Ca(this, Gt.delayedCall(0, t, e), La(this, r));\n    }, e.staggerTo = function staggerTo(t, e, r, i, n, a, s) {\n      return r.duration = e, r.stagger = r.stagger || i, r.onComplete = a, r.onCompleteParams = s, r.parent = this, new Gt(t, r, La(this, n)), this;\n    }, e.staggerFrom = function staggerFrom(e, r, i, n, a, s, o) {\n      return i.runBackwards = 1, oa(i).immediateRender = t(i.immediateRender), this.staggerTo(e, r, i, n, a, s, o);\n    }, e.staggerFromTo = function staggerFromTo(e, r, i, n, a, s, o, u) {\n      return n.startAt = i, oa(n).immediateRender = t(n.immediateRender), this.staggerTo(e, r, n, a, s, o, u);\n    }, e.render = function render(t, e, r) {\n      var i,\n        n,\n        a,\n        s,\n        o,\n        u,\n        h,\n        l,\n        f,\n        d,\n        c,\n        p,\n        _ = this._time,\n        m = this._dirty ? this.totalDuration() : this._tDur,\n        g = this._dur,\n        v = this !== F && m - j < t && 0 <= t ? m : t < j ? 0 : t,\n        y = this._zTime < 0 != t < 0 && (this._initted || !g);\n      if (v !== this._tTime || r || y) {\n        if (_ !== this._time && g && (v += this._time - _, t += this._time - _), i = v, f = this._start, u = !(l = this._ts), y && (g || (_ = this._zTime), !t && e || (this._zTime = t)), this._repeat) {\n          if (c = this._yoyo, o = g + this._rDelay, this._repeat < -1 && t < 0) return this.totalTime(100 * o + t, e, r);\n          if (i = ca(v % o), v === m ? (s = this._repeat, i = g) : ((s = ~~(v / o)) && s === v / o && (i = g, s--), g < i && (i = g)), d = gt(this._tTime, o), !_ && this._tTime && d !== s && (d = s), c && 1 & s && (i = g - i, p = 1), s !== d && !this._lock) {\n            var b = c && 1 & d,\n              T = b === (c && 1 & s);\n            if (s < d && (b = !b), _ = b ? 0 : g, this._lock = 1, this.render(_ || (p ? 0 : ca(s * o)), e, !g)._lock = 0, !e && this.parent && xt(this, "onRepeat"), this.vars.repeatRefresh && !p && (this.invalidate()._lock = 1), _ !== this._time || u != !this._ts) return this;\n            if (g = this._dur, m = this._tDur, T && (this._lock = 2, _ = b ? g : -1e-4, this.render(_, !0), this.vars.repeatRefresh && !p && this.invalidate()), this._lock = 0, !this._ts && !u) return this;\n            Eb(this, p);\n          }\n        }\n        if (this._hasPause && !this._forcing && this._lock < 2 && (h = function _findNextPauseTween(t, e, r) {\n          var i;\n          if (e < r) for (i = t._first; i && i._start <= r;) {\n            if (!i._dur && "isPause" === i.data && i._start > e) return i;\n            i = i._next;\n          } else for (i = t._last; i && i._start >= r;) {\n            if (!i._dur && "isPause" === i.data && i._start < e) return i;\n            i = i._prev;\n          }\n        }(this, ca(_), ca(i))) && (v -= i - (i = h._start)), this._tTime = v, this._time = i, this._act = !l, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = t, _ = 0), _ || !(i || !g && 0 <= t) || e || xt(this, "onStart"), _ <= i && 0 <= t) for (n = this._first; n;) {\n          if (a = n._next, (n._act || i >= n._start) && n._ts && h !== n) {\n            if (n.parent !== this) return this.render(t, e, r);\n            if (n.render(0 < n._ts ? (i - n._start) * n._ts : (n._dirty ? n.totalDuration() : n._tDur) + (i - n._start) * n._ts, e, r), i !== this._time || !this._ts && !u) {\n              h = 0, a && (v += this._zTime = -j);\n              break;\n            }\n          }\n          n = a;\n        } else {\n          n = this._last;\n          for (var w = t < 0 ? t : i; n;) {\n            if (a = n._prev, (n._act || w <= n._end) && n._ts && h !== n) {\n              if (n.parent !== this) return this.render(t, e, r);\n              if (n.render(0 < n._ts ? (w - n._start) * n._ts : (n._dirty ? n.totalDuration() : n._tDur) + (w - n._start) * n._ts, e, r), i !== this._time || !this._ts && !u) {\n                h = 0, a && (v += this._zTime = w ? -j : j);\n                break;\n              }\n            }\n            n = a;\n          }\n        }\n        if (h && !e && (this.pause(), h.render(_ <= i ? 0 : -j)._zTime = _ <= i ? 1 : -1, this._ts)) return this._start = f, za(this), this.render(t, e, r);\n        this._onUpdate && !e && xt(this, "onUpdate", !0), (v === m && m >= this.totalDuration() || !v && _) && (f !== this._start && Math.abs(l) === Math.abs(this._ts) || this._lock || (!t && g || !(v === m && 0 < this._ts || !v && this._ts < 0) || sa(this, 1), e || t < 0 && !_ || !v && !_ || (xt(this, v === m ? "onComplete" : "onReverseComplete", !0), !this._prom || v < m && 0 < this.timeScale() || this._prom())));\n      }\n      return this;\n    }, e.add = function add(t, e) {\n      var r = this;\n      if (q(e) || (e = La(this, e)), !(t instanceof Ft)) {\n        if (K(t)) return t.forEach(function (t) {\n          return r.add(t, e);\n        }), this;\n        if (o(t)) return this.addLabel(t, e);\n        if (!p(t)) return this;\n        t = Gt.delayedCall(0, t);\n      }\n      return this !== t ? Ca(this, t, e) : this;\n    }, e.getChildren = function getChildren(t, e, r, i) {\n      void 0 === t && (t = !0), void 0 === e && (e = !0), void 0 === r && (r = !0), void 0 === i && (i = -U);\n      for (var n = [], a = this._first; a;) {\n        a._start >= i && (a instanceof Gt ? e && n.push(a) : (r && n.push(a), t && n.push.apply(n, a.getChildren(!0, e, r)))), a = a._next;\n      }\n      return n;\n    }, e.getById = function getById(t) {\n      for (var e = this.getChildren(1, 1, 1), r = e.length; r--;) {\n        if (e[r].vars.id === t) return e[r];\n      }\n    }, e.remove = function remove(t) {\n      return o(t) ? this.removeLabel(t) : p(t) ? this.killTweensOf(t) : (ra(this, t), t === this._recent && (this._recent = this._last), ta(this));\n    }, e.totalTime = function totalTime(t, e) {\n      return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = ca(Pt.time - (0 < this._ts ? t / this._ts : (this.totalDuration() - t) / -this._ts))), n.prototype.totalTime.call(this, t, e), this._forcing = 0, this) : this._tTime;\n    }, e.addLabel = function addLabel(t, e) {\n      return this.labels[t] = La(this, e), this;\n    }, e.removeLabel = function removeLabel(t) {\n      return delete this.labels[t], this;\n    }, e.addPause = function addPause(t, e, r) {\n      var i = Gt.delayedCall(0, e || Q, r);\n      return i.data = "isPause", this._hasPause = 1, Ca(this, i, La(this, t));\n    }, e.removePause = function removePause(t) {\n      var e = this._first;\n      for (t = La(this, t); e;) {\n        e._start === t && "isPause" === e.data && sa(e), e = e._next;\n      }\n    }, e.killTweensOf = function killTweensOf(t, e, r) {\n      for (var i = this.getTweensOf(t, r), n = i.length; n--;) {\n        qt !== i[n] && i[n].kill(t, e);\n      }\n      return this;\n    }, e.getTweensOf = function getTweensOf(t, e) {\n      for (var r, i = [], n = Tt(t), a = this._first, s = q(e); a;) {\n        a instanceof Gt ? da(a._targets, n) && (s ? (!qt || a._initted && a._ts) && a.globalTime(0) <= e && a.globalTime(a.totalDuration()) > e : !e || a.isActive()) && i.push(a) : (r = a.getTweensOf(n, e)).length && i.push.apply(i, r), a = a._next;\n      }\n      return i;\n    }, e.tweenTo = function tweenTo(t, e) {\n      e = e || {};\n      var r = this,\n        i = La(r, t),\n        n = e.startAt,\n        a = e.onStart,\n        s = e.onStartParams,\n        o = e.immediateRender,\n        u = Gt.to(r, ja({\n          ease: "none",\n          lazy: !1,\n          immediateRender: !1,\n          time: i,\n          overwrite: "auto",\n          duration: e.duration || Math.abs((i - (n && "time" in n ? n.time : r._time)) / r.timeScale()) || j,\n          onStart: function onStart() {\n            r.pause();\n            var t = e.duration || Math.abs((i - r._time) / r.timeScale());\n            u._dur !== t && Ia(u, t, 0, 1).render(u._time, !0, !0), a && a.apply(u, s || []);\n          }\n        }, e));\n      return o ? u.render(0) : u;\n    }, e.tweenFromTo = function tweenFromTo(t, e, r) {\n      return this.tweenTo(e, ja({\n        startAt: {\n          time: La(this, t)\n        }\n      }, r));\n    }, e.recent = function recent() {\n      return this._recent;\n    }, e.nextLabel = function nextLabel(t) {\n      return void 0 === t && (t = this._time), gb(this, La(this, t));\n    }, e.previousLabel = function previousLabel(t) {\n      return void 0 === t && (t = this._time), gb(this, La(this, t), 1);\n    }, e.currentLabel = function currentLabel(t) {\n      return arguments.length ? this.seek(t, !0) : this.previousLabel(this._time + j);\n    }, e.shiftChildren = function shiftChildren(t, e, r) {\n      void 0 === r && (r = 0);\n      for (var i, n = this._first, a = this.labels; n;) {\n        n._start >= r && (n._start += t, n._end += t), n = n._next;\n      }\n      if (e) for (i in a) {\n        a[i] >= r && (a[i] += t);\n      }\n      return ta(this);\n    }, e.invalidate = function invalidate() {\n      var t = this._first;\n      for (this._lock = 0; t;) {\n        t.invalidate(), t = t._next;\n      }\n      return n.prototype.invalidate.call(this);\n    }, e.clear = function clear(t) {\n      void 0 === t && (t = !0);\n      for (var e, r = this._first; r;) {\n        e = r._next, this.remove(r), r = e;\n      }\n      return this._dp && (this._time = this._tTime = this._pTime = 0), t && (this.labels = {}), ta(this);\n    }, e.totalDuration = function totalDuration(t) {\n      var e,\n        r,\n        i,\n        n = 0,\n        a = this,\n        s = a._last,\n        o = U;\n      if (arguments.length) return a.timeScale((a._repeat < 0 ? a.duration() : a.totalDuration()) / (a.reversed() ? -t : t));\n      if (a._dirty) {\n        for (i = a.parent; s;) {\n          e = s._prev, s._dirty && s.totalDuration(), o < (r = s._start) && a._sort && s._ts && !a._lock ? (a._lock = 1, Ca(a, s, r - s._delay, 1)._lock = 0) : o = r, r < 0 && s._ts && (n -= r, (!i && !a._dp || i && i.smoothChildTiming) && (a._start += r / a._ts, a._time -= r, a._tTime -= r), a.shiftChildren(-r, !1, -Infinity), o = 0), s._end > n && s._ts && (n = s._end), s = e;\n        }\n        Ia(a, a === F && a._time > n ? a._time : n, 1, 1), a._dirty = 0;\n      }\n      return a._tDur;\n    }, Timeline.updateRoot = function updateRoot(t) {\n      if (F._ts && (ga(F, ya(t, F)), f = Pt.frame), Pt.frame >= ct) {\n        ct += Y.autoSleep || 120;\n        var e = F._first;\n        if ((!e || !e._ts) && Y.autoSleep && Pt._listeners.length < 2) {\n          for (; e && !e._ts;) {\n            e = e._next;\n          }\n          e || Pt.sleep();\n        }\n      }\n    }, Timeline;\n  }(Ft);\n  ja(Bt.prototype, {\n    _lock: 0,\n    _hasPause: 0,\n    _forcing: 0\n  });\n  function Qb(t, e, r, i, n, a) {\n    var u, h, l, f;\n    if (ft[t] && !1 !== (u = new ft[t]()).init(n, u.rawVars ? e[t] : function _processVars(t, e, r, i, n) {\n      if (p(t) && (t = Ut(t, n, e, r, i)), !s(t) || t.style && t.nodeType || K(t) || Z(t)) return o(t) ? Ut(t, n, e, r, i) : t;\n      var a,\n        u = {};\n      for (a in t) {\n        u[a] = Ut(t[a], n, e, r, i);\n      }\n      return u;\n    }(e[t], i, n, a, r), r, i, a) && (r._pt = h = new ie(r._pt, n, t, 0, 1, u.render, u, 0, u.priority), r !== d)) for (l = r._ptLookup[r._targets.indexOf(n)], f = u._props.length; f--;) {\n      l[u._props[f]] = h;\n    }\n    return u;\n  }\n  var qt,\n    Yt = function _addPropTween(t, e, r, i, n, a, s, u, h) {\n      p(i) && (i = i(n || 0, t, a));\n      var l,\n        f = t[e],\n        d = "get" !== r ? r : p(f) ? h ? t[e.indexOf("set") || !p(t["get" + e.substr(3)]) ? e : "get" + e.substr(3)](h) : t[e]() : f,\n        c = p(f) ? h ? Jt : Qt : Vt;\n      if (o(i) && (~i.indexOf("random(") && (i = db(i)), "=" === i.charAt(1) && (i = parseFloat(d) + parseFloat(i.substr(2)) * ("-" === i.charAt(0) ? -1 : 1) + (Oa(d) || 0))), d !== i) return isNaN(d * i) ? (f || e in t || N(e, i), function _addComplexStringPropTween(t, e, r, i, n, a, s) {\n        var o,\n          u,\n          h,\n          l,\n          f,\n          d,\n          c,\n          p,\n          _ = new ie(this._pt, t, e, 0, 1, Zt, null, n),\n          m = 0,\n          g = 0;\n        for (_.b = r, _.e = i, r += "", (c = ~(i += "").indexOf("random(")) && (i = db(i)), a && (a(p = [r, i], t, e), r = p[0], i = p[1]), u = r.match(it) || []; o = it.exec(i);) {\n          l = o[0], f = i.substring(m, o.index), h ? h = (h + 1) % 5 : "rgba(" === f.substr(-5) && (h = 1), l !== u[g++] && (d = parseFloat(u[g - 1]) || 0, _._pt = {\n            _next: _._pt,\n            p: f || 1 === g ? f : ",",\n            s: d,\n            c: "=" === l.charAt(1) ? parseFloat(l.substr(2)) * ("-" === l.charAt(0) ? -1 : 1) : parseFloat(l) - d,\n            m: h && h < 4 ? Math.round : 0\n          }, m = it.lastIndex);\n        }\n        return _.c = m < i.length ? i.substring(m, i.length) : "", _.fp = s, (nt.test(i) || c) && (_.e = 0), this._pt = _;\n      }.call(this, t, e, d, i, c, u || Y.stringFilter, h)) : (l = new ie(this._pt, t, e, +d || 0, i - (d || 0), "boolean" == typeof f ? $t : Ht, 0, c), h && (l.fp = h), s && l.modifier(s, this, t), this._pt = l);\n    },\n    Nt = function _initTween(e, r) {\n      var i,\n        n,\n        a,\n        s,\n        o,\n        u,\n        h,\n        l,\n        f,\n        d,\n        c,\n        p,\n        m,\n        g = e.vars,\n        v = g.ease,\n        y = g.startAt,\n        b = g.immediateRender,\n        T = g.lazy,\n        w = g.onUpdate,\n        x = g.onUpdateParams,\n        O = g.callbackScope,\n        M = g.runBackwards,\n        k = g.yoyoEase,\n        C = g.keyframes,\n        P = g.autoRevert,\n        A = e._dur,\n        S = e._startAt,\n        D = e._targets,\n        z = e.parent,\n        I = z && "nested" === z.data ? z.parent._targets : D,\n        E = "auto" === e._overwrite && !L,\n        R = e.timeline;\n      if (!R || C && v || (v = "none"), e._ease = Et(v, B.ease), e._yEase = k ? It(Et(!0 === k ? v : k, B.ease)) : 0, k && e._yoyo && !e._repeat && (k = e._yEase, e._yEase = e._ease, e._ease = k), !R) {\n        if (p = (l = D[0] ? _(D[0]).harness : 0) && g[l.prop], i = na(g, ut), S && S.render(-1, !0).kill(), y) {\n          if (sa(e._startAt = Gt.set(D, ja({\n            data: "isStart",\n            overwrite: !1,\n            parent: z,\n            immediateRender: !0,\n            lazy: t(T),\n            startAt: null,\n            delay: 0,\n            onUpdate: w,\n            onUpdateParams: x,\n            callbackScope: O,\n            stagger: 0\n          }, y))), b) if (0 < r) P || (e._startAt = 0);else if (A && !(r < 0 && S)) return void (r && (e._zTime = r));\n        } else if (M && A) if (S) P || (e._startAt = 0);else if (r && (b = !1), a = ja({\n          overwrite: !1,\n          data: "isFromStart",\n          lazy: b && t(T),\n          immediateRender: b,\n          stagger: 0,\n          parent: z\n        }, i), p && (a[l.prop] = p), sa(e._startAt = Gt.set(D, a)), b) {\n          if (!r) return;\n        } else _initTween(e._startAt, j);\n        for (e._pt = 0, T = A && t(T) || T && !A, n = 0; n < D.length; n++) {\n          if (h = (o = D[n])._gsap || $(D)[n]._gsap, e._ptLookup[n] = d = {}, lt[h.id] && ht.length && fa(), c = I === D ? n : I.indexOf(o), l && !1 !== (f = new l()).init(o, p || i, e, c, I) && (e._pt = s = new ie(e._pt, o, f.name, 0, 1, f.render, f, 0, f.priority), f._props.forEach(function (t) {\n            d[t] = s;\n          }), f.priority && (u = 1)), !l || p) for (a in i) {\n            ft[a] && (f = Qb(a, i, e, c, o, I)) ? f.priority && (u = 1) : d[a] = s = Yt.call(e, o, a, "get", i[a], c, I, 0, g.stringFilter);\n          }\n          e._op && e._op[n] && e.kill(o, e._op[n]), E && e._pt && (qt = e, F.killTweensOf(o, d, e.globalTime(0)), m = !e.parent, qt = 0), e._pt && T && (lt[h.id] = 1);\n        }\n        u && re(e), e._onInit && e._onInit(e);\n      }\n      e._from = !R && !!g.runBackwards, e._onUpdate = w, e._initted = (!e._op || e._pt) && !m;\n    },\n    Ut = function _parseFuncOrString(t, e, r, i, n) {\n      return p(t) ? t.call(e, r, i, n) : o(t) && ~t.indexOf("random(") ? db(t) : t;\n    },\n    jt = _t + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",\n    Xt = (jt + ",id,stagger,delay,duration,paused,scrollTrigger").split(","),\n    Gt = function (A) {\n      function Tween(e, r, i, n) {\n        var a;\n        "number" == typeof r && (i.duration = r, r = i, i = null);\n        var o,\n          u,\n          h,\n          l,\n          f,\n          d,\n          c,\n          p,\n          _ = (a = A.call(this, n ? r : oa(r), i) || this).vars,\n          m = _.duration,\n          g = _.delay,\n          y = _.immediateRender,\n          b = _.stagger,\n          T = _.overwrite,\n          w = _.keyframes,\n          x = _.defaults,\n          M = _.scrollTrigger,\n          k = _.yoyoEase,\n          C = a.parent,\n          P = (K(e) || Z(e) ? q(e[0]) : "length" in r) ? [e] : Tt(e);\n        if (a._targets = P.length ? $(P) : O("GSAP target " + e + " not found. https://greensock.com", !Y.nullTargetWarn) || [], a._ptLookup = [], a._overwrite = T, w || b || v(m) || v(g)) {\n          if (r = a.vars, (o = a.timeline = new Bt({\n            data: "nested",\n            defaults: x || {}\n          })).kill(), o.parent = o._dp = _assertThisInitialized(a), o._start = 0, w) ja(o.vars.defaults, {\n            ease: "none"\n          }), w.forEach(function (t) {\n            return o.to(P, t, ">");\n          });else {\n            if (l = P.length, c = b ? Va(b) : Q, s(b)) for (f in b) {\n              ~jt.indexOf(f) && ((p = p || {})[f] = b[f]);\n            }\n            for (u = 0; u < l; u++) {\n              for (f in h = {}, r) {\n                Xt.indexOf(f) < 0 && (h[f] = r[f]);\n              }\n              h.stagger = 0, k && (h.yoyoEase = k), p && mt(h, p), d = P[u], h.duration = +Ut(m, _assertThisInitialized(a), u, d, P), h.delay = (+Ut(g, _assertThisInitialized(a), u, d, P) || 0) - a._delay, !b && 1 === l && h.delay && (a._delay = g = h.delay, a._start += g, h.delay = 0), o.to(d, h, c(u, d, P));\n            }\n            o.duration() ? m = g = 0 : a.timeline = 0;\n          }\n          m || a.duration(m = o.duration());\n        } else a.timeline = 0;\n        return !0 !== T || L || (qt = _assertThisInitialized(a), F.killTweensOf(P), qt = 0), C && Ba(C, _assertThisInitialized(a)), (y || !m && !w && a._start === ca(C._time) && t(y) && function _hasNoPausedAncestors(t) {\n          return !t || t._ts && _hasNoPausedAncestors(t.parent);\n        }(_assertThisInitialized(a)) && "nested" !== C.data) && (a._tTime = -j, a.render(Math.max(0, -g))), M && Da(_assertThisInitialized(a), M), a;\n      }\n      _inheritsLoose(Tween, A);\n      var e = Tween.prototype;\n      return e.render = function render(t, e, r) {\n        var i,\n          n,\n          a,\n          s,\n          o,\n          u,\n          h,\n          l,\n          f,\n          d = this._time,\n          c = this._tDur,\n          p = this._dur,\n          _ = c - j < t && 0 <= t ? c : t < j ? 0 : t;\n        if (p) {\n          if (_ !== this._tTime || !t || r || !this._initted && this._tTime || this._startAt && this._zTime < 0 != t < 0) {\n            if (i = _, l = this.timeline, this._repeat) {\n              if (s = p + this._rDelay, this._repeat < -1 && t < 0) return this.totalTime(100 * s + t, e, r);\n              if (i = ca(_ % s), _ === c ? (a = this._repeat, i = p) : ((a = ~~(_ / s)) && a === _ / s && (i = p, a--), p < i && (i = p)), (u = this._yoyo && 1 & a) && (f = this._yEase, i = p - i), o = gt(this._tTime, s), i === d && !r && this._initted) return this;\n              a !== o && (l && this._yEase && Eb(l, u), !this.vars.repeatRefresh || u || this._lock || (this._lock = r = 1, this.render(ca(s * a), !0).invalidate()._lock = 0));\n            }\n            if (!this._initted) {\n              if (Ea(this, t < 0 ? t : i, r, e)) return this._tTime = 0, this;\n              if (p !== this._dur) return this.render(t, e, r);\n            }\n            for (this._tTime = _, this._time = i, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = h = (f || this._ease)(i / p), this._from && (this.ratio = h = 1 - h), !i || d || e || xt(this, "onStart"), n = this._pt; n;) {\n              n.r(h, n.d), n = n._next;\n            }\n            l && l.render(t < 0 ? t : !i && u ? -j : l._dur * h, e, r) || this._startAt && (this._zTime = t), this._onUpdate && !e && (t < 0 && this._startAt && this._startAt.render(t, !0, r), xt(this, "onUpdate")), this._repeat && a !== o && this.vars.onRepeat && !e && this.parent && xt(this, "onRepeat"), _ !== this._tDur && _ || this._tTime !== _ || (t < 0 && this._startAt && !this._onUpdate && this._startAt.render(t, !0, !0), !t && p || !(_ === this._tDur && 0 < this._ts || !_ && this._ts < 0) || sa(this, 1), e || t < 0 && !d || !_ && !d || (xt(this, _ === c ? "onComplete" : "onReverseComplete", !0), !this._prom || _ < c && 0 < this.timeScale() || this._prom()));\n          }\n        } else !function _renderZeroDurationTween(t, e, r, i) {\n          var n,\n            a,\n            s,\n            o = t.ratio,\n            u = e < 0 || !e && (!t._start && function _parentPlayheadIsBeforeStart(t) {\n              var e = t.parent;\n              return e && e._ts && e._initted && !e._lock && (e.rawTime() < 0 || _parentPlayheadIsBeforeStart(e));\n            }(t) || (t._ts < 0 || t._dp._ts < 0) && "isFromStart" !== t.data && "isStart" !== t.data) ? 0 : 1,\n            h = t._rDelay,\n            l = 0;\n          if (h && t._repeat && (l = yt(0, t._tDur, e), a = gt(l, h), s = gt(t._tTime, h), t._yoyo && 1 & a && (u = 1 - u), a !== s && (o = 1 - u, t.vars.repeatRefresh && t._initted && t.invalidate())), u !== o || i || t._zTime === j || !e && t._zTime) {\n            if (!t._initted && Ea(t, e, i, r)) return;\n            for (s = t._zTime, t._zTime = e || (r ? j : 0), r = r || e && !s, t.ratio = u, t._from && (u = 1 - u), t._time = 0, t._tTime = l, r || xt(t, "onStart"), n = t._pt; n;) {\n              n.r(u, n.d), n = n._next;\n            }\n            t._startAt && e < 0 && t._startAt.render(e, !0, !0), t._onUpdate && !r && xt(t, "onUpdate"), l && t._repeat && !r && t.parent && xt(t, "onRepeat"), (e >= t._tDur || e < 0) && t.ratio === u && (u && sa(t, 1), r || (xt(t, u ? "onComplete" : "onReverseComplete", !0), t._prom && t._prom()));\n          } else t._zTime || (t._zTime = e);\n        }(this, t, e, r);\n        return this;\n      }, e.targets = function targets() {\n        return this._targets;\n      }, e.invalidate = function invalidate() {\n        return this._pt = this._op = this._startAt = this._onUpdate = this._lazy = this.ratio = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(), A.prototype.invalidate.call(this);\n      }, e.kill = function kill(t, e) {\n        if (void 0 === e && (e = "all"), !(t || e && "all" !== e)) return this._lazy = this._pt = 0, this.parent ? ib(this) : this;\n        if (this.timeline) {\n          var r = this.timeline.totalDuration();\n          return this.timeline.killTweensOf(t, e, qt && !0 !== qt.vars.overwrite)._first || ib(this), this.parent && r !== this.timeline.totalDuration() && Ia(this, this._dur * this.timeline._tDur / r, 0, 1), this;\n        }\n        var i,\n          n,\n          a,\n          s,\n          u,\n          h,\n          l,\n          f = this._targets,\n          d = t ? Tt(t) : f,\n          c = this._ptLookup,\n          p = this._pt;\n        if ((!e || "all" === e) && function _arraysMatch(t, e) {\n          for (var r = t.length, i = r === e.length; i && r-- && t[r] === e[r];) {\n            ;\n          }\n          return r < 0;\n        }(f, d)) return "all" === e && (this._pt = 0), ib(this);\n        for (i = this._op = this._op || [], "all" !== e && (o(e) && (u = {}, ba(e, function (t) {\n          return u[t] = 1;\n        }), e = u), e = function _addAliasesToVars(t, e) {\n          var r,\n            i,\n            n,\n            a,\n            s = t[0] ? _(t[0]).harness : 0,\n            o = s && s.aliases;\n          if (!o) return e;\n          for (i in r = mt({}, e), o) {\n            if ((i in r)) for (n = (a = o[i].split(",")).length; n--;) {\n              r[a[n]] = r[i];\n            }\n          }\n          return r;\n        }(f, e)), l = f.length; l--;) {\n          if (~d.indexOf(f[l])) for (u in n = c[l], "all" === e ? (i[l] = e, s = n, a = {}) : (a = i[l] = i[l] || {}, s = e), s) {\n            (h = n && n[u]) && ("kill" in h.d && !0 !== h.d.kill(u) || ra(this, h, "_pt"), delete n[u]), "all" !== a && (a[u] = 1);\n          }\n        }\n        return this._initted && !this._pt && p && ib(this), this;\n      }, Tween.to = function to(t, e, r) {\n        return new Tween(t, e, r);\n      }, Tween.from = function from(t, e) {\n        return new Tween(t, ea(arguments, 1));\n      }, Tween.delayedCall = function delayedCall(t, e, r, i) {\n        return new Tween(e, 0, {\n          immediateRender: !1,\n          lazy: !1,\n          overwrite: !1,\n          delay: t,\n          onComplete: e,\n          onReverseComplete: e,\n          onCompleteParams: r,\n          onReverseCompleteParams: r,\n          callbackScope: i\n        });\n      }, Tween.fromTo = function fromTo(t, e, r) {\n        return new Tween(t, ea(arguments, 2));\n      }, Tween.set = function set(t, e) {\n        return e.duration = 0, e.repeatDelay || (e.repeat = 0), new Tween(t, e);\n      }, Tween.killTweensOf = function killTweensOf(t, e, r) {\n        return F.killTweensOf(t, e, r);\n      }, Tween;\n    }(Ft);\n  ja(Gt.prototype, {\n    _targets: [],\n    _lazy: 0,\n    _startAt: 0,\n    _op: 0,\n    _onInit: 0\n  }), ba("staggerTo,staggerFrom,staggerFromTo", function (r) {\n    Gt[r] = function () {\n      var t = new Bt(),\n        e = bt.call(arguments, 0);\n      return e.splice("staggerFromTo" === r ? 5 : 4, 0, 0), t[r].apply(t, e);\n    };\n  });\n  function _b(t, e, r) {\n    return t.setAttribute(e, r);\n  }\n  function hc(t, e, r, i) {\n    i.mSet(t, e, i.m.call(i.tween, r, i.mt), i);\n  }\n  var Vt = function _setterPlain(t, e, r) {\n      return t[e] = r;\n    },\n    Qt = function _setterFunc(t, e, r) {\n      return t[e](r);\n    },\n    Jt = function _setterFuncWithParam(t, e, r, i) {\n      return t[e](i.fp, r);\n    },\n    Wt = function _getSetter(t, e) {\n      return p(t[e]) ? Qt : r(t[e]) && t.setAttribute ? _b : Vt;\n    },\n    Ht = function _renderPlain(t, e) {\n      return e.set(e.t, e.p, Math.round(1e4 * (e.s + e.c * t)) / 1e4, e);\n    },\n    $t = function _renderBoolean(t, e) {\n      return e.set(e.t, e.p, !!(e.s + e.c * t), e);\n    },\n    Zt = function _renderComplexString(t, e) {\n      var r = e._pt,\n        i = "";\n      if (!t && e.b) i = e.b;else if (1 === t && e.e) i = e.e;else {\n        for (; r;) {\n          i = r.p + (r.m ? r.m(r.s + r.c * t) : Math.round(1e4 * (r.s + r.c * t)) / 1e4) + i, r = r._next;\n        }\n        i += e.c;\n      }\n      e.set(e.t, e.p, i, e);\n    },\n    Kt = function _renderPropTweens(t, e) {\n      for (var r = e._pt; r;) {\n        r.r(t, r.d), r = r._next;\n      }\n    },\n    te = function _addPluginModifier(t, e, r, i) {\n      for (var n, a = this._pt; a;) {\n        n = a._next, a.p === i && a.modifier(t, e, r), a = n;\n      }\n    },\n    ee = function _killPropTweensOf(t) {\n      for (var e, r, i = this._pt; i;) {\n        r = i._next, i.p === t && !i.op || i.op === t ? ra(this, i, "_pt") : i.dep || (e = 1), i = r;\n      }\n      return !e;\n    },\n    re = function _sortPropTweensByPriority(t) {\n      for (var e, r, i, n, a = t._pt; a;) {\n        for (e = a._next, r = i; r && r.pr > a.pr;) {\n          r = r._next;\n        }\n        (a._prev = r ? r._prev : n) ? a._prev._next = a : i = a, (a._next = r) ? r._prev = a : n = a, a = e;\n      }\n      t._pt = i;\n    },\n    ie = (PropTween.prototype.modifier = function modifier(t, e, r) {\n      this.mSet = this.mSet || this.set, this.set = hc, this.m = t, this.mt = r, this.tween = e;\n    }, PropTween);\n  function PropTween(t, e, r, i, n, a, s, o, u) {\n    this.t = e, this.s = i, this.c = n, this.p = r, this.r = a || Ht, this.d = s || this, this.set = o || Vt, this.pr = u || 0, (this._next = t) && (t._prev = this);\n  }\n  ba(_t + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function (t) {\n    return ut[t] = 1;\n  }), ot.TweenMax = ot.TweenLite = Gt, ot.TimelineLite = ot.TimelineMax = Bt, F = new Bt({\n    sortChildren: !1,\n    defaults: B,\n    autoRemoveChildren: !0,\n    id: "root",\n    smoothChildTiming: !0\n  }), Y.stringFilter = tb;\n  var ne = {\n    registerPlugin: function registerPlugin() {\n      for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) {\n        e[r] = arguments[r];\n      }\n      e.forEach(function (t) {\n        return function _createPlugin(t) {\n          var e = (t = !t.name && t.default || t).name,\n            r = p(t),\n            i = e && !r && t.init ? function () {\n              this._props = [];\n            } : t,\n            n = {\n              init: Q,\n              render: Kt,\n              add: Yt,\n              kill: ee,\n              modifier: te,\n              rawVars: 0\n            },\n            a = {\n              targetTest: 0,\n              get: 0,\n              getSetter: Wt,\n              aliases: {},\n              register: 0\n            };\n          if (At(), t !== i) {\n            if (ft[e]) return;\n            ja(i, ja(na(t, n), a)), mt(i.prototype, mt(n, na(t, a))), ft[i.prop = e] = i, t.targetTest && (pt.push(i), ut[e] = 1), e = ("css" === e ? "CSS" : e.charAt(0).toUpperCase() + e.substr(1)) + "Plugin";\n          }\n          P(e, i), t.register && t.register(ae, i, ie);\n        }(t);\n      });\n    },\n    timeline: function timeline(t) {\n      return new Bt(t);\n    },\n    getTweensOf: function getTweensOf(t, e) {\n      return F.getTweensOf(t, e);\n    },\n    getProperty: function getProperty(i, t, e, r) {\n      o(i) && (i = Tt(i)[0]);\n      var n = _(i || {}).get,\n        a = e ? ia : ha;\n      return "native" === e && (e = ""), i ? t ? a((ft[t] && ft[t].get || n)(i, t, e, r)) : function (t, e, r) {\n        return a((ft[t] && ft[t].get || n)(i, t, e, r));\n      } : i;\n    },\n    quickSetter: function quickSetter(r, e, i) {\n      if (1 < (r = Tt(r)).length) {\n        var n = r.map(function (t) {\n            return ae.quickSetter(t, e, i);\n          }),\n          a = n.length;\n        return function (t) {\n          for (var e = a; e--;) {\n            n[e](t);\n          }\n        };\n      }\n      r = r[0] || {};\n      var s = ft[e],\n        o = _(r),\n        u = o.harness && (o.harness.aliases || {})[e] || e,\n        h = s ? function (t) {\n          var e = new s();\n          d._pt = 0, e.init(r, i ? t + i : t, d, 0, [r]), e.render(1, e), d._pt && Kt(1, d);\n        } : o.set(r, u);\n      return s ? h : function (t) {\n        return h(r, u, i ? t + i : t, o, 1);\n      };\n    },\n    isTweening: function isTweening(t) {\n      return 0 < F.getTweensOf(t, !0).length;\n    },\n    defaults: function defaults(t) {\n      return t && t.ease && (t.ease = Et(t.ease, B.ease)), ma(B, t || {});\n    },\n    config: function config(t) {\n      return ma(Y, t || {});\n    },\n    registerEffect: function registerEffect(t) {\n      var i = t.name,\n        n = t.effect,\n        e = t.plugins,\n        a = t.defaults,\n        r = t.extendTimeline;\n      (e || "").split(",").forEach(function (t) {\n        return t && !ft[t] && !ot[t] && O(i + " effect requires " + t + " plugin.");\n      }), dt[i] = function (t, e, r) {\n        return n(Tt(t), ja(e || {}, a), r);\n      }, r && (Bt.prototype[i] = function (t, e, r) {\n        return this.add(dt[i](t, s(e) ? e : (r = e) && {}, this), r);\n      });\n    },\n    registerEase: function registerEase(t, e) {\n      St[t] = Et(e);\n    },\n    parseEase: function parseEase(t, e) {\n      return arguments.length ? Et(t, e) : St;\n    },\n    getById: function getById(t) {\n      return F.getById(t);\n    },\n    exportRoot: function exportRoot(e, r) {\n      void 0 === e && (e = {});\n      var i,\n        n,\n        a = new Bt(e);\n      for (a.smoothChildTiming = t(e.smoothChildTiming), F.remove(a), a._dp = 0, a._time = a._tTime = F._time, i = F._first; i;) {\n        n = i._next, !r && !i._dur && i instanceof Gt && i.vars.onComplete === i._targets[0] || Ca(a, i, i._start - i._delay), i = n;\n      }\n      return Ca(F, a, 0), a;\n    },\n    utils: {\n      wrap: function wrap(e, t, r) {\n        var i = t - e;\n        return K(e) ? ab(e, wrap(0, e.length), t) : Ma(r, function (t) {\n          return (i + (t - e) % i) % i + e;\n        });\n      },\n      wrapYoyo: function wrapYoyo(e, t, r) {\n        var i = t - e,\n          n = 2 * i;\n        return K(e) ? ab(e, wrapYoyo(0, e.length - 1), t) : Ma(r, function (t) {\n          return e + (i < (t = (n + (t - e) % n) % n || 0) ? n - t : t);\n        });\n      },\n      distribute: Va,\n      random: Ya,\n      snap: Xa,\n      normalize: function normalize(t, e, r) {\n        return wt(t, e, 0, 1, r);\n      },\n      getUnit: Oa,\n      clamp: function clamp(e, r, t) {\n        return Ma(t, function (t) {\n          return yt(e, r, t);\n        });\n      },\n      splitColor: ob,\n      toArray: Tt,\n      mapRange: wt,\n      pipe: function pipe() {\n        for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++) {\n          e[r] = arguments[r];\n        }\n        return function (t) {\n          return e.reduce(function (t, e) {\n            return e(t);\n          }, t);\n        };\n      },\n      unitize: function unitize(e, r) {\n        return function (t) {\n          return e(parseFloat(t)) + (r || Oa(t));\n        };\n      },\n      interpolate: function interpolate(e, r, t, i) {\n        var n = isNaN(e + r) ? 0 : function (t) {\n          return (1 - t) * e + t * r;\n        };\n        if (!n) {\n          var a,\n            s,\n            u,\n            h,\n            l,\n            f = o(e),\n            d = {};\n          if (!0 === t && (i = 1) && (t = null), f) e = {\n            p: e\n          }, r = {\n            p: r\n          };else if (K(e) && !K(r)) {\n            for (u = [], h = e.length, l = h - 2, s = 1; s < h; s++) {\n              u.push(interpolate(e[s - 1], e[s]));\n            }\n            h--, n = function func(t) {\n              t *= h;\n              var e = Math.min(l, ~~t);\n              return u[e](t - e);\n            }, t = r;\n          } else i || (e = mt(K(e) ? [] : {}, e));\n          if (!u) {\n            for (a in r) {\n              Yt.call(d, e, a, "get", r[a]);\n            }\n            n = function func(t) {\n              return Kt(t, d) || (f ? e.p : e);\n            };\n          }\n        }\n        return Ma(t, n);\n      },\n      shuffle: Ua\n    },\n    install: M,\n    effects: dt,\n    ticker: Pt,\n    updateRoot: Bt.updateRoot,\n    plugins: ft,\n    globalTimeline: F,\n    core: {\n      PropTween: ie,\n      globals: P,\n      Tween: Gt,\n      Timeline: Bt,\n      Animation: Ft,\n      getCache: _,\n      _removeLinkedListItem: ra,\n      suppressOverwrites: function suppressOverwrites(t) {\n        return L = t;\n      }\n    }\n  };\n  ba("to,from,fromTo,delayedCall,set,killTweensOf", function (t) {\n    return ne[t] = Gt[t];\n  }), Pt.add(Bt.updateRoot), d = ne.to({}, {\n    duration: 0\n  });\n  function lc(t, e) {\n    for (var r = t._pt; r && r.p !== e && r.op !== e && r.fp !== e;) {\n      r = r._next;\n    }\n    return r;\n  }\n  function nc(t, n) {\n    return {\n      name: t,\n      rawVars: 1,\n      init: function init(t, i, e) {\n        e._onInit = function (t) {\n          var e, r;\n          if (o(i) && (e = {}, ba(i, function (t) {\n            return e[t] = 1;\n          }), i = e), n) {\n            for (r in e = {}, i) {\n              e[r] = n(i[r]);\n            }\n            i = e;\n          }\n          !function _addModifiers(t, e) {\n            var r,\n              i,\n              n,\n              a = t._targets;\n            for (r in e) {\n              for (i = a.length; i--;) {\n                (n = (n = t._ptLookup[i][r]) && n.d) && (n._pt && (n = lc(n, r)), n && n.modifier && n.modifier(e[r], t, a[i], r));\n              }\n            }\n          }(t, i);\n        };\n      }\n    };\n  }\n  var ae = ne.registerPlugin({\n    name: "attr",\n    init: function init(t, e, r, i, n) {\n      var a, s;\n      for (a in e) {\n        (s = this.add(t, "setAttribute", (t.getAttribute(a) || 0) + "", e[a], i, n, 0, 0, a)) && (s.op = a), this._props.push(a);\n      }\n    }\n  }, {\n    name: "endArray",\n    init: function init(t, e) {\n      for (var r = e.length; r--;) {\n        this.add(t, r, t[r] || 0, e[r]);\n      }\n    }\n  }, nc("roundProps", Wa), nc("modifiers"), nc("snap", Xa)) || ne;\n  Gt.version = Bt.version = ae.version = "3.6.0", l = 1, u() && At();\n  function Yc(t, e) {\n    return e.set(e.t, e.p, Math.round(1e4 * (e.s + e.c * t)) / 1e4 + e.u, e);\n  }\n  function Zc(t, e) {\n    return e.set(e.t, e.p, 1 === t ? e.e : Math.round(1e4 * (e.s + e.c * t)) / 1e4 + e.u, e);\n  }\n  function $c(t, e) {\n    return e.set(e.t, e.p, t ? Math.round(1e4 * (e.s + e.c * t)) / 1e4 + e.u : e.b, e);\n  }\n  function _c(t, e) {\n    var r = e.s + e.c * t;\n    e.set(e.t, e.p, ~~(r + (r < 0 ? -.5 : .5)) + e.u, e);\n  }\n  function ad(t, e) {\n    return e.set(e.t, e.p, t ? e.e : e.b, e);\n  }\n  function bd(t, e) {\n    return e.set(e.t, e.p, 1 !== t ? e.b : e.e, e);\n  }\n  function cd(t, e, r) {\n    return t.style[e] = r;\n  }\n  function dd(t, e, r) {\n    return t.style.setProperty(e, r);\n  }\n  function ed(t, e, r) {\n    return t._gsap[e] = r;\n  }\n  function fd(t, e, r) {\n    return t._gsap.scaleX = t._gsap.scaleY = r;\n  }\n  function gd(t, e, r, i, n) {\n    var a = t._gsap;\n    a.scaleX = a.scaleY = r, a.renderTransform(n, a);\n  }\n  function hd(t, e, r, i, n) {\n    var a = t._gsap;\n    a[e] = r, a.renderTransform(n, a);\n  }\n  function ld(t, e) {\n    var r = oe.createElementNS ? oe.createElementNS((e || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), t) : oe.createElement(t);\n    return r.style ? r : oe.createElement(t);\n  }\n  function md(t, e, r) {\n    var i = getComputedStyle(t);\n    return i[e] || i.getPropertyValue(e.replace(Le, "-$1").toLowerCase()) || i.getPropertyValue(e) || !r && md(t, je(e) || e, 1) || "";\n  }\n  function pd() {\n    (function _windowExists() {\n      return "undefined" != typeof window;\n    })() && window.document && (se = window, oe = se.document, ue = oe.documentElement, le = ld("div") || {\n      style: {}\n    }, fe = ld("div"), Ye = je(Ye), Ne = Ye + "Origin", le.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0", ce = !!je("perspective"), he = 1);\n  }\n  function qd(t) {\n    var e,\n      r = ld("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),\n      i = this.parentNode,\n      n = this.nextSibling,\n      a = this.style.cssText;\n    if (ue.appendChild(r), r.appendChild(this), this.style.display = "block", t) try {\n      e = this.getBBox(), this._gsapBBox = this.getBBox, this.getBBox = qd;\n    } catch (t) {} else this._gsapBBox && (e = this._gsapBBox());\n    return i && (n ? i.insertBefore(this, n) : i.appendChild(this)), ue.removeChild(r), this.style.cssText = a, e;\n  }\n  function rd(t, e) {\n    for (var r = e.length; r--;) {\n      if (t.hasAttribute(e[r])) return t.getAttribute(e[r]);\n    }\n  }\n  function sd(e) {\n    var r;\n    try {\n      r = e.getBBox();\n    } catch (t) {\n      r = qd.call(e, !0);\n    }\n    return r && (r.width || r.height) || e.getBBox === qd || (r = qd.call(e, !0)), !r || r.width || r.x || r.y ? r : {\n      x: +rd(e, ["x", "cx", "x1"]) || 0,\n      y: +rd(e, ["y", "cy", "y1"]) || 0,\n      width: 0,\n      height: 0\n    };\n  }\n  function td(t) {\n    return !(!t.getCTM || t.parentNode && !t.ownerSVGElement || !sd(t));\n  }\n  function ud(t, e) {\n    if (e) {\n      var r = t.style;\n      e in ze && e !== Ne && (e = Ye), r.removeProperty ? ("ms" !== e.substr(0, 2) && "webkit" !== e.substr(0, 6) || (e = "-" + e), r.removeProperty(e.replace(Le, "-$1").toLowerCase())) : r.removeAttribute(e);\n    }\n  }\n  function vd(t, e, r, i, n, a) {\n    var s = new ie(t._pt, e, r, 0, 1, a ? bd : ad);\n    return (t._pt = s).b = i, s.e = n, t._props.push(r), s;\n  }\n  function xd(t, e, r, i) {\n    var n,\n      a,\n      s,\n      o,\n      u = parseFloat(r) || 0,\n      h = (r + "").trim().substr((u + "").length) || "px",\n      l = le.style,\n      f = Fe.test(e),\n      d = "svg" === t.tagName.toLowerCase(),\n      c = (d ? "client" : "offset") + (f ? "Width" : "Height"),\n      p = "px" === i,\n      m = "%" === i;\n    return i === h || !u || Xe[i] || Xe[h] ? u : ("px" === h || p || (u = xd(t, e, r, "px")), o = t.getCTM && td(t), !m && "%" !== h || !ze[e] && !~e.indexOf("adius") ? (l[f ? "width" : "height"] = 100 + (p ? h : i), a = ~e.indexOf("adius") || "em" === i && t.appendChild && !d ? t : t.parentNode, o && (a = (t.ownerSVGElement || {}).parentNode), a && a !== oe && a.appendChild || (a = oe.body), (s = a._gsap) && m && s.width && f && s.time === Pt.time ? ca(u / s.width * 100) : (!m && "%" !== h || (l.position = md(t, "position")), a === t && (l.position = "static"), a.appendChild(le), n = le[c], a.removeChild(le), l.position = "absolute", f && m && ((s = _(a)).time = Pt.time, s.width = a[c]), ca(p ? n * u / 100 : n && u ? 100 / n * u : 0))) : (n = o ? t.getBBox()[f ? "width" : "height"] : t[c], ca(m ? u / n * 100 : u / 100 * n)));\n  }\n  function yd(t, e, r, i) {\n    var n;\n    return he || pd(), e in qe && "transform" !== e && ~(e = qe[e]).indexOf(",") && (e = e.split(",")[0]), ze[e] && "transform" !== e ? (n = We(t, i), n = "transformOrigin" !== e ? n[e] : He(md(t, Ne)) + " " + n.zOrigin + "px") : (n = t.style[e]) && "auto" !== n && !i && !~(n + "").indexOf("calc(") || (n = Ve[e] && Ve[e](t, e, r) || md(t, e) || aa(t, e) || ("opacity" === e ? 1 : 0)), r && !~(n + "").trim().indexOf(" ") ? xd(t, e, n, r) + r : n;\n  }\n  function zd(t, e, r, i) {\n    if (!r || "none" === r) {\n      var n = je(e, t, 1),\n        a = n && md(t, n, 1);\n      a && a !== r ? (e = n, r = a) : "borderColor" === e && (r = md(t, "borderTopColor"));\n    }\n    var s,\n      o,\n      u,\n      h,\n      l,\n      f,\n      d,\n      c,\n      p,\n      _,\n      m,\n      g,\n      v = new ie(this._pt, t.style, e, 0, 1, Zt),\n      y = 0,\n      b = 0;\n    if (v.b = r, v.e = i, r += "", "auto" === (i += "") && (t.style[e] = i, i = md(t, e) || i, t.style[e] = r), tb(s = [r, i]), i = s[1], u = (r = s[0]).match(rt) || [], (i.match(rt) || []).length) {\n      for (; o = rt.exec(i);) {\n        d = o[0], p = i.substring(y, o.index), l ? l = (l + 1) % 5 : "rgba(" !== p.substr(-5) && "hsla(" !== p.substr(-5) || (l = 1), d !== (f = u[b++] || "") && (h = parseFloat(f) || 0, m = f.substr((h + "").length), (g = "=" === d.charAt(1) ? +(d.charAt(0) + "1") : 0) && (d = d.substr(2)), c = parseFloat(d), _ = d.substr((c + "").length), y = rt.lastIndex - _.length, _ || (_ = _ || Y.units[e] || m, y === i.length && (i += _, v.e += _)), m !== _ && (h = xd(t, e, f, _) || 0), v._pt = {\n          _next: v._pt,\n          p: p || 1 === b ? p : ",",\n          s: h,\n          c: g ? g * c : c - h,\n          m: l && l < 4 || "zIndex" === e ? Math.round : 0\n        });\n      }\n      v.c = y < i.length ? i.substring(y, i.length) : "";\n    } else v.r = "display" === e && "none" === i ? bd : ad;\n    return nt.test(i) && (v.e = 0), this._pt = v;\n  }\n  function Bd(t) {\n    var e = t.split(" "),\n      r = e[0],\n      i = e[1] || "50%";\n    return "top" !== r && "bottom" !== r && "left" !== i && "right" !== i || (t = r, r = i, i = t), e[0] = Ge[r] || r, e[1] = Ge[i] || i, e.join(" ");\n  }\n  function Cd(t, e) {\n    if (e.tween && e.tween._time === e.tween._dur) {\n      var r,\n        i,\n        n,\n        a = e.t,\n        s = a.style,\n        o = e.u,\n        u = a._gsap;\n      if ("all" === o || !0 === o) s.cssText = "", i = 1;else for (n = (o = o.split(",")).length; -1 < --n;) {\n        r = o[n], ze[r] && (i = 1, r = "transformOrigin" === r ? Ne : Ye), ud(a, r);\n      }\n      i && (ud(a, Ye), u && (u.svg && a.removeAttribute("transform"), We(a, 1), u.uncache = 1));\n    }\n  }\n  function Gd(t) {\n    return "matrix(1, 0, 0, 1, 0, 0)" === t || "none" === t || !t;\n  }\n  function Hd(t) {\n    var e = md(t, Ye);\n    return Gd(e) ? Qe : e.substr(7).match(et).map(ca);\n  }\n  function Id(t, e) {\n    var r,\n      i,\n      n,\n      a,\n      s = t._gsap || _(t),\n      o = t.style,\n      u = Hd(t);\n    return s.svg && t.getAttribute("transform") ? "1,0,0,1,0,0" === (u = [(n = t.transform.baseVal.consolidate().matrix).a, n.b, n.c, n.d, n.e, n.f]).join(",") ? Qe : u : (u !== Qe || t.offsetParent || t === ue || s.svg || (n = o.display, o.display = "block", (r = t.parentNode) && t.offsetParent || (a = 1, i = t.nextSibling, ue.appendChild(t)), u = Hd(t), n ? o.display = n : ud(t, "display"), a && (i ? r.insertBefore(t, i) : r ? r.appendChild(t) : ue.removeChild(t))), e && 6 < u.length ? [u[0], u[1], u[4], u[5], u[12], u[13]] : u);\n  }\n  function Jd(t, e, r, i, n, a) {\n    var s,\n      o,\n      u,\n      h = t._gsap,\n      l = n || Id(t, !0),\n      f = h.xOrigin || 0,\n      d = h.yOrigin || 0,\n      c = h.xOffset || 0,\n      p = h.yOffset || 0,\n      _ = l[0],\n      m = l[1],\n      g = l[2],\n      v = l[3],\n      y = l[4],\n      b = l[5],\n      T = e.split(" "),\n      w = parseFloat(T[0]) || 0,\n      x = parseFloat(T[1]) || 0;\n    r ? l !== Qe && (o = _ * v - m * g) && (u = w * (-m / o) + x * (_ / o) - (_ * b - m * y) / o, w = w * (v / o) + x * (-g / o) + (g * b - v * y) / o, x = u) : (w = (s = sd(t)).x + (~T[0].indexOf("%") ? w / 100 * s.width : w), x = s.y + (~(T[1] || T[0]).indexOf("%") ? x / 100 * s.height : x)), i || !1 !== i && h.smooth ? (y = w - f, b = x - d, h.xOffset = c + (y * _ + b * g) - y, h.yOffset = p + (y * m + b * v) - b) : h.xOffset = h.yOffset = 0, h.xOrigin = w, h.yOrigin = x, h.smooth = !!i, h.origin = e, h.originIsAbsolute = !!r, t.style[Ne] = "0px 0px", a && (vd(a, h, "xOrigin", f, w), vd(a, h, "yOrigin", d, x), vd(a, h, "xOffset", c, h.xOffset), vd(a, h, "yOffset", p, h.yOffset)), t.setAttribute("data-svg-origin", w + " " + x);\n  }\n  function Md(t, e, r) {\n    var i = Oa(e);\n    return ca(parseFloat(e) + parseFloat(xd(t, "x", r + "px", i))) + i;\n  }\n  function Td(t, e, r, i, n, a) {\n    var s,\n      u,\n      h = 360,\n      l = o(n),\n      f = parseFloat(n) * (l && ~n.indexOf("rad") ? Ie : 1),\n      d = a ? f * a : f - i,\n      c = i + d + "deg";\n    return l && ("short" === (s = n.split("_")[1]) && (d %= h) !== d % 180 && (d += d < 0 ? h : -h), "cw" === s && d < 0 ? d = (d + 36e9) % h - ~~(d / h) * h : "ccw" === s && 0 < d && (d = (d - 36e9) % h - ~~(d / h) * h)), t._pt = u = new ie(t._pt, e, r, i, d, Zc), u.e = c, u.u = "deg", t._props.push(r), u;\n  }\n  function Ud(t, e, r) {\n    var i,\n      n,\n      a,\n      s,\n      o,\n      u,\n      h,\n      l = fe.style,\n      f = r._gsap;\n    for (n in l.cssText = getComputedStyle(r).cssText + ";position:absolute;display:block;", l[Ye] = e, oe.body.appendChild(fe), i = We(fe, 1), ze) {\n      (a = f[n]) !== (s = i[n]) && "perspective,force3D,transformOrigin,svgOrigin".indexOf(n) < 0 && (o = Oa(a) !== (h = Oa(s)) ? xd(r, n, a, h) : parseFloat(a), u = parseFloat(s), t._pt = new ie(t._pt, f, n, o, u - o, Yc), t._pt.u = h || 0, t._props.push(n));\n    }\n    oe.body.removeChild(fe);\n  }\n  var se,\n    oe,\n    ue,\n    he,\n    le,\n    fe,\n    de,\n    ce,\n    pe = St.Power0,\n    _e = St.Power1,\n    me = St.Power2,\n    ge = St.Power3,\n    ve = St.Power4,\n    ye = St.Linear,\n    be = St.Quad,\n    Te = St.Cubic,\n    we = St.Quart,\n    xe = St.Quint,\n    Oe = St.Strong,\n    Me = St.Elastic,\n    ke = St.Back,\n    Ce = St.SteppedEase,\n    Pe = St.Bounce,\n    Ae = St.Sine,\n    Se = St.Expo,\n    De = St.Circ,\n    ze = {},\n    Ie = 180 / Math.PI,\n    Ee = Math.PI / 180,\n    Re = Math.atan2,\n    Le = /([A-Z])/g,\n    Fe = /(?:left|right|width|margin|padding|x)/i,\n    Be = /[\\s,\\(]\\S/,\n    qe = {\n      autoAlpha: "opacity,visibility",\n      scale: "scaleX,scaleY",\n      alpha: "opacity"\n    },\n    Ye = "transform",\n    Ne = Ye + "Origin",\n    Ue = "O,Moz,ms,Ms,Webkit".split(","),\n    je = function _checkPropPrefix(t, e, r) {\n      var i = (e || le).style,\n        n = 5;\n      if (t in i && !r) return t;\n      for (t = t.charAt(0).toUpperCase() + t.substr(1); n-- && !(Ue[n] + t in i);) {\n        ;\n      }\n      return n < 0 ? null : (3 === n ? "ms" : 0 <= n ? Ue[n] : "") + t;\n    },\n    Xe = {\n      deg: 1,\n      rad: 1,\n      turn: 1\n    },\n    Ge = {\n      top: "0%",\n      bottom: "100%",\n      left: "0%",\n      right: "100%",\n      center: "50%"\n    },\n    Ve = {\n      clearProps: function clearProps(t, e, r, i, n) {\n        if ("isFromStart" !== n.data) {\n          var a = t._pt = new ie(t._pt, e, r, 0, 0, Cd);\n          return a.u = i, a.pr = -10, a.tween = n, t._props.push(r), 1;\n        }\n      }\n    },\n    Qe = [1, 0, 0, 1, 0, 0],\n    Je = {},\n    We = function _parseTransform(t, e) {\n      var r = t._gsap || new Lt(t);\n      if ("x" in r && !e && !r.uncache) return r;\n      var i,\n        n,\n        a,\n        s,\n        o,\n        u,\n        h,\n        l,\n        f,\n        d,\n        c,\n        p,\n        _,\n        m,\n        g,\n        v,\n        y,\n        b,\n        T,\n        w,\n        x,\n        O,\n        M,\n        k,\n        C,\n        P,\n        A,\n        S,\n        D,\n        z,\n        I,\n        E,\n        R = t.style,\n        L = r.scaleX < 0,\n        F = "deg",\n        B = md(t, Ne) || "0";\n      return i = n = a = u = h = l = f = d = c = 0, s = o = 1, r.svg = !(!t.getCTM || !td(t)), m = Id(t, r.svg), r.svg && (k = !r.uncache && t.getAttribute("data-svg-origin"), Jd(t, k || B, !!k || r.originIsAbsolute, !1 !== r.smooth, m)), p = r.xOrigin || 0, _ = r.yOrigin || 0, m !== Qe && (b = m[0], T = m[1], w = m[2], x = m[3], i = O = m[4], n = M = m[5], 6 === m.length ? (s = Math.sqrt(b * b + T * T), o = Math.sqrt(x * x + w * w), u = b || T ? Re(T, b) * Ie : 0, (f = w || x ? Re(w, x) * Ie + u : 0) && (o *= Math.cos(f * Ee)), r.svg && (i -= p - (p * b + _ * w), n -= _ - (p * T + _ * x))) : (E = m[6], z = m[7], A = m[8], S = m[9], D = m[10], I = m[11], i = m[12], n = m[13], a = m[14], h = (g = Re(E, D)) * Ie, g && (k = O * (v = Math.cos(-g)) + A * (y = Math.sin(-g)), C = M * v + S * y, P = E * v + D * y, A = O * -y + A * v, S = M * -y + S * v, D = E * -y + D * v, I = z * -y + I * v, O = k, M = C, E = P), l = (g = Re(-w, D)) * Ie, g && (v = Math.cos(-g), I = x * (y = Math.sin(-g)) + I * v, b = k = b * v - A * y, T = C = T * v - S * y, w = P = w * v - D * y), u = (g = Re(T, b)) * Ie, g && (k = b * (v = Math.cos(g)) + T * (y = Math.sin(g)), C = O * v + M * y, T = T * v - b * y, M = M * v - O * y, b = k, O = C), h && 359.9 < Math.abs(h) + Math.abs(u) && (h = u = 0, l = 180 - l), s = ca(Math.sqrt(b * b + T * T + w * w)), o = ca(Math.sqrt(M * M + E * E)), g = Re(O, M), f = 2e-4 < Math.abs(g) ? g * Ie : 0, c = I ? 1 / (I < 0 ? -I : I) : 0), r.svg && (k = t.getAttribute("transform"), r.forceCSS = t.setAttribute("transform", "") || !Gd(md(t, Ye)), k && t.setAttribute("transform", k))), 90 < Math.abs(f) && Math.abs(f) < 270 && (L ? (s *= -1, f += u <= 0 ? 180 : -180, u += u <= 0 ? 180 : -180) : (o *= -1, f += f <= 0 ? 180 : -180)), r.x = i - ((r.xPercent = i && (r.xPercent || (Math.round(t.offsetWidth / 2) === Math.round(-i) ? -50 : 0))) ? t.offsetWidth * r.xPercent / 100 : 0) + "px", r.y = n - ((r.yPercent = n && (r.yPercent || (Math.round(t.offsetHeight / 2) === Math.round(-n) ? -50 : 0))) ? t.offsetHeight * r.yPercent / 100 : 0) + "px", r.z = a + "px", r.scaleX = ca(s), r.scaleY = ca(o), r.rotation = ca(u) + F, r.rotationX = ca(h) + F, r.rotationY = ca(l) + F, r.skewX = f + F, r.skewY = d + F, r.transformPerspective = c + "px", (r.zOrigin = parseFloat(B.split(" ")[2]) || 0) && (R[Ne] = He(B)), r.xOffset = r.yOffset = 0, r.force3D = Y.force3D, r.renderTransform = r.svg ? rr : ce ? er : $e, r.uncache = 0, r;\n    },\n    He = function _firstTwoOnly(t) {\n      return (t = t.split(" "))[0] + " " + t[1];\n    },\n    $e = function _renderNon3DTransforms(t, e) {\n      e.z = "0px", e.rotationY = e.rotationX = "0deg", e.force3D = 0, er(t, e);\n    },\n    Ze = "0deg",\n    Ke = "0px",\n    tr = ") ",\n    er = function _renderCSSTransforms(t, e) {\n      var r = e || this,\n        i = r.xPercent,\n        n = r.yPercent,\n        a = r.x,\n        s = r.y,\n        o = r.z,\n        u = r.rotation,\n        h = r.rotationY,\n        l = r.rotationX,\n        f = r.skewX,\n        d = r.skewY,\n        c = r.scaleX,\n        p = r.scaleY,\n        _ = r.transformPerspective,\n        m = r.force3D,\n        g = r.target,\n        v = r.zOrigin,\n        y = "",\n        b = "auto" === m && t && 1 !== t || !0 === m;\n      if (v && (l !== Ze || h !== Ze)) {\n        var T,\n          w = parseFloat(h) * Ee,\n          x = Math.sin(w),\n          O = Math.cos(w);\n        w = parseFloat(l) * Ee, T = Math.cos(w), a = Md(g, a, x * T * -v), s = Md(g, s, -Math.sin(w) * -v), o = Md(g, o, O * T * -v + v);\n      }\n      _ !== Ke && (y += "perspective(" + _ + tr), (i || n) && (y += "translate(" + i + "%, " + n + "%) "), !b && a === Ke && s === Ke && o === Ke || (y += o !== Ke || b ? "translate3d(" + a + ", " + s + ", " + o + ") " : "translate(" + a + ", " + s + tr), u !== Ze && (y += "rotate(" + u + tr), h !== Ze && (y += "rotateY(" + h + tr), l !== Ze && (y += "rotateX(" + l + tr), f === Ze && d === Ze || (y += "skew(" + f + ", " + d + tr), 1 === c && 1 === p || (y += "scale(" + c + ", " + p + tr), g.style[Ye] = y || "translate(0, 0)";\n    },\n    rr = function _renderSVGTransforms(t, e) {\n      var r,\n        i,\n        n,\n        a,\n        s,\n        o = e || this,\n        u = o.xPercent,\n        h = o.yPercent,\n        l = o.x,\n        f = o.y,\n        d = o.rotation,\n        c = o.skewX,\n        p = o.skewY,\n        _ = o.scaleX,\n        m = o.scaleY,\n        g = o.target,\n        v = o.xOrigin,\n        y = o.yOrigin,\n        b = o.xOffset,\n        T = o.yOffset,\n        w = o.forceCSS,\n        x = parseFloat(l),\n        O = parseFloat(f);\n      d = parseFloat(d), c = parseFloat(c), (p = parseFloat(p)) && (c += p = parseFloat(p), d += p), d || c ? (d *= Ee, c *= Ee, r = Math.cos(d) * _, i = Math.sin(d) * _, n = Math.sin(d - c) * -m, a = Math.cos(d - c) * m, c && (p *= Ee, s = Math.tan(c - p), n *= s = Math.sqrt(1 + s * s), a *= s, p && (s = Math.tan(p), r *= s = Math.sqrt(1 + s * s), i *= s)), r = ca(r), i = ca(i), n = ca(n), a = ca(a)) : (r = _, a = m, i = n = 0), (x && !~(l + "").indexOf("px") || O && !~(f + "").indexOf("px")) && (x = xd(g, "x", l, "px"), O = xd(g, "y", f, "px")), (v || y || b || T) && (x = ca(x + v - (v * r + y * n) + b), O = ca(O + y - (v * i + y * a) + T)), (u || h) && (s = g.getBBox(), x = ca(x + u / 100 * s.width), O = ca(O + h / 100 * s.height)), s = "matrix(" + r + "," + i + "," + n + "," + a + "," + x + "," + O + ")", g.setAttribute("transform", s), w && (g.style[Ye] = s);\n    };\n  ba("padding,margin,Width,Radius", function (e, r) {\n    var t = "Right",\n      i = "Bottom",\n      n = "Left",\n      o = (r < 3 ? ["Top", t, i, n] : ["Top" + n, "Top" + t, i + t, i + n]).map(function (t) {\n        return r < 2 ? e + t : "border" + t + e;\n      });\n    Ve[1 < r ? "border" + e : e] = function (e, t, r, i, n) {\n      var a, s;\n      if (arguments.length < 4) return a = o.map(function (t) {\n        return yd(e, t, r);\n      }), 5 === (s = a.join(" ")).split(a[0]).length ? a[0] : s;\n      a = (i + "").split(" "), s = {}, o.forEach(function (t, e) {\n        return s[t] = a[e] = a[e] || a[(e - 1) / 2 | 0];\n      }), e.init(t, s, n);\n    };\n  });\n  var ir,\n    nr,\n    ar,\n    sr = {\n      name: "css",\n      register: pd,\n      targetTest: function targetTest(t) {\n        return t.style && t.nodeType;\n      },\n      init: function init(t, e, r, i, n) {\n        var a,\n          s,\n          o,\n          u,\n          h,\n          l,\n          f,\n          d,\n          c,\n          p,\n          _,\n          m,\n          g,\n          v,\n          y,\n          b = this._props,\n          T = t.style,\n          w = r.vars.startAt;\n        for (f in he || pd(), e) {\n          if ("autoRound" !== f && (s = e[f], !ft[f] || !Qb(f, e, r, i, t, n))) if (h = _typeof(s), l = Ve[f], "function" === h && (h = _typeof(s = s.call(r, i, t, n))), "string" === h && ~s.indexOf("random(") && (s = db(s)), l) l(this, t, f, s, r) && (y = 1);else if ("--" === f.substr(0, 2)) a = (getComputedStyle(t).getPropertyValue(f) + "").trim(), s += "", d = Oa(a), (c = Oa(s)) ? d !== c && (a = xd(t, f, a, c) + c) : d && (s += d), this.add(T, "setProperty", a, s, i, n, 0, 0, f);else if ("undefined" !== h) {\n            if (w && f in w ? (a = "function" == typeof w[f] ? w[f].call(r, i, t, n) : w[f], f in Y.units && !Oa(a) && (a += Y.units[f]), "=" === (a + "").charAt(1) && (a = yd(t, f))) : a = yd(t, f), u = parseFloat(a), (p = "string" === h && "=" === s.charAt(1) ? +(s.charAt(0) + "1") : 0) && (s = s.substr(2)), o = parseFloat(s), f in qe && ("autoAlpha" === f && (1 === u && "hidden" === yd(t, "visibility") && o && (u = 0), vd(this, T, "visibility", u ? "inherit" : "hidden", o ? "inherit" : "hidden", !o)), "scale" !== f && "transform" !== f && ~(f = qe[f]).indexOf(",") && (f = f.split(",")[0])), _ = f in ze) {\n              if (m || ((g = t._gsap).renderTransform && !e.parseTransform || We(t, e.parseTransform), v = !1 !== e.smoothOrigin && g.smooth, (m = this._pt = new ie(this._pt, T, Ye, 0, 1, g.renderTransform, g, 0, -1)).dep = 1), "scale" === f) this._pt = new ie(this._pt, g, "scaleY", g.scaleY, p ? p * o : o - g.scaleY), b.push("scaleY", f), f += "X";else {\n                if ("transformOrigin" === f) {\n                  s = Bd(s), g.svg ? Jd(t, s, 0, v, 0, this) : ((c = parseFloat(s.split(" ")[2]) || 0) !== g.zOrigin && vd(this, g, "zOrigin", g.zOrigin, c), vd(this, T, f, He(a), He(s)));\n                  continue;\n                }\n                if ("svgOrigin" === f) {\n                  Jd(t, s, 1, v, 0, this);\n                  continue;\n                }\n                if (f in Je) {\n                  Td(this, g, f, u, s, p);\n                  continue;\n                }\n                if ("smoothOrigin" === f) {\n                  vd(this, g, "smooth", g.smooth, s);\n                  continue;\n                }\n                if ("force3D" === f) {\n                  g[f] = s;\n                  continue;\n                }\n                if ("transform" === f) {\n                  Ud(this, s, t);\n                  continue;\n                }\n              }\n            } else f in T || (f = je(f) || f);\n            if (_ || (o || 0 === o) && (u || 0 === u) && !Be.test(s) && f in T) o = o || 0, (d = (a + "").substr((u + "").length)) !== (c = Oa(s) || (f in Y.units ? Y.units[f] : d)) && (u = xd(t, f, a, c)), this._pt = new ie(this._pt, _ ? g : T, f, u, p ? p * o : o - u, _ || "px" !== c && "zIndex" !== f || !1 === e.autoRound ? Yc : _c), this._pt.u = c || 0, d !== c && (this._pt.b = a, this._pt.r = $c);else if (f in T) zd.call(this, t, f, a, s);else {\n              if (!(f in t)) {\n                N(f, s);\n                continue;\n              }\n              this.add(t, f, t[f], s, i, n);\n            }\n            b.push(f);\n          }\n        }\n        y && re(this);\n      },\n      get: yd,\n      aliases: qe,\n      getSetter: function getSetter(t, e, i) {\n        var n = qe[e];\n        return n && n.indexOf(",") < 0 && (e = n), e in ze && e !== Ne && (t._gsap.x || yd(t, "x")) ? i && de === i ? "scale" === e ? fd : ed : (de = i || {}) && ("scale" === e ? gd : hd) : t.style && !r(t.style[e]) ? cd : ~e.indexOf("-") ? dd : Wt(t, e);\n      },\n      core: {\n        _removeProperty: ud,\n        _getMatrix: Id\n      }\n    };\n  ae.utils.checkPrefix = je, ar = ba((ir = "x,y,z,scale,scaleX,scaleY,xPercent,yPercent") + "," + (nr = "rotation,rotationX,rotationY,skewX,skewY") + ",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", function (t) {\n    ze[t] = 1;\n  }), ba(nr, function (t) {\n    Y.units[t] = "deg", Je[t] = 1;\n  }), qe[ar[13]] = ir + "," + nr, ba("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY", function (t) {\n    var e = t.split(":");\n    qe[e[1]] = ar[e[0]];\n  }), ba("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function (t) {\n    Y.units[t] = "px";\n  }), ae.registerPlugin(sr);\n  var or = ae.registerPlugin(sr) || ae,\n    ur = or.core.Tween;\n  e.Back = ke, e.Bounce = Pe, e.CSSPlugin = sr, e.Circ = De, e.Cubic = Te, e.Elastic = Me, e.Expo = Se, e.Linear = ye, e.Power0 = pe, e.Power1 = _e, e.Power2 = me, e.Power3 = ge, e.Power4 = ve, e.Quad = be, e.Quart = we, e.Quint = xe, e.Sine = Ae, e.SteppedEase = Ce, e.Strong = Oe, e.TimelineLite = Bt, e.TimelineMax = Bt, e.TweenLite = Gt, e.TweenMax = ur, e.default = or, e.gsap = or;\n  if (typeof window === "undefined" || window !== e) {\n    Object.defineProperty(e, "__esModule", {\n      value: !0\n    });\n  } else {\n    delete e.default;\n  }\n});\n\n//# sourceURL=webpack:///./js/vendor/gsap.min.js?')},"./js/vendor/swiper.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {var _this = undefined;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar swiper = function swiper() {\n  /**\n   * Swiper 5.3.6\n   * Most modern mobile touch slider and framework with hardware accelerated transitions\n   * http://swiperjs.com\n   *\n   * Copyright 2014-2020 Vladimir Kharlampidi\n   *\n   * Released under the MIT License\n   *\n   * Released on: February 29, 2020\n   */\n\n  (function (global, factory) {\n    (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && __webpack_require__(/*! !webpack amd options */ \"../node_modules/webpack/buildin/amd-options.js\") ? define(factory) : (global = global || self, global.Swiper = factory());\n  })(_this, function () {\n    'use strict';\n\n    /**\n     * SSR Window 1.0.1\n     * Better handling for window object in SSR environment\n     * https://github.com/nolimits4web/ssr-window\n     *\n     * Copyright 2018, Vladimir Kharlampidi\n     *\n     * Licensed under MIT\n     *\n     * Released on: July 18, 2018\n     */\n    var doc = typeof document === 'undefined' ? {\n      body: {},\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {},\n      activeElement: {\n        blur: function blur() {},\n        nodeName: ''\n      },\n      querySelector: function querySelector() {\n        return null;\n      },\n      querySelectorAll: function querySelectorAll() {\n        return [];\n      },\n      getElementById: function getElementById() {\n        return null;\n      },\n      createEvent: function createEvent() {\n        return {\n          initEvent: function initEvent() {}\n        };\n      },\n      createElement: function createElement() {\n        return {\n          children: [],\n          childNodes: [],\n          style: {},\n          setAttribute: function setAttribute() {},\n          getElementsByTagName: function getElementsByTagName() {\n            return [];\n          }\n        };\n      },\n      location: {\n        hash: ''\n      }\n    } : document; // eslint-disable-line\n\n    var win = typeof window === 'undefined' ? {\n      document: doc,\n      navigator: {\n        userAgent: ''\n      },\n      location: {},\n      history: {},\n      CustomEvent: function CustomEvent() {\n        return this;\n      },\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {},\n      getComputedStyle: function getComputedStyle() {\n        return {\n          getPropertyValue: function getPropertyValue() {\n            return '';\n          }\n        };\n      },\n      Image: function Image() {},\n      Date: function Date() {},\n      screen: {},\n      setTimeout: function setTimeout() {},\n      clearTimeout: function clearTimeout() {}\n    } : window; // eslint-disable-line\n\n    /**\n     * Dom7 2.1.3\n     * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n     * http://framework7.io/docs/dom.html\n     *\n     * Copyright 2019, Vladimir Kharlampidi\n     * The iDangero.us\n     * http://www.idangero.us/\n     *\n     * Licensed under MIT\n     *\n     * Released on: February 11, 2019\n     */\n\n    var Dom7 = function Dom7(arr) {\n      var self = this;\n      // Create array-like object\n      for (var i = 0; i < arr.length; i += 1) {\n        self[i] = arr[i];\n      }\n      self.length = arr.length;\n      // Return collection with methods\n      return this;\n    };\n    function $(selector, context) {\n      var arr = [];\n      var i = 0;\n      if (selector && !context) {\n        if (selector instanceof Dom7) {\n          return selector;\n        }\n      }\n      if (selector) {\n        // String\n        if (typeof selector === 'string') {\n          var els;\n          var tempParent;\n          var html = selector.trim();\n          if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n            var toCreate = 'div';\n            if (html.indexOf('<li') === 0) {\n              toCreate = 'ul';\n            }\n            if (html.indexOf('<tr') === 0) {\n              toCreate = 'tbody';\n            }\n            if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\n              toCreate = 'tr';\n            }\n            if (html.indexOf('<tbody') === 0) {\n              toCreate = 'table';\n            }\n            if (html.indexOf('<option') === 0) {\n              toCreate = 'select';\n            }\n            tempParent = doc.createElement(toCreate);\n            tempParent.innerHTML = html;\n            for (i = 0; i < tempParent.childNodes.length; i += 1) {\n              arr.push(tempParent.childNodes[i]);\n            }\n          } else {\n            if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n              // Pure ID selector\n              els = [doc.getElementById(selector.trim().split('#')[1])];\n            } else {\n              // Other selectors\n              els = (context || doc).querySelectorAll(selector.trim());\n            }\n            for (i = 0; i < els.length; i += 1) {\n              if (els[i]) {\n                arr.push(els[i]);\n              }\n            }\n          }\n        } else if (selector.nodeType || selector === win || selector === doc) {\n          // Node/element\n          arr.push(selector);\n        } else if (selector.length > 0 && selector[0].nodeType) {\n          // Array of elements or instance of Dom\n          for (i = 0; i < selector.length; i += 1) {\n            arr.push(selector[i]);\n          }\n        }\n      }\n      return new Dom7(arr);\n    }\n    $.fn = Dom7.prototype;\n    $.Class = Dom7;\n    $.Dom7 = Dom7;\n    function unique(arr) {\n      var uniqueArray = [];\n      for (var i = 0; i < arr.length; i += 1) {\n        if (uniqueArray.indexOf(arr[i]) === -1) {\n          uniqueArray.push(arr[i]);\n        }\n      }\n      return uniqueArray;\n    }\n\n    // Classes and attributes\n    function addClass(className) {\n      if (typeof className === 'undefined') {\n        return this;\n      }\n      var classes = className.split(' ');\n      for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n          if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n            this[j].classList.add(classes[i]);\n          }\n        }\n      }\n      return this;\n    }\n    function removeClass(className) {\n      var classes = className.split(' ');\n      for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n          if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n            this[j].classList.remove(classes[i]);\n          }\n        }\n      }\n      return this;\n    }\n    function hasClass(className) {\n      if (!this[0]) {\n        return false;\n      }\n      return this[0].classList.contains(className);\n    }\n    function toggleClass(className) {\n      var classes = className.split(' ');\n      for (var i = 0; i < classes.length; i += 1) {\n        for (var j = 0; j < this.length; j += 1) {\n          if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') {\n            this[j].classList.toggle(classes[i]);\n          }\n        }\n      }\n      return this;\n    }\n    function attr(attrs, value) {\n      var arguments$1 = arguments;\n      if (arguments.length === 1 && typeof attrs === 'string') {\n        // Get attr\n        if (this[0]) {\n          return this[0].getAttribute(attrs);\n        }\n        return undefined;\n      }\n\n      // Set attrs\n      for (var i = 0; i < this.length; i += 1) {\n        if (arguments$1.length === 2) {\n          // String\n          this[i].setAttribute(attrs, value);\n        } else {\n          // Object\n          // eslint-disable-next-line\n          for (var attrName in attrs) {\n            this[i][attrName] = attrs[attrName];\n            this[i].setAttribute(attrName, attrs[attrName]);\n          }\n        }\n      }\n      return this;\n    }\n    // eslint-disable-next-line\n    function removeAttr(attr) {\n      for (var i = 0; i < this.length; i += 1) {\n        this[i].removeAttribute(attr);\n      }\n      return this;\n    }\n    function data(key, value) {\n      var el;\n      if (typeof value === 'undefined') {\n        el = this[0];\n        // Get value\n        if (el) {\n          if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n            return el.dom7ElementDataStorage[key];\n          }\n          var dataKey = el.getAttribute(\"data-\" + key);\n          if (dataKey) {\n            return dataKey;\n          }\n          return undefined;\n        }\n        return undefined;\n      }\n\n      // Set value\n      for (var i = 0; i < this.length; i += 1) {\n        el = this[i];\n        if (!el.dom7ElementDataStorage) {\n          el.dom7ElementDataStorage = {};\n        }\n        el.dom7ElementDataStorage[key] = value;\n      }\n      return this;\n    }\n    // Transforms\n    // eslint-disable-next-line\n    function transform(transform) {\n      for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransform = transform;\n        elStyle.transform = transform;\n      }\n      return this;\n    }\n    function transition(duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + \"ms\"; // eslint-disable-line\n      }\n\n      for (var i = 0; i < this.length; i += 1) {\n        var elStyle = this[i].style;\n        elStyle.webkitTransitionDuration = duration;\n        elStyle.transitionDuration = duration;\n      }\n      return this;\n    }\n    // Events\n    function on() {\n      var assign;\n      var args = [],\n        len = arguments.length;\n      while (len--) {\n        args[len] = arguments[len];\n      }\n      var eventType = args[0];\n      var targetSelector = args[1];\n      var listener = args[2];\n      var capture = args[3];\n      if (typeof args[1] === 'function') {\n        assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];\n        targetSelector = undefined;\n      }\n      if (!capture) {\n        capture = false;\n      }\n      function handleLiveEvent(e) {\n        var target = e.target;\n        if (!target) {\n          return;\n        }\n        var eventData = e.target.dom7EventData || [];\n        if (eventData.indexOf(e) < 0) {\n          eventData.unshift(e);\n        }\n        if ($(target).is(targetSelector)) {\n          listener.apply(target, eventData);\n        } else {\n          var parents = $(target).parents(); // eslint-disable-line\n          for (var k = 0; k < parents.length; k += 1) {\n            if ($(parents[k]).is(targetSelector)) {\n              listener.apply(parents[k], eventData);\n            }\n          }\n        }\n      }\n      function handleEvent(e) {\n        var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n        if (eventData.indexOf(e) < 0) {\n          eventData.unshift(e);\n        }\n        listener.apply(this, eventData);\n      }\n      var events = eventType.split(' ');\n      var j;\n      for (var i = 0; i < this.length; i += 1) {\n        var el = this[i];\n        if (!targetSelector) {\n          for (j = 0; j < events.length; j += 1) {\n            var event = events[j];\n            if (!el.dom7Listeners) {\n              el.dom7Listeners = {};\n            }\n            if (!el.dom7Listeners[event]) {\n              el.dom7Listeners[event] = [];\n            }\n            el.dom7Listeners[event].push({\n              listener: listener,\n              proxyListener: handleEvent\n            });\n            el.addEventListener(event, handleEvent, capture);\n          }\n        } else {\n          // Live events\n          for (j = 0; j < events.length; j += 1) {\n            var event$1 = events[j];\n            if (!el.dom7LiveListeners) {\n              el.dom7LiveListeners = {};\n            }\n            if (!el.dom7LiveListeners[event$1]) {\n              el.dom7LiveListeners[event$1] = [];\n            }\n            el.dom7LiveListeners[event$1].push({\n              listener: listener,\n              proxyListener: handleLiveEvent\n            });\n            el.addEventListener(event$1, handleLiveEvent, capture);\n          }\n        }\n      }\n      return this;\n    }\n    function off() {\n      var assign;\n      var args = [],\n        len = arguments.length;\n      while (len--) {\n        args[len] = arguments[len];\n      }\n      var eventType = args[0];\n      var targetSelector = args[1];\n      var listener = args[2];\n      var capture = args[3];\n      if (typeof args[1] === 'function') {\n        assign = args, eventType = assign[0], listener = assign[1], capture = assign[2];\n        targetSelector = undefined;\n      }\n      if (!capture) {\n        capture = false;\n      }\n      var events = eventType.split(' ');\n      for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n        for (var j = 0; j < this.length; j += 1) {\n          var el = this[j];\n          var handlers = void 0;\n          if (!targetSelector && el.dom7Listeners) {\n            handlers = el.dom7Listeners[event];\n          } else if (targetSelector && el.dom7LiveListeners) {\n            handlers = el.dom7LiveListeners[event];\n          }\n          if (handlers && handlers.length) {\n            for (var k = handlers.length - 1; k >= 0; k -= 1) {\n              var handler = handlers[k];\n              if (listener && handler.listener === listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              } else if (!listener) {\n                el.removeEventListener(event, handler.proxyListener, capture);\n                handlers.splice(k, 1);\n              }\n            }\n          }\n        }\n      }\n      return this;\n    }\n    function trigger() {\n      var args = [],\n        len = arguments.length;\n      while (len--) {\n        args[len] = arguments[len];\n      }\n      var events = args[0].split(' ');\n      var eventData = args[1];\n      for (var i = 0; i < events.length; i += 1) {\n        var event = events[i];\n        for (var j = 0; j < this.length; j += 1) {\n          var el = this[j];\n          var evt = void 0;\n          try {\n            evt = new win.CustomEvent(event, {\n              detail: eventData,\n              bubbles: true,\n              cancelable: true\n            });\n          } catch (e) {\n            evt = doc.createEvent('Event');\n            evt.initEvent(event, true, true);\n            evt.detail = eventData;\n          }\n          // eslint-disable-next-line\n          el.dom7EventData = args.filter(function (data, dataIndex) {\n            return dataIndex > 0;\n          });\n          el.dispatchEvent(evt);\n          el.dom7EventData = [];\n          delete el.dom7EventData;\n        }\n      }\n      return this;\n    }\n    function transitionEnd(callback) {\n      var events = ['webkitTransitionEnd', 'transitionend'];\n      var dom = this;\n      var i;\n      function fireCallBack(e) {\n        /* jshint validthis:true */\n        if (e.target !== this) {\n          return;\n        }\n        callback.call(this, e);\n        for (i = 0; i < events.length; i += 1) {\n          dom.off(events[i], fireCallBack);\n        }\n      }\n      if (callback) {\n        for (i = 0; i < events.length; i += 1) {\n          dom.on(events[i], fireCallBack);\n        }\n      }\n      return this;\n    }\n    function outerWidth(includeMargins) {\n      if (this.length > 0) {\n        if (includeMargins) {\n          // eslint-disable-next-line\n          var styles = this.styles();\n          return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n        }\n        return this[0].offsetWidth;\n      }\n      return null;\n    }\n    function outerHeight(includeMargins) {\n      if (this.length > 0) {\n        if (includeMargins) {\n          // eslint-disable-next-line\n          var styles = this.styles();\n          return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n        }\n        return this[0].offsetHeight;\n      }\n      return null;\n    }\n    function offset() {\n      if (this.length > 0) {\n        var el = this[0];\n        var box = el.getBoundingClientRect();\n        var body = doc.body;\n        var clientTop = el.clientTop || body.clientTop || 0;\n        var clientLeft = el.clientLeft || body.clientLeft || 0;\n        var scrollTop = el === win ? win.scrollY : el.scrollTop;\n        var scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n        return {\n          top: box.top + scrollTop - clientTop,\n          left: box.left + scrollLeft - clientLeft\n        };\n      }\n      return null;\n    }\n    function styles() {\n      if (this[0]) {\n        return win.getComputedStyle(this[0], null);\n      }\n      return {};\n    }\n    function css(props, value) {\n      var i;\n      if (arguments.length === 1) {\n        if (typeof props === 'string') {\n          if (this[0]) {\n            return win.getComputedStyle(this[0], null).getPropertyValue(props);\n          }\n        } else {\n          for (i = 0; i < this.length; i += 1) {\n            // eslint-disable-next-line\n            for (var prop in props) {\n              this[i].style[prop] = props[prop];\n            }\n          }\n          return this;\n        }\n      }\n      if (arguments.length === 2 && typeof props === 'string') {\n        for (i = 0; i < this.length; i += 1) {\n          this[i].style[props] = value;\n        }\n        return this;\n      }\n      return this;\n    }\n    // Iterate over the collection passing elements to `callback`\n    function each(callback) {\n      // Don't bother continuing without a callback\n      if (!callback) {\n        return this;\n      }\n      // Iterate over the current collection\n      for (var i = 0; i < this.length; i += 1) {\n        // If the callback returns false\n        if (callback.call(this[i], i, this[i]) === false) {\n          // End the loop early\n          return this;\n        }\n      }\n      // Return `this` to allow chained DOM operations\n      return this;\n    }\n    function filter(callback) {\n      var matchedItems = [];\n      var dom = this;\n      for (var i = 0; i < dom.length; i += 1) {\n        if (callback.call(dom[i], i, dom[i])) {\n          matchedItems.push(dom[i]);\n        }\n      }\n      return new Dom7(matchedItems);\n    }\n    // eslint-disable-next-line\n    function html(html) {\n      if (typeof html === 'undefined') {\n        return this[0] ? this[0].innerHTML : undefined;\n      }\n      for (var i = 0; i < this.length; i += 1) {\n        this[i].innerHTML = html;\n      }\n      return this;\n    }\n    // eslint-disable-next-line\n    function text(text) {\n      if (typeof text === 'undefined') {\n        if (this[0]) {\n          return this[0].textContent.trim();\n        }\n        return null;\n      }\n      for (var i = 0; i < this.length; i += 1) {\n        this[i].textContent = text;\n      }\n      return this;\n    }\n    function is(selector) {\n      var el = this[0];\n      var compareWith;\n      var i;\n      if (!el || typeof selector === 'undefined') {\n        return false;\n      }\n      if (typeof selector === 'string') {\n        if (el.matches) {\n          return el.matches(selector);\n        } else if (el.webkitMatchesSelector) {\n          return el.webkitMatchesSelector(selector);\n        } else if (el.msMatchesSelector) {\n          return el.msMatchesSelector(selector);\n        }\n        compareWith = $(selector);\n        for (i = 0; i < compareWith.length; i += 1) {\n          if (compareWith[i] === el) {\n            return true;\n          }\n        }\n        return false;\n      } else if (selector === doc) {\n        return el === doc;\n      } else if (selector === win) {\n        return el === win;\n      }\n      if (selector.nodeType || selector instanceof Dom7) {\n        compareWith = selector.nodeType ? [selector] : selector;\n        for (i = 0; i < compareWith.length; i += 1) {\n          if (compareWith[i] === el) {\n            return true;\n          }\n        }\n        return false;\n      }\n      return false;\n    }\n    function index() {\n      var child = this[0];\n      var i;\n      if (child) {\n        i = 0;\n        // eslint-disable-next-line\n        while ((child = child.previousSibling) !== null) {\n          if (child.nodeType === 1) {\n            i += 1;\n          }\n        }\n        return i;\n      }\n      return undefined;\n    }\n    // eslint-disable-next-line\n    function eq(index) {\n      if (typeof index === 'undefined') {\n        return this;\n      }\n      var length = this.length;\n      var returnIndex;\n      if (index > length - 1) {\n        return new Dom7([]);\n      }\n      if (index < 0) {\n        returnIndex = length + index;\n        if (returnIndex < 0) {\n          return new Dom7([]);\n        }\n        return new Dom7([this[returnIndex]]);\n      }\n      return new Dom7([this[index]]);\n    }\n    function append() {\n      var args = [],\n        len = arguments.length;\n      while (len--) {\n        args[len] = arguments[len];\n      }\n      var newChild;\n      for (var k = 0; k < args.length; k += 1) {\n        newChild = args[k];\n        for (var i = 0; i < this.length; i += 1) {\n          if (typeof newChild === 'string') {\n            var tempDiv = doc.createElement('div');\n            tempDiv.innerHTML = newChild;\n            while (tempDiv.firstChild) {\n              this[i].appendChild(tempDiv.firstChild);\n            }\n          } else if (newChild instanceof Dom7) {\n            for (var j = 0; j < newChild.length; j += 1) {\n              this[i].appendChild(newChild[j]);\n            }\n          } else {\n            this[i].appendChild(newChild);\n          }\n        }\n      }\n      return this;\n    }\n    function prepend(newChild) {\n      var i;\n      var j;\n      for (i = 0; i < this.length; i += 1) {\n        if (typeof newChild === 'string') {\n          var tempDiv = doc.createElement('div');\n          tempDiv.innerHTML = newChild;\n          for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n          }\n        } else if (newChild instanceof Dom7) {\n          for (j = 0; j < newChild.length; j += 1) {\n            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n          }\n        } else {\n          this[i].insertBefore(newChild, this[i].childNodes[0]);\n        }\n      }\n      return this;\n    }\n    function next(selector) {\n      if (this.length > 0) {\n        if (selector) {\n          if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n            return new Dom7([this[0].nextElementSibling]);\n          }\n          return new Dom7([]);\n        }\n        if (this[0].nextElementSibling) {\n          return new Dom7([this[0].nextElementSibling]);\n        }\n        return new Dom7([]);\n      }\n      return new Dom7([]);\n    }\n    function nextAll(selector) {\n      var nextEls = [];\n      var el = this[0];\n      if (!el) {\n        return new Dom7([]);\n      }\n      while (el.nextElementSibling) {\n        var next = el.nextElementSibling; // eslint-disable-line\n        if (selector) {\n          if ($(next).is(selector)) {\n            nextEls.push(next);\n          }\n        } else {\n          nextEls.push(next);\n        }\n        el = next;\n      }\n      return new Dom7(nextEls);\n    }\n    function prev(selector) {\n      if (this.length > 0) {\n        var el = this[0];\n        if (selector) {\n          if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n            return new Dom7([el.previousElementSibling]);\n          }\n          return new Dom7([]);\n        }\n        if (el.previousElementSibling) {\n          return new Dom7([el.previousElementSibling]);\n        }\n        return new Dom7([]);\n      }\n      return new Dom7([]);\n    }\n    function prevAll(selector) {\n      var prevEls = [];\n      var el = this[0];\n      if (!el) {\n        return new Dom7([]);\n      }\n      while (el.previousElementSibling) {\n        var prev = el.previousElementSibling; // eslint-disable-line\n        if (selector) {\n          if ($(prev).is(selector)) {\n            prevEls.push(prev);\n          }\n        } else {\n          prevEls.push(prev);\n        }\n        el = prev;\n      }\n      return new Dom7(prevEls);\n    }\n    function parent(selector) {\n      var parents = []; // eslint-disable-line\n      for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode !== null) {\n          if (selector) {\n            if ($(this[i].parentNode).is(selector)) {\n              parents.push(this[i].parentNode);\n            }\n          } else {\n            parents.push(this[i].parentNode);\n          }\n        }\n      }\n      return $(unique(parents));\n    }\n    function parents(selector) {\n      var parents = []; // eslint-disable-line\n      for (var i = 0; i < this.length; i += 1) {\n        var parent = this[i].parentNode; // eslint-disable-line\n        while (parent) {\n          if (selector) {\n            if ($(parent).is(selector)) {\n              parents.push(parent);\n            }\n          } else {\n            parents.push(parent);\n          }\n          parent = parent.parentNode;\n        }\n      }\n      return $(unique(parents));\n    }\n    function closest(selector) {\n      var closest = this; // eslint-disable-line\n      if (typeof selector === 'undefined') {\n        return new Dom7([]);\n      }\n      if (!closest.is(selector)) {\n        closest = closest.parents(selector).eq(0);\n      }\n      return closest;\n    }\n    function find(selector) {\n      var foundElements = [];\n      for (var i = 0; i < this.length; i += 1) {\n        var found = this[i].querySelectorAll(selector);\n        for (var j = 0; j < found.length; j += 1) {\n          foundElements.push(found[j]);\n        }\n      }\n      return new Dom7(foundElements);\n    }\n    function children(selector) {\n      var children = []; // eslint-disable-line\n      for (var i = 0; i < this.length; i += 1) {\n        var childNodes = this[i].childNodes;\n        for (var j = 0; j < childNodes.length; j += 1) {\n          if (!selector) {\n            if (childNodes[j].nodeType === 1) {\n              children.push(childNodes[j]);\n            }\n          } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n            children.push(childNodes[j]);\n          }\n        }\n      }\n      return new Dom7(unique(children));\n    }\n    function remove() {\n      for (var i = 0; i < this.length; i += 1) {\n        if (this[i].parentNode) {\n          this[i].parentNode.removeChild(this[i]);\n        }\n      }\n      return this;\n    }\n    function add() {\n      var args = [],\n        len = arguments.length;\n      while (len--) {\n        args[len] = arguments[len];\n      }\n      var dom = this;\n      var i;\n      var j;\n      for (i = 0; i < args.length; i += 1) {\n        var toAdd = $(args[i]);\n        for (j = 0; j < toAdd.length; j += 1) {\n          dom[dom.length] = toAdd[j];\n          dom.length += 1;\n        }\n      }\n      return dom;\n    }\n    var Methods = {\n      addClass: addClass,\n      removeClass: removeClass,\n      hasClass: hasClass,\n      toggleClass: toggleClass,\n      attr: attr,\n      removeAttr: removeAttr,\n      data: data,\n      transform: transform,\n      transition: transition,\n      on: on,\n      off: off,\n      trigger: trigger,\n      transitionEnd: transitionEnd,\n      outerWidth: outerWidth,\n      outerHeight: outerHeight,\n      offset: offset,\n      css: css,\n      each: each,\n      html: html,\n      text: text,\n      is: is,\n      index: index,\n      eq: eq,\n      append: append,\n      prepend: prepend,\n      next: next,\n      nextAll: nextAll,\n      prev: prev,\n      prevAll: prevAll,\n      parent: parent,\n      parents: parents,\n      closest: closest,\n      find: find,\n      children: children,\n      filter: filter,\n      remove: remove,\n      add: add,\n      styles: styles\n    };\n    Object.keys(Methods).forEach(function (methodName) {\n      $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n    });\n    var Utils = {\n      deleteProps: function deleteProps(obj) {\n        var object = obj;\n        Object.keys(object).forEach(function (key) {\n          try {\n            object[key] = null;\n          } catch (e) {\n            // no getter for object\n          }\n          try {\n            delete object[key];\n          } catch (e) {\n            // something got wrong\n          }\n        });\n      },\n      nextTick: function nextTick(callback, delay) {\n        if (delay === void 0) delay = 0;\n        return setTimeout(callback, delay);\n      },\n      now: function now() {\n        return Date.now();\n      },\n      getTranslate: function getTranslate(el, axis) {\n        if (axis === void 0) axis = 'x';\n        var matrix;\n        var curTransform;\n        var transformMatrix;\n        var curStyle = win.getComputedStyle(el, null);\n        if (win.WebKitCSSMatrix) {\n          curTransform = curStyle.transform || curStyle.webkitTransform;\n          if (curTransform.split(',').length > 6) {\n            curTransform = curTransform.split(', ').map(function (a) {\n              return a.replace(',', '.');\n            }).join(', ');\n          }\n          // Some old versions of Webkit choke when 'none' is passed; pass\n          // empty string instead in this case\n          transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n        } else {\n          transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n          matrix = transformMatrix.toString().split(',');\n        }\n        if (axis === 'x') {\n          // Latest Chrome and webkits Fix\n          if (win.WebKitCSSMatrix) {\n            curTransform = transformMatrix.m41;\n          }\n          // Crazy IE10 Matrix\n          else if (matrix.length === 16) {\n            curTransform = parseFloat(matrix[12]);\n          }\n          // Normal Browsers\n          else {\n            curTransform = parseFloat(matrix[4]);\n          }\n        }\n        if (axis === 'y') {\n          // Latest Chrome and webkits Fix\n          if (win.WebKitCSSMatrix) {\n            curTransform = transformMatrix.m42;\n          }\n          // Crazy IE10 Matrix\n          else if (matrix.length === 16) {\n            curTransform = parseFloat(matrix[13]);\n          }\n          // Normal Browsers\n          else {\n            curTransform = parseFloat(matrix[5]);\n          }\n        }\n        return curTransform || 0;\n      },\n      parseUrlQuery: function parseUrlQuery(url) {\n        var query = {};\n        var urlToParse = url || win.location.href;\n        var i;\n        var params;\n        var param;\n        var length;\n        if (typeof urlToParse === 'string' && urlToParse.length) {\n          urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n          params = urlToParse.split('&').filter(function (paramsPart) {\n            return paramsPart !== '';\n          });\n          length = params.length;\n          for (i = 0; i < length; i += 1) {\n            param = params[i].replace(/#\\S+/g, '').split('=');\n            query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n          }\n        }\n        return query;\n      },\n      isObject: function isObject(o) {\n        return _typeof(o) === 'object' && o !== null && o.constructor && o.constructor === Object;\n      },\n      extend: function extend() {\n        var args = [],\n          len$1 = arguments.length;\n        while (len$1--) {\n          args[len$1] = arguments[len$1];\n        }\n        var to = Object(args[0]);\n        for (var i = 1; i < args.length; i += 1) {\n          var nextSource = args[i];\n          if (nextSource !== undefined && nextSource !== null) {\n            var keysArray = Object.keys(Object(nextSource));\n            for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n              var nextKey = keysArray[nextIndex];\n              var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n              if (desc !== undefined && desc.enumerable) {\n                if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                  Utils.extend(to[nextKey], nextSource[nextKey]);\n                } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n                  to[nextKey] = {};\n                  Utils.extend(to[nextKey], nextSource[nextKey]);\n                } else {\n                  to[nextKey] = nextSource[nextKey];\n                }\n              }\n            }\n          }\n        }\n        return to;\n      }\n    };\n    var Support = function Support() {\n      return {\n        touch: win.Modernizr && win.Modernizr.touch === true || function checkTouch() {\n          return !!(win.navigator.maxTouchPoints > 0 || 'ontouchstart' in win || win.DocumentTouch && doc instanceof win.DocumentTouch);\n        }(),\n        pointerEvents: !!win.PointerEvent && 'maxTouchPoints' in win.navigator && win.navigator.maxTouchPoints > 0,\n        observer: function checkObserver() {\n          return 'MutationObserver' in win || 'WebkitMutationObserver' in win;\n        }(),\n        passiveListener: function checkPassiveListener() {\n          var supportsPassive = false;\n          try {\n            var opts = Object.defineProperty({}, 'passive', {\n              // eslint-disable-next-line\n              get: function get() {\n                supportsPassive = true;\n              }\n            });\n            win.addEventListener('testPassiveListener', null, opts);\n          } catch (e) {\n            // No support\n          }\n          return supportsPassive;\n        }(),\n        gestures: function checkGestures() {\n          return 'ongesturestart' in win;\n        }()\n      };\n    }();\n    var SwiperClass = function SwiperClass(params) {\n      if (params === void 0) params = {};\n      var self = this;\n      self.params = params;\n\n      // Events\n      self.eventsListeners = {};\n      if (self.params && self.params.on) {\n        Object.keys(self.params.on).forEach(function (eventName) {\n          self.on(eventName, self.params.on[eventName]);\n        });\n      }\n    };\n    var staticAccessors = {\n      components: {\n        configurable: true\n      }\n    };\n    SwiperClass.prototype.on = function on(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') {\n        return self;\n      }\n      var method = priority ? 'unshift' : 'push';\n      events.split(' ').forEach(function (event) {\n        if (!self.eventsListeners[event]) {\n          self.eventsListeners[event] = [];\n        }\n        self.eventsListeners[event][method](handler);\n      });\n      return self;\n    };\n    SwiperClass.prototype.once = function once(events, handler, priority) {\n      var self = this;\n      if (typeof handler !== 'function') {\n        return self;\n      }\n      function onceHandler() {\n        var args = [],\n          len = arguments.length;\n        while (len--) {\n          args[len] = arguments[len];\n        }\n        self.off(events, onceHandler);\n        if (onceHandler.f7proxy) {\n          delete onceHandler.f7proxy;\n        }\n        handler.apply(self, args);\n      }\n      onceHandler.f7proxy = handler;\n      return self.on(events, onceHandler, priority);\n    };\n    SwiperClass.prototype.off = function off(events, handler) {\n      var self = this;\n      if (!self.eventsListeners) {\n        return self;\n      }\n      events.split(' ').forEach(function (event) {\n        if (typeof handler === 'undefined') {\n          self.eventsListeners[event] = [];\n        } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n          self.eventsListeners[event].forEach(function (eventHandler, index) {\n            if (eventHandler === handler || eventHandler.f7proxy && eventHandler.f7proxy === handler) {\n              self.eventsListeners[event].splice(index, 1);\n            }\n          });\n        }\n      });\n      return self;\n    };\n    SwiperClass.prototype.emit = function emit() {\n      var args = [],\n        len = arguments.length;\n      while (len--) {\n        args[len] = arguments[len];\n      }\n      var self = this;\n      if (!self.eventsListeners) {\n        return self;\n      }\n      var events;\n      var data;\n      var context;\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n        events = args[0];\n        data = args.slice(1, args.length);\n        context = self;\n      } else {\n        events = args[0].events;\n        data = args[0].data;\n        context = args[0].context || self;\n      }\n      var eventsArray = Array.isArray(events) ? events : events.split(' ');\n      eventsArray.forEach(function (event) {\n        if (self.eventsListeners && self.eventsListeners[event]) {\n          var handlers = [];\n          self.eventsListeners[event].forEach(function (eventHandler) {\n            handlers.push(eventHandler);\n          });\n          handlers.forEach(function (eventHandler) {\n            eventHandler.apply(context, data);\n          });\n        }\n      });\n      return self;\n    };\n    SwiperClass.prototype.useModulesParams = function useModulesParams(instanceParams) {\n      var instance = this;\n      if (!instance.modules) {\n        return;\n      }\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName];\n        // Extend params\n        if (module.params) {\n          Utils.extend(instanceParams, module.params);\n        }\n      });\n    };\n    SwiperClass.prototype.useModules = function useModules(modulesParams) {\n      if (modulesParams === void 0) modulesParams = {};\n      var instance = this;\n      if (!instance.modules) {\n        return;\n      }\n      Object.keys(instance.modules).forEach(function (moduleName) {\n        var module = instance.modules[moduleName];\n        var moduleParams = modulesParams[moduleName] || {};\n        // Extend instance methods and props\n        if (module.instance) {\n          Object.keys(module.instance).forEach(function (modulePropName) {\n            var moduleProp = module.instance[modulePropName];\n            if (typeof moduleProp === 'function') {\n              instance[modulePropName] = moduleProp.bind(instance);\n            } else {\n              instance[modulePropName] = moduleProp;\n            }\n          });\n        }\n        // Add event listeners\n        if (module.on && instance.on) {\n          Object.keys(module.on).forEach(function (moduleEventName) {\n            instance.on(moduleEventName, module.on[moduleEventName]);\n          });\n        }\n\n        // Module create callback\n        if (module.create) {\n          module.create.bind(instance)(moduleParams);\n        }\n      });\n    };\n    staticAccessors.components.set = function (components) {\n      var Class = this;\n      if (!Class.use) {\n        return;\n      }\n      Class.use(components);\n    };\n    SwiperClass.installModule = function installModule(module) {\n      var params = [],\n        len = arguments.length - 1;\n      while (len-- > 0) {\n        params[len] = arguments[len + 1];\n      }\n      var Class = this;\n      if (!Class.prototype.modules) {\n        Class.prototype.modules = {};\n      }\n      var name = module.name || Object.keys(Class.prototype.modules).length + \"_\" + Utils.now();\n      Class.prototype.modules[name] = module;\n      // Prototype\n      if (module.proto) {\n        Object.keys(module.proto).forEach(function (key) {\n          Class.prototype[key] = module.proto[key];\n        });\n      }\n      // Class\n      if (module.static) {\n        Object.keys(module.static).forEach(function (key) {\n          Class[key] = module.static[key];\n        });\n      }\n      // Callback\n      if (module.install) {\n        module.install.apply(Class, params);\n      }\n      return Class;\n    };\n    SwiperClass.use = function use(module) {\n      var params = [],\n        len = arguments.length - 1;\n      while (len-- > 0) {\n        params[len] = arguments[len + 1];\n      }\n      var Class = this;\n      if (Array.isArray(module)) {\n        module.forEach(function (m) {\n          return Class.installModule(m);\n        });\n        return Class;\n      }\n      return Class.installModule.apply(Class, [module].concat(params));\n    };\n    Object.defineProperties(SwiperClass, staticAccessors);\n    function updateSize() {\n      var swiper = this;\n      var width;\n      var height;\n      var $el = swiper.$el;\n      if (typeof swiper.params.width !== 'undefined') {\n        width = swiper.params.width;\n      } else {\n        width = $el[0].clientWidth;\n      }\n      if (typeof swiper.params.height !== 'undefined') {\n        height = swiper.params.height;\n      } else {\n        height = $el[0].clientHeight;\n      }\n      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n        return;\n      }\n\n      // Subtract paddings\n      width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n      height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n      Utils.extend(swiper, {\n        width: width,\n        height: height,\n        size: swiper.isHorizontal() ? width : height\n      });\n    }\n    function updateSlides() {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var swiperSize = swiper.size;\n      var rtl = swiper.rtlTranslate;\n      var wrongRTL = swiper.wrongRTL;\n      var isVirtual = swiper.virtual && params.virtual.enabled;\n      var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n      var slides = $wrapperEl.children(\".\" + swiper.params.slideClass);\n      var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n      var snapGrid = [];\n      var slidesGrid = [];\n      var slidesSizesGrid = [];\n      function slidesForMargin(slideIndex) {\n        if (!params.cssMode) {\n          return true;\n        }\n        if (slideIndex === slides.length - 1) {\n          return false;\n        }\n        return true;\n      }\n      var offsetBefore = params.slidesOffsetBefore;\n      if (typeof offsetBefore === 'function') {\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\n      }\n      var offsetAfter = params.slidesOffsetAfter;\n      if (typeof offsetAfter === 'function') {\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\n      }\n      var previousSnapGridLength = swiper.snapGrid.length;\n      var previousSlidesGridLength = swiper.snapGrid.length;\n      var spaceBetween = params.spaceBetween;\n      var slidePosition = -offsetBefore;\n      var prevSlideSize = 0;\n      var index = 0;\n      if (typeof swiperSize === 'undefined') {\n        return;\n      }\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n      }\n      swiper.virtualSize = -spaceBetween;\n\n      // reset margins\n      if (rtl) {\n        slides.css({\n          marginLeft: '',\n          marginTop: ''\n        });\n      } else {\n        slides.css({\n          marginRight: '',\n          marginBottom: ''\n        });\n      }\n      var slidesNumberEvenToRows;\n      if (params.slidesPerColumn > 1) {\n        if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n          slidesNumberEvenToRows = slidesLength;\n        } else {\n          slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n        }\n        if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n        }\n      }\n\n      // Calc slides\n      var slideSize;\n      var slidesPerColumn = params.slidesPerColumn;\n      var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n      var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n      for (var i = 0; i < slidesLength; i += 1) {\n        slideSize = 0;\n        var slide = slides.eq(i);\n        if (params.slidesPerColumn > 1) {\n          // Set slides order\n          var newSlideOrderIndex = void 0;\n          var column = void 0;\n          var row = void 0;\n          if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n            var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n            var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n            var columnsInGroup = groupIndex === 0 ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n            row = Math.floor(slideIndexInGroup / columnsInGroup);\n            column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;\n            newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n            slide.css({\n              '-webkit-box-ordinal-group': newSlideOrderIndex,\n              '-moz-box-ordinal-group': newSlideOrderIndex,\n              '-ms-flex-order': newSlideOrderIndex,\n              '-webkit-order': newSlideOrderIndex,\n              order: newSlideOrderIndex\n            });\n          } else if (params.slidesPerColumnFill === 'column') {\n            column = Math.floor(i / slidesPerColumn);\n            row = i - column * slidesPerColumn;\n            if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {\n              row += 1;\n              if (row >= slidesPerColumn) {\n                row = 0;\n                column += 1;\n              }\n            }\n          } else {\n            row = Math.floor(i / slidesPerRow);\n            column = i - row * slidesPerRow;\n          }\n          slide.css(\"margin-\" + (swiper.isHorizontal() ? 'top' : 'left'), row !== 0 && params.spaceBetween && params.spaceBetween + \"px\");\n        }\n        if (slide.css('display') === 'none') {\n          continue;\n        } // eslint-disable-line\n\n        if (params.slidesPerView === 'auto') {\n          var slideStyles = win.getComputedStyle(slide[0], null);\n          var currentTransform = slide[0].style.transform;\n          var currentWebKitTransform = slide[0].style.webkitTransform;\n          if (currentTransform) {\n            slide[0].style.transform = 'none';\n          }\n          if (currentWebKitTransform) {\n            slide[0].style.webkitTransform = 'none';\n          }\n          if (params.roundLengths) {\n            slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n          } else {\n            // eslint-disable-next-line\n            if (swiper.isHorizontal()) {\n              var width = parseFloat(slideStyles.getPropertyValue('width'));\n              var paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n              var paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n              var marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n              var marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n              var boxSizing = slideStyles.getPropertyValue('box-sizing');\n              if (boxSizing && boxSizing === 'border-box') {\n                slideSize = width + marginLeft + marginRight;\n              } else {\n                slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n              }\n            } else {\n              var height = parseFloat(slideStyles.getPropertyValue('height'));\n              var paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n              var paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n              var marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n              var marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n              var boxSizing$1 = slideStyles.getPropertyValue('box-sizing');\n              if (boxSizing$1 && boxSizing$1 === 'border-box') {\n                slideSize = height + marginTop + marginBottom;\n              } else {\n                slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n              }\n            }\n          }\n          if (currentTransform) {\n            slide[0].style.transform = currentTransform;\n          }\n          if (currentWebKitTransform) {\n            slide[0].style.webkitTransform = currentWebKitTransform;\n          }\n          if (params.roundLengths) {\n            slideSize = Math.floor(slideSize);\n          }\n        } else {\n          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n          if (params.roundLengths) {\n            slideSize = Math.floor(slideSize);\n          }\n          if (slides[i]) {\n            if (swiper.isHorizontal()) {\n              slides[i].style.width = slideSize + \"px\";\n            } else {\n              slides[i].style.height = slideSize + \"px\";\n            }\n          }\n        }\n        if (slides[i]) {\n          slides[i].swiperSlideSize = slideSize;\n        }\n        slidesSizesGrid.push(slideSize);\n        if (params.centeredSlides) {\n          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n          if (prevSlideSize === 0 && i !== 0) {\n            slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          }\n          if (i === 0) {\n            slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          }\n          if (Math.abs(slidePosition) < 1 / 1000) {\n            slidePosition = 0;\n          }\n          if (params.roundLengths) {\n            slidePosition = Math.floor(slidePosition);\n          }\n          if (index % params.slidesPerGroup === 0) {\n            snapGrid.push(slidePosition);\n          }\n          slidesGrid.push(slidePosition);\n        } else {\n          if (params.roundLengths) {\n            slidePosition = Math.floor(slidePosition);\n          }\n          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) {\n            snapGrid.push(slidePosition);\n          }\n          slidesGrid.push(slidePosition);\n          slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index += 1;\n      }\n      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n      var newSlidesGrid;\n      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n        $wrapperEl.css({\n          width: swiper.virtualSize + params.spaceBetween + \"px\"\n        });\n      }\n      if (params.setWrapperSize) {\n        if (swiper.isHorizontal()) {\n          $wrapperEl.css({\n            width: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        } else {\n          $wrapperEl.css({\n            height: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        }\n      }\n      if (params.slidesPerColumn > 1) {\n        swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n        if (swiper.isHorizontal()) {\n          $wrapperEl.css({\n            width: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        } else {\n          $wrapperEl.css({\n            height: swiper.virtualSize + params.spaceBetween + \"px\"\n          });\n        }\n        if (params.centeredSlides) {\n          newSlidesGrid = [];\n          for (var i$1 = 0; i$1 < snapGrid.length; i$1 += 1) {\n            var slidesGridItem = snapGrid[i$1];\n            if (params.roundLengths) {\n              slidesGridItem = Math.floor(slidesGridItem);\n            }\n            if (snapGrid[i$1] < swiper.virtualSize + snapGrid[0]) {\n              newSlidesGrid.push(slidesGridItem);\n            }\n          }\n          snapGrid = newSlidesGrid;\n        }\n      }\n\n      // Remove last grid elements depending on width\n      if (!params.centeredSlides) {\n        newSlidesGrid = [];\n        for (var i$2 = 0; i$2 < snapGrid.length; i$2 += 1) {\n          var slidesGridItem$1 = snapGrid[i$2];\n          if (params.roundLengths) {\n            slidesGridItem$1 = Math.floor(slidesGridItem$1);\n          }\n          if (snapGrid[i$2] <= swiper.virtualSize - swiperSize) {\n            newSlidesGrid.push(slidesGridItem$1);\n          }\n        }\n        snapGrid = newSlidesGrid;\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n          snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n      }\n      if (snapGrid.length === 0) {\n        snapGrid = [0];\n      }\n      if (params.spaceBetween !== 0) {\n        if (swiper.isHorizontal()) {\n          if (rtl) {\n            slides.filter(slidesForMargin).css({\n              marginLeft: spaceBetween + \"px\"\n            });\n          } else {\n            slides.filter(slidesForMargin).css({\n              marginRight: spaceBetween + \"px\"\n            });\n          }\n        } else {\n          slides.filter(slidesForMargin).css({\n            marginBottom: spaceBetween + \"px\"\n          });\n        }\n      }\n      if (params.centeredSlides && params.centeredSlidesBounds) {\n        var allSlidesSize = 0;\n        slidesSizesGrid.forEach(function (slideSizeValue) {\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize -= params.spaceBetween;\n        var maxSnap = allSlidesSize - swiperSize;\n        snapGrid = snapGrid.map(function (snap) {\n          if (snap < 0) {\n            return -offsetBefore;\n          }\n          if (snap > maxSnap) {\n            return maxSnap + offsetAfter;\n          }\n          return snap;\n        });\n      }\n      if (params.centerInsufficientSlides) {\n        var allSlidesSize$1 = 0;\n        slidesSizesGrid.forEach(function (slideSizeValue) {\n          allSlidesSize$1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize$1 -= params.spaceBetween;\n        if (allSlidesSize$1 < swiperSize) {\n          var allSlidesOffset = (swiperSize - allSlidesSize$1) / 2;\n          snapGrid.forEach(function (snap, snapIndex) {\n            snapGrid[snapIndex] = snap - allSlidesOffset;\n          });\n          slidesGrid.forEach(function (snap, snapIndex) {\n            slidesGrid[snapIndex] = snap + allSlidesOffset;\n          });\n        }\n      }\n      Utils.extend(swiper, {\n        slides: slides,\n        snapGrid: snapGrid,\n        slidesGrid: slidesGrid,\n        slidesSizesGrid: slidesSizesGrid\n      });\n      if (slidesLength !== previousSlidesLength) {\n        swiper.emit('slidesLengthChange');\n      }\n      if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow) {\n          swiper.checkOverflow();\n        }\n        swiper.emit('snapGridLengthChange');\n      }\n      if (slidesGrid.length !== previousSlidesGridLength) {\n        swiper.emit('slidesGridLengthChange');\n      }\n      if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateSlidesOffset();\n      }\n    }\n    function updateAutoHeight(speed) {\n      var swiper = this;\n      var activeSlides = [];\n      var newHeight = 0;\n      var i;\n      if (typeof speed === 'number') {\n        swiper.setTransition(speed);\n      } else if (speed === true) {\n        swiper.setTransition(swiper.params.speed);\n      }\n      // Find slides currently in view\n      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n        if (swiper.params.centeredSlides) {\n          activeSlides.push.apply(activeSlides, swiper.visibleSlides);\n        } else {\n          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n            var index = swiper.activeIndex + i;\n            if (index > swiper.slides.length) {\n              break;\n            }\n            activeSlides.push(swiper.slides.eq(index)[0]);\n          }\n        }\n      } else {\n        activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n      }\n\n      // Find new height from highest slide in view\n      for (i = 0; i < activeSlides.length; i += 1) {\n        if (typeof activeSlides[i] !== 'undefined') {\n          var height = activeSlides[i].offsetHeight;\n          newHeight = height > newHeight ? height : newHeight;\n        }\n      }\n\n      // Update Height\n      if (newHeight) {\n        swiper.$wrapperEl.css('height', newHeight + \"px\");\n      }\n    }\n    function updateSlidesOffset() {\n      var swiper = this;\n      var slides = swiper.slides;\n      for (var i = 0; i < slides.length; i += 1) {\n        slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n      }\n    }\n    function updateSlidesProgress(translate) {\n      if (translate === void 0) translate = this && this.translate || 0;\n      var swiper = this;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      var rtl = swiper.rtlTranslate;\n      if (slides.length === 0) {\n        return;\n      }\n      if (typeof slides[0].swiperSlideOffset === 'undefined') {\n        swiper.updateSlidesOffset();\n      }\n      var offsetCenter = -translate;\n      if (rtl) {\n        offsetCenter = translate;\n      }\n\n      // Visible Slides\n      slides.removeClass(params.slideVisibleClass);\n      swiper.visibleSlidesIndexes = [];\n      swiper.visibleSlides = [];\n      for (var i = 0; i < slides.length; i += 1) {\n        var slide = slides[i];\n        var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n        if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n          var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n          var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n          var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n          if (isVisible) {\n            swiper.visibleSlides.push(slide);\n            swiper.visibleSlidesIndexes.push(i);\n            slides.eq(i).addClass(params.slideVisibleClass);\n          }\n        }\n        slide.progress = rtl ? -slideProgress : slideProgress;\n      }\n      swiper.visibleSlides = $(swiper.visibleSlides);\n    }\n    function updateProgress(translate) {\n      var swiper = this;\n      if (typeof translate === 'undefined') {\n        var multiplier = swiper.rtlTranslate ? -1 : 1;\n        // eslint-disable-next-line\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n      }\n      var params = swiper.params;\n      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      var progress = swiper.progress;\n      var isBeginning = swiper.isBeginning;\n      var isEnd = swiper.isEnd;\n      var wasBeginning = isBeginning;\n      var wasEnd = isEnd;\n      if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n      } else {\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\n        isBeginning = progress <= 0;\n        isEnd = progress >= 1;\n      }\n      Utils.extend(swiper, {\n        progress: progress,\n        isBeginning: isBeginning,\n        isEnd: isEnd\n      });\n      if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {\n        swiper.updateSlidesProgress(translate);\n      }\n      if (isBeginning && !wasBeginning) {\n        swiper.emit('reachBeginning toEdge');\n      }\n      if (isEnd && !wasEnd) {\n        swiper.emit('reachEnd toEdge');\n      }\n      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n        swiper.emit('fromEdge');\n      }\n      swiper.emit('progress', progress);\n    }\n    function updateSlidesClasses() {\n      var swiper = this;\n      var slides = swiper.slides;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var activeIndex = swiper.activeIndex;\n      var realIndex = swiper.realIndex;\n      var isVirtual = swiper.virtual && params.virtual.enabled;\n      slides.removeClass(params.slideActiveClass + \" \" + params.slideNextClass + \" \" + params.slidePrevClass + \" \" + params.slideDuplicateActiveClass + \" \" + params.slideDuplicateNextClass + \" \" + params.slideDuplicatePrevClass);\n      var activeSlide;\n      if (isVirtual) {\n        activeSlide = swiper.$wrapperEl.find(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + activeIndex + \"\\\"]\");\n      } else {\n        activeSlide = slides.eq(activeIndex);\n      }\n\n      // Active classes\n      activeSlide.addClass(params.slideActiveClass);\n      if (params.loop) {\n        // Duplicate to all looped slides\n        if (activeSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n        } else {\n          $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]\").addClass(params.slideDuplicateActiveClass);\n        }\n      }\n      // Next Slide\n      var nextSlide = activeSlide.nextAll(\".\" + params.slideClass).eq(0).addClass(params.slideNextClass);\n      if (params.loop && nextSlide.length === 0) {\n        nextSlide = slides.eq(0);\n        nextSlide.addClass(params.slideNextClass);\n      }\n      // Prev Slide\n      var prevSlide = activeSlide.prevAll(\".\" + params.slideClass).eq(0).addClass(params.slidePrevClass);\n      if (params.loop && prevSlide.length === 0) {\n        prevSlide = slides.eq(-1);\n        prevSlide.addClass(params.slidePrevClass);\n      }\n      if (params.loop) {\n        // Duplicate to all looped slides\n        if (nextSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n        } else {\n          $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + nextSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicateNextClass);\n        }\n        if (prevSlide.hasClass(params.slideDuplicateClass)) {\n          $wrapperEl.children(\".\" + params.slideClass + \":not(.\" + params.slideDuplicateClass + \")[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n        } else {\n          $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + prevSlide.attr('data-swiper-slide-index') + \"\\\"]\").addClass(params.slideDuplicatePrevClass);\n        }\n      }\n    }\n    function updateActiveIndex(newActiveIndex) {\n      var swiper = this;\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      var slidesGrid = swiper.slidesGrid;\n      var snapGrid = swiper.snapGrid;\n      var params = swiper.params;\n      var previousIndex = swiper.activeIndex;\n      var previousRealIndex = swiper.realIndex;\n      var previousSnapIndex = swiper.snapIndex;\n      var activeIndex = newActiveIndex;\n      var snapIndex;\n      if (typeof activeIndex === 'undefined') {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\n            if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n              activeIndex = i;\n            } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n              activeIndex = i + 1;\n            }\n          } else if (translate >= slidesGrid[i]) {\n            activeIndex = i;\n          }\n        }\n        // Normalize slideIndex\n        if (params.normalizeSlideIndex) {\n          if (activeIndex < 0 || typeof activeIndex === 'undefined') {\n            activeIndex = 0;\n          }\n        }\n      }\n      if (snapGrid.indexOf(translate) >= 0) {\n        snapIndex = snapGrid.indexOf(translate);\n      } else {\n        var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n      }\n      if (snapIndex >= snapGrid.length) {\n        snapIndex = snapGrid.length - 1;\n      }\n      if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n          swiper.snapIndex = snapIndex;\n          swiper.emit('snapIndexChange');\n        }\n        return;\n      }\n\n      // Get real index\n      var realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n      Utils.extend(swiper, {\n        snapIndex: snapIndex,\n        realIndex: realIndex,\n        previousIndex: previousIndex,\n        activeIndex: activeIndex\n      });\n      swiper.emit('activeIndexChange');\n      swiper.emit('snapIndexChange');\n      if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n      }\n      if (swiper.initialized || swiper.runCallbacksOnInit) {\n        swiper.emit('slideChange');\n      }\n    }\n    function updateClickedSlide(e) {\n      var swiper = this;\n      var params = swiper.params;\n      var slide = $(e.target).closest(\".\" + params.slideClass)[0];\n      var slideFound = false;\n      if (slide) {\n        for (var i = 0; i < swiper.slides.length; i += 1) {\n          if (swiper.slides[i] === slide) {\n            slideFound = true;\n          }\n        }\n      }\n      if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n        } else {\n          swiper.clickedIndex = $(slide).index();\n        }\n      } else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n      }\n      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n        swiper.slideToClickedSlide();\n      }\n    }\n    var update = {\n      updateSize: updateSize,\n      updateSlides: updateSlides,\n      updateAutoHeight: updateAutoHeight,\n      updateSlidesOffset: updateSlidesOffset,\n      updateSlidesProgress: updateSlidesProgress,\n      updateProgress: updateProgress,\n      updateSlidesClasses: updateSlidesClasses,\n      updateActiveIndex: updateActiveIndex,\n      updateClickedSlide: updateClickedSlide\n    };\n    function getTranslate(axis) {\n      if (axis === void 0) axis = this.isHorizontal() ? 'x' : 'y';\n      var swiper = this;\n      var params = swiper.params;\n      var rtl = swiper.rtlTranslate;\n      var translate = swiper.translate;\n      var $wrapperEl = swiper.$wrapperEl;\n      if (params.virtualTranslate) {\n        return rtl ? -translate : translate;\n      }\n      if (params.cssMode) {\n        return translate;\n      }\n      var currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n      if (rtl) {\n        currentTranslate = -currentTranslate;\n      }\n      return currentTranslate || 0;\n    }\n    function setTranslate(translate, byController) {\n      var swiper = this;\n      var rtl = swiper.rtlTranslate;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var wrapperEl = swiper.wrapperEl;\n      var progress = swiper.progress;\n      var x = 0;\n      var y = 0;\n      var z = 0;\n      if (swiper.isHorizontal()) {\n        x = rtl ? -translate : translate;\n      } else {\n        y = translate;\n      }\n      if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n      }\n      if (params.cssMode) {\n        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n      } else if (!params.virtualTranslate) {\n        $wrapperEl.transform(\"translate3d(\" + x + \"px, \" + y + \"px, \" + z + \"px)\");\n      }\n      swiper.previousTranslate = swiper.translate;\n      swiper.translate = swiper.isHorizontal() ? x : y;\n\n      // Check if we need to update progress\n      var newProgress;\n      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n      }\n      if (newProgress !== progress) {\n        swiper.updateProgress(translate);\n      }\n      swiper.emit('setTranslate', swiper.translate, byController);\n    }\n    function minTranslate() {\n      return -this.snapGrid[0];\n    }\n    function maxTranslate() {\n      return -this.snapGrid[this.snapGrid.length - 1];\n    }\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n      var obj;\n      if (translate === void 0) translate = 0;\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      if (translateBounds === void 0) translateBounds = true;\n      var swiper = this;\n      var params = swiper.params;\n      var wrapperEl = swiper.wrapperEl;\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n      }\n      var minTranslate = swiper.minTranslate();\n      var maxTranslate = swiper.maxTranslate();\n      var newTranslate;\n      if (translateBounds && translate > minTranslate) {\n        newTranslate = minTranslate;\n      } else if (translateBounds && translate < maxTranslate) {\n        newTranslate = maxTranslate;\n      } else {\n        newTranslate = translate;\n      }\n\n      // Update progress\n      swiper.updateProgress(newTranslate);\n      if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n        if (speed === 0) {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        } else {\n          // eslint-disable-next-line\n          if (wrapperEl.scrollTo) {\n            wrapperEl.scrollTo((obj = {}, obj[isH ? 'left' : 'top'] = -newTranslate, obj.behavior = 'smooth', obj));\n          } else {\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n          }\n        }\n        return true;\n      }\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionEnd');\n        }\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionStart');\n        }\n        if (!swiper.animating) {\n          swiper.animating = true;\n          if (!swiper.onTranslateToWrapperTransitionEnd) {\n            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) {\n                return;\n              }\n              if (e.target !== this) {\n                return;\n              }\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.onTranslateToWrapperTransitionEnd = null;\n              delete swiper.onTranslateToWrapperTransitionEnd;\n              if (runCallbacks) {\n                swiper.emit('transitionEnd');\n              }\n            };\n          }\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n        }\n      }\n      return true;\n    }\n    var translate = {\n      getTranslate: getTranslate,\n      setTranslate: setTranslate,\n      minTranslate: minTranslate,\n      maxTranslate: maxTranslate,\n      translateTo: translateTo\n    };\n    function setTransition(duration, byController) {\n      var swiper = this;\n      if (!swiper.params.cssMode) {\n        swiper.$wrapperEl.transition(duration);\n      }\n      swiper.emit('setTransition', duration, byController);\n    }\n    function transitionStart(runCallbacks, direction) {\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var params = swiper.params;\n      var previousIndex = swiper.previousIndex;\n      if (params.cssMode) {\n        return;\n      }\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      var dir = direction;\n      if (!dir) {\n        if (activeIndex > previousIndex) {\n          dir = 'next';\n        } else if (activeIndex < previousIndex) {\n          dir = 'prev';\n        } else {\n          dir = 'reset';\n        }\n      }\n      swiper.emit('transitionStart');\n      if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n          swiper.emit('slideResetTransitionStart');\n          return;\n        }\n        swiper.emit('slideChangeTransitionStart');\n        if (dir === 'next') {\n          swiper.emit('slideNextTransitionStart');\n        } else {\n          swiper.emit('slidePrevTransitionStart');\n        }\n      }\n    }\n    function transitionEnd$1(runCallbacks, direction) {\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var previousIndex = swiper.previousIndex;\n      var params = swiper.params;\n      swiper.animating = false;\n      if (params.cssMode) {\n        return;\n      }\n      swiper.setTransition(0);\n      var dir = direction;\n      if (!dir) {\n        if (activeIndex > previousIndex) {\n          dir = 'next';\n        } else if (activeIndex < previousIndex) {\n          dir = 'prev';\n        } else {\n          dir = 'reset';\n        }\n      }\n      swiper.emit('transitionEnd');\n      if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n          swiper.emit('slideResetTransitionEnd');\n          return;\n        }\n        swiper.emit('slideChangeTransitionEnd');\n        if (dir === 'next') {\n          swiper.emit('slideNextTransitionEnd');\n        } else {\n          swiper.emit('slidePrevTransitionEnd');\n        }\n      }\n    }\n    var transition$1 = {\n      setTransition: setTransition,\n      transitionStart: transitionStart,\n      transitionEnd: transitionEnd$1\n    };\n    function slideTo(index, speed, runCallbacks, internal) {\n      var obj;\n      if (index === void 0) index = 0;\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var slideIndex = index;\n      if (slideIndex < 0) {\n        slideIndex = 0;\n      }\n      var params = swiper.params;\n      var snapGrid = swiper.snapGrid;\n      var slidesGrid = swiper.slidesGrid;\n      var previousIndex = swiper.previousIndex;\n      var activeIndex = swiper.activeIndex;\n      var rtl = swiper.rtlTranslate;\n      var wrapperEl = swiper.wrapperEl;\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n      }\n      var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n      var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n      if (snapIndex >= snapGrid.length) {\n        snapIndex = snapGrid.length - 1;\n      }\n      if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n        swiper.emit('beforeSlideChangeStart');\n      }\n      var translate = -snapGrid[snapIndex];\n\n      // Update progress\n      swiper.updateProgress(translate);\n\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        for (var i = 0; i < slidesGrid.length; i += 1) {\n          if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n            slideIndex = i;\n          }\n        }\n      }\n      // Directions locks\n      if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n          return false;\n        }\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n          if ((activeIndex || 0) !== slideIndex) {\n            return false;\n          }\n        }\n      }\n      var direction;\n      if (slideIndex > activeIndex) {\n        direction = 'next';\n      } else if (slideIndex < activeIndex) {\n        direction = 'prev';\n      } else {\n        direction = 'reset';\n      }\n\n      // Update Index\n      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n        swiper.updateActiveIndex(slideIndex);\n        // Update Height\n        if (params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n        swiper.updateSlidesClasses();\n        if (params.effect !== 'slide') {\n          swiper.setTranslate(translate);\n        }\n        if (direction !== 'reset') {\n          swiper.transitionStart(runCallbacks, direction);\n          swiper.transitionEnd(runCallbacks, direction);\n        }\n        return false;\n      }\n      if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n        if (speed === 0) {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n        } else {\n          // eslint-disable-next-line\n          if (wrapperEl.scrollTo) {\n            wrapperEl.scrollTo((obj = {}, obj[isH ? 'left' : 'top'] = -translate, obj.behavior = 'smooth', obj));\n          } else {\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n          }\n        }\n        return true;\n      }\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        swiper.transitionEnd(runCallbacks, direction);\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(translate);\n        swiper.updateActiveIndex(slideIndex);\n        swiper.updateSlidesClasses();\n        swiper.emit('beforeTransitionStart', speed, internal);\n        swiper.transitionStart(runCallbacks, direction);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          if (!swiper.onSlideToWrapperTransitionEnd) {\n            swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) {\n                return;\n              }\n              if (e.target !== this) {\n                return;\n              }\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n              swiper.onSlideToWrapperTransitionEnd = null;\n              delete swiper.onSlideToWrapperTransitionEnd;\n              swiper.transitionEnd(runCallbacks, direction);\n            };\n          }\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        }\n      }\n      return true;\n    }\n    function slideToLoop(index, speed, runCallbacks, internal) {\n      if (index === void 0) index = 0;\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var newIndex = index;\n      if (swiper.params.loop) {\n        newIndex += swiper.loopedSlides;\n      }\n      return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideNext(speed, runCallbacks, internal) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var params = swiper.params;\n      var animating = swiper.animating;\n      var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n      if (params.loop) {\n        if (animating) {\n          return false;\n        }\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      }\n      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slidePrev(speed, runCallbacks, internal) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      var params = swiper.params;\n      var animating = swiper.animating;\n      var snapGrid = swiper.snapGrid;\n      var slidesGrid = swiper.slidesGrid;\n      var rtlTranslate = swiper.rtlTranslate;\n      if (params.loop) {\n        if (animating) {\n          return false;\n        }\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n      }\n      var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n      function normalize(val) {\n        if (val < 0) {\n          return -Math.floor(Math.abs(val));\n        }\n        return Math.floor(val);\n      }\n      var normalizedTranslate = normalize(translate);\n      var normalizedSnapGrid = snapGrid.map(function (val) {\n        return normalize(val);\n      });\n      var normalizedSlidesGrid = slidesGrid.map(function (val) {\n        return normalize(val);\n      });\n      var currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n      var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n      if (typeof prevSnap === 'undefined' && params.cssMode) {\n        snapGrid.forEach(function (snap) {\n          if (!prevSnap && normalizedTranslate >= snap) {\n            prevSnap = snap;\n          }\n        });\n      }\n      var prevIndex;\n      if (typeof prevSnap !== 'undefined') {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0) {\n          prevIndex = swiper.activeIndex - 1;\n        }\n      }\n      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideReset(speed, runCallbacks, internal) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      var swiper = this;\n      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideToClosest(speed, runCallbacks, internal, threshold) {\n      if (speed === void 0) speed = this.params.speed;\n      if (runCallbacks === void 0) runCallbacks = true;\n      if (threshold === void 0) threshold = 0.5;\n      var swiper = this;\n      var index = swiper.activeIndex;\n      var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n      var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n      var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      if (translate >= swiper.snapGrid[snapIndex]) {\n        // The current translate is on or after the current snap index, so the choice\n        // is between the current index and the one after it.\n        var currentSnap = swiper.snapGrid[snapIndex];\n        var nextSnap = swiper.snapGrid[snapIndex + 1];\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n          index += swiper.params.slidesPerGroup;\n        }\n      } else {\n        // The current translate is before the current snap index, so the choice\n        // is between the current index and the one before it.\n        var prevSnap = swiper.snapGrid[snapIndex - 1];\n        var currentSnap$1 = swiper.snapGrid[snapIndex];\n        if (translate - prevSnap <= (currentSnap$1 - prevSnap) * threshold) {\n          index -= swiper.params.slidesPerGroup;\n        }\n      }\n      index = Math.max(index, 0);\n      index = Math.min(index, swiper.slidesGrid.length - 1);\n      return swiper.slideTo(index, speed, runCallbacks, internal);\n    }\n    function slideToClickedSlide() {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n      var slideToIndex = swiper.clickedIndex;\n      var realIndex;\n      if (params.loop) {\n        if (swiper.animating) {\n          return;\n        }\n        realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n        if (params.centeredSlides) {\n          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n            swiper.loopFix();\n            slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n            Utils.nextTick(function () {\n              swiper.slideTo(slideToIndex);\n            });\n          } else {\n            swiper.slideTo(slideToIndex);\n          }\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n          swiper.loopFix();\n          slideToIndex = $wrapperEl.children(\".\" + params.slideClass + \"[data-swiper-slide-index=\\\"\" + realIndex + \"\\\"]:not(.\" + params.slideDuplicateClass + \")\").eq(0).index();\n          Utils.nextTick(function () {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    }\n    var slide = {\n      slideTo: slideTo,\n      slideToLoop: slideToLoop,\n      slideNext: slideNext,\n      slidePrev: slidePrev,\n      slideReset: slideReset,\n      slideToClosest: slideToClosest,\n      slideToClickedSlide: slideToClickedSlide\n    };\n    function loopCreate() {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      // Remove duplicated slides\n      $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass).remove();\n      var slides = $wrapperEl.children(\".\" + params.slideClass);\n      if (params.loopFillGroupWithBlank) {\n        var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n        if (blankSlidesNum !== params.slidesPerGroup) {\n          for (var i = 0; i < blankSlidesNum; i += 1) {\n            var blankNode = $(doc.createElement('div')).addClass(params.slideClass + \" \" + params.slideBlankClass);\n            $wrapperEl.append(blankNode);\n          }\n          slides = $wrapperEl.children(\".\" + params.slideClass);\n        }\n      }\n      if (params.slidesPerView === 'auto' && !params.loopedSlides) {\n        params.loopedSlides = slides.length;\n      }\n      swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n      swiper.loopedSlides += params.loopAdditionalSlides;\n      if (swiper.loopedSlides > slides.length) {\n        swiper.loopedSlides = slides.length;\n      }\n      var prependSlides = [];\n      var appendSlides = [];\n      slides.each(function (index, el) {\n        var slide = $(el);\n        if (index < swiper.loopedSlides) {\n          appendSlides.push(el);\n        }\n        if (index < slides.length && index >= slides.length - swiper.loopedSlides) {\n          prependSlides.push(el);\n        }\n        slide.attr('data-swiper-slide-index', index);\n      });\n      for (var i$1 = 0; i$1 < appendSlides.length; i$1 += 1) {\n        $wrapperEl.append($(appendSlides[i$1].cloneNode(true)).addClass(params.slideDuplicateClass));\n      }\n      for (var i$2 = prependSlides.length - 1; i$2 >= 0; i$2 -= 1) {\n        $wrapperEl.prepend($(prependSlides[i$2].cloneNode(true)).addClass(params.slideDuplicateClass));\n      }\n    }\n    function loopFix() {\n      var swiper = this;\n      swiper.emit('beforeLoopFix');\n      var activeIndex = swiper.activeIndex;\n      var slides = swiper.slides;\n      var loopedSlides = swiper.loopedSlides;\n      var allowSlidePrev = swiper.allowSlidePrev;\n      var allowSlideNext = swiper.allowSlideNext;\n      var snapGrid = swiper.snapGrid;\n      var rtl = swiper.rtlTranslate;\n      var newIndex;\n      swiper.allowSlidePrev = true;\n      swiper.allowSlideNext = true;\n      var snapTranslate = -snapGrid[activeIndex];\n      var diff = snapTranslate - swiper.getTranslate();\n\n      // Fix For Negative Oversliding\n      if (activeIndex < loopedSlides) {\n        newIndex = slides.length - loopedSlides * 3 + activeIndex;\n        newIndex += loopedSlides;\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged && diff !== 0) {\n          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n      } else if (activeIndex >= slides.length - loopedSlides) {\n        // Fix For Positive Oversliding\n        newIndex = -slides.length + activeIndex + loopedSlides;\n        newIndex += loopedSlides;\n        var slideChanged$1 = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged$1 && diff !== 0) {\n          swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n        }\n      }\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      swiper.emit('loopFix');\n    }\n    function loopDestroy() {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var params = swiper.params;\n      var slides = swiper.slides;\n      $wrapperEl.children(\".\" + params.slideClass + \".\" + params.slideDuplicateClass + \",.\" + params.slideClass + \".\" + params.slideBlankClass).remove();\n      slides.removeAttr('data-swiper-slide-index');\n    }\n    var loop = {\n      loopCreate: loopCreate,\n      loopFix: loopFix,\n      loopDestroy: loopDestroy\n    };\n    function setGrabCursor(moving) {\n      var swiper = this;\n      if (Support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n        return;\n      }\n      var el = swiper.el;\n      el.style.cursor = 'move';\n      el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n      el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n      el.style.cursor = moving ? 'grabbing' : 'grab';\n    }\n    function unsetGrabCursor() {\n      var swiper = this;\n      if (Support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n        return;\n      }\n      swiper.el.style.cursor = '';\n    }\n    var grabCursor = {\n      setGrabCursor: setGrabCursor,\n      unsetGrabCursor: unsetGrabCursor\n    };\n    function appendSlide(slides) {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var params = swiper.params;\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n      if (_typeof(slides) === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) {\n            $wrapperEl.append(slides[i]);\n          }\n        }\n      } else {\n        $wrapperEl.append(slides);\n      }\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n    }\n    function prependSlide(slides) {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var activeIndex = swiper.activeIndex;\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n      var newActiveIndex = activeIndex + 1;\n      if (_typeof(slides) === 'object' && 'length' in slides) {\n        for (var i = 0; i < slides.length; i += 1) {\n          if (slides[i]) {\n            $wrapperEl.prepend(slides[i]);\n          }\n        }\n        newActiveIndex = activeIndex + slides.length;\n      } else {\n        $wrapperEl.prepend(slides);\n      }\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n    function addSlide(index, slides) {\n      var swiper = this;\n      var $wrapperEl = swiper.$wrapperEl;\n      var params = swiper.params;\n      var activeIndex = swiper.activeIndex;\n      var activeIndexBuffer = activeIndex;\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n      var baseLength = swiper.slides.length;\n      if (index <= 0) {\n        swiper.prependSlide(slides);\n        return;\n      }\n      if (index >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n      }\n      var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n      var slidesBuffer = [];\n      for (var i = baseLength - 1; i >= index; i -= 1) {\n        var currentSlide = swiper.slides.eq(i);\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n      }\n      if (_typeof(slides) === 'object' && 'length' in slides) {\n        for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n          if (slides[i$1]) {\n            $wrapperEl.append(slides[i$1]);\n          }\n        }\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n      } else {\n        $wrapperEl.append(slides);\n      }\n      for (var i$2 = 0; i$2 < slidesBuffer.length; i$2 += 1) {\n        $wrapperEl.append(slidesBuffer[i$2]);\n      }\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n    function removeSlide(slidesIndexes) {\n      var swiper = this;\n      var params = swiper.params;\n      var $wrapperEl = swiper.$wrapperEl;\n      var activeIndex = swiper.activeIndex;\n      var activeIndexBuffer = activeIndex;\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\" + params.slideClass);\n      }\n      var newActiveIndex = activeIndexBuffer;\n      var indexToRemove;\n      if (_typeof(slidesIndexes) === 'object' && 'length' in slidesIndexes) {\n        for (var i = 0; i < slidesIndexes.length; i += 1) {\n          indexToRemove = slidesIndexes[i];\n          if (swiper.slides[indexToRemove]) {\n            swiper.slides.eq(indexToRemove).remove();\n          }\n          if (indexToRemove < newActiveIndex) {\n            newActiveIndex -= 1;\n          }\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      } else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove]) {\n          swiper.slides.eq(indexToRemove).remove();\n        }\n        if (indexToRemove < newActiveIndex) {\n          newActiveIndex -= 1;\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      }\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!(params.observer && Support.observer)) {\n        swiper.update();\n      }\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n    function removeAllSlides() {\n      var swiper = this;\n      var slidesIndexes = [];\n      for (var i = 0; i < swiper.slides.length; i += 1) {\n        slidesIndexes.push(i);\n      }\n      swiper.removeSlide(slidesIndexes);\n    }\n    var manipulation = {\n      appendSlide: appendSlide,\n      prependSlide: prependSlide,\n      addSlide: addSlide,\n      removeSlide: removeSlide,\n      removeAllSlides: removeAllSlides\n    };\n    var Device = function Device() {\n      var platform = win.navigator.platform;\n      var ua = win.navigator.userAgent;\n      var device = {\n        ios: false,\n        android: false,\n        androidChrome: false,\n        desktop: false,\n        iphone: false,\n        ipod: false,\n        ipad: false,\n        edge: false,\n        ie: false,\n        firefox: false,\n        macos: false,\n        windows: false,\n        cordova: !!(win.cordova || win.phonegap),\n        phonegap: !!(win.cordova || win.phonegap),\n        electron: false\n      };\n      var screenWidth = win.screen.width;\n      var screenHeight = win.screen.height;\n      var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n      var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n      var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n      var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n      var ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n      var edge = ua.indexOf('Edge/') >= 0;\n      var firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n      var windows = platform === 'Win32';\n      var electron = ua.toLowerCase().indexOf('electron') >= 0;\n      var macos = platform === 'MacIntel';\n\n      // iPadOs 13 fix\n      if (!ipad && macos && Support.touch && (screenWidth === 1024 && screenHeight === 1366 // Pro 12.9\n      || screenWidth === 834 && screenHeight === 1194 // Pro 11\n      || screenWidth === 834 && screenHeight === 1112 // Pro 10.5\n      || screenWidth === 768 && screenHeight === 1024 // other\n      )) {\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\n        macos = false;\n      }\n      device.ie = ie;\n      device.edge = edge;\n      device.firefox = firefox;\n\n      // Android\n      if (android && !windows) {\n        device.os = 'android';\n        device.osVersion = android[2];\n        device.android = true;\n        device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n      }\n      if (ipad || iphone || ipod) {\n        device.os = 'ios';\n        device.ios = true;\n      }\n      // iOS\n      if (iphone && !ipod) {\n        device.osVersion = iphone[2].replace(/_/g, '.');\n        device.iphone = true;\n      }\n      if (ipad) {\n        device.osVersion = ipad[2].replace(/_/g, '.');\n        device.ipad = true;\n      }\n      if (ipod) {\n        device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        device.ipod = true;\n      }\n      // iOS 8+ changed UA\n      if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n        if (device.osVersion.split('.')[0] === '10') {\n          device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n        }\n      }\n\n      // Webview\n      device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || win.navigator.standalone)) || win.matchMedia && win.matchMedia('(display-mode: standalone)').matches;\n      device.webview = device.webView;\n      device.standalone = device.webView;\n\n      // Desktop\n      device.desktop = !(device.ios || device.android) || electron;\n      if (device.desktop) {\n        device.electron = electron;\n        device.macos = macos;\n        device.windows = windows;\n        if (device.macos) {\n          device.os = 'macos';\n        }\n        if (device.windows) {\n          device.os = 'windows';\n        }\n      }\n\n      // Pixel Ratio\n      device.pixelRatio = win.devicePixelRatio || 1;\n\n      // Export object\n      return device;\n    }();\n    function onTouchStart(event) {\n      var swiper = this;\n      var data = swiper.touchEventsData;\n      var params = swiper.params;\n      var touches = swiper.touches;\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return;\n      }\n      var e = event;\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n      var $targetEl = $(e.target);\n      if (params.touchEventsTarget === 'wrapper') {\n        if (!$targetEl.closest(swiper.wrapperEl).length) {\n          return;\n        }\n      }\n      data.isTouchEvent = e.type === 'touchstart';\n      if (!data.isTouchEvent && 'which' in e && e.which === 3) {\n        return;\n      }\n      if (!data.isTouchEvent && 'button' in e && e.button > 0) {\n        return;\n      }\n      if (data.isTouched && data.isMoved) {\n        return;\n      }\n      if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : \".\" + params.noSwipingClass)[0]) {\n        swiper.allowClick = true;\n        return;\n      }\n      if (params.swipeHandler) {\n        if (!$targetEl.closest(params.swipeHandler)[0]) {\n          return;\n        }\n      }\n      touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n      touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      var startX = touches.currentX;\n      var startY = touches.currentY;\n\n      // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n      var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n      var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= win.screen.width - edgeSwipeThreshold)) {\n        return;\n      }\n      Utils.extend(data, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined\n      });\n      touches.startX = startX;\n      touches.startY = startY;\n      data.touchStartTime = Utils.now();\n      swiper.allowClick = true;\n      swiper.updateSize();\n      swiper.swipeDirection = undefined;\n      if (params.threshold > 0) {\n        data.allowThresholdMove = false;\n      }\n      if (e.type !== 'touchstart') {\n        var preventDefault = true;\n        if ($targetEl.is(data.formElements)) {\n          preventDefault = false;\n        }\n        if (doc.activeElement && $(doc.activeElement).is(data.formElements) && doc.activeElement !== $targetEl[0]) {\n          doc.activeElement.blur();\n        }\n        var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n        if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n          e.preventDefault();\n        }\n      }\n      swiper.emit('touchStart', e);\n    }\n    function onTouchMove(event) {\n      var swiper = this;\n      var data = swiper.touchEventsData;\n      var params = swiper.params;\n      var touches = swiper.touches;\n      var rtl = swiper.rtlTranslate;\n      var e = event;\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n      if (!data.isTouched) {\n        if (data.startMoving && data.isScrolling) {\n          swiper.emit('touchMoveOpposite', e);\n        }\n        return;\n      }\n      if (data.isTouchEvent && e.type === 'mousemove') {\n        return;\n      }\n      var targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n      var pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n      var pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n      if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n      }\n      if (!swiper.allowTouchMove) {\n        // isMoved = true;\n        swiper.allowClick = false;\n        if (data.isTouched) {\n          Utils.extend(touches, {\n            startX: pageX,\n            startY: pageY,\n            currentX: pageX,\n            currentY: pageY\n          });\n          data.touchStartTime = Utils.now();\n        }\n        return;\n      }\n      if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) {\n          // Vertical\n          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n            data.isTouched = false;\n            data.isMoved = false;\n            return;\n          }\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n          return;\n        }\n      }\n      if (data.isTouchEvent && doc.activeElement) {\n        if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\n          data.isMoved = true;\n          swiper.allowClick = false;\n          return;\n        }\n      }\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchMove', e);\n      }\n      if (e.targetTouches && e.targetTouches.length > 1) {\n        return;\n      }\n      touches.currentX = pageX;\n      touches.currentY = pageY;\n      var diffX = touches.currentX - touches.startX;\n      var diffY = touches.currentY - touches.startY;\n      if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) {\n        return;\n      }\n      if (typeof data.isScrolling === 'undefined') {\n        var touchAngle;\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n          data.isScrolling = false;\n        } else {\n          // eslint-disable-next-line\n          if (diffX * diffX + diffY * diffY >= 25) {\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n          }\n        }\n      }\n      if (data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      if (typeof data.startMoving === 'undefined') {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n          data.startMoving = true;\n        }\n      }\n      if (data.isScrolling) {\n        data.isTouched = false;\n        return;\n      }\n      if (!data.startMoving) {\n        return;\n      }\n      swiper.allowClick = false;\n      if (!params.cssMode) {\n        e.preventDefault();\n      }\n      if (params.touchMoveStopPropagation && !params.nested) {\n        e.stopPropagation();\n      }\n      if (!data.isMoved) {\n        if (params.loop) {\n          swiper.loopFix();\n        }\n        data.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n        if (swiper.animating) {\n          swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n        }\n        data.allowMomentumBounce = false;\n        // Grab Cursor\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n          swiper.setGrabCursor(true);\n        }\n        swiper.emit('sliderFirstMove', e);\n      }\n      swiper.emit('sliderMove', e);\n      data.isMoved = true;\n      var diff = swiper.isHorizontal() ? diffX : diffY;\n      touches.diff = diff;\n      diff *= params.touchRatio;\n      if (rtl) {\n        diff = -diff;\n      }\n      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n      data.currentTranslate = diff + data.startTranslate;\n      var disableParentSwiper = true;\n      var resistanceRatio = params.resistanceRatio;\n      if (params.touchReleaseOnEdges) {\n        resistanceRatio = 0;\n      }\n      if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) {\n          data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n        }\n      } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) {\n          data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n        }\n      }\n      if (disableParentSwiper) {\n        e.preventedByNestedSwiper = true;\n      }\n\n      // Directions locks\n      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n\n      // Threshold\n      if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n          if (!data.allowThresholdMove) {\n            data.allowThresholdMove = true;\n            touches.startX = touches.currentX;\n            touches.startY = touches.currentY;\n            data.currentTranslate = data.startTranslate;\n            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n            return;\n          }\n        } else {\n          data.currentTranslate = data.startTranslate;\n          return;\n        }\n      }\n      if (!params.followFinger || params.cssMode) {\n        return;\n      }\n\n      // Update active index in free mode\n      if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      if (params.freeMode) {\n        // Velocity\n        if (data.velocities.length === 0) {\n          data.velocities.push({\n            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n            time: data.touchStartTime\n          });\n        }\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n          time: Utils.now()\n        });\n      }\n      // Update progress\n      swiper.updateProgress(data.currentTranslate);\n      // Update translate\n      swiper.setTranslate(data.currentTranslate);\n    }\n    function onTouchEnd(event) {\n      var swiper = this;\n      var data = swiper.touchEventsData;\n      var params = swiper.params;\n      var touches = swiper.touches;\n      var rtl = swiper.rtlTranslate;\n      var $wrapperEl = swiper.$wrapperEl;\n      var slidesGrid = swiper.slidesGrid;\n      var snapGrid = swiper.snapGrid;\n      var e = event;\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchEnd', e);\n      }\n      data.allowTouchCallbacks = false;\n      if (!data.isTouched) {\n        if (data.isMoved && params.grabCursor) {\n          swiper.setGrabCursor(false);\n        }\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n      // Return Grab Cursor\n      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(false);\n      }\n\n      // Time diff\n      var touchEndTime = Utils.now();\n      var timeDiff = touchEndTime - data.touchStartTime;\n\n      // Tap, doubleTap, Click\n      if (swiper.allowClick) {\n        swiper.updateClickedSlide(e);\n        swiper.emit('tap click', e);\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n          swiper.emit('doubleTap doubleClick', e);\n        }\n      }\n      data.lastClickTime = Utils.now();\n      Utils.nextTick(function () {\n        if (!swiper.destroyed) {\n          swiper.allowClick = true;\n        }\n      });\n      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      var currentPos;\n      if (params.followFinger) {\n        currentPos = rtl ? swiper.translate : -swiper.translate;\n      } else {\n        currentPos = -data.currentTranslate;\n      }\n      if (params.cssMode) {\n        return;\n      }\n      if (params.freeMode) {\n        if (currentPos < -swiper.minTranslate()) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        if (currentPos > -swiper.maxTranslate()) {\n          if (swiper.slides.length < snapGrid.length) {\n            swiper.slideTo(snapGrid.length - 1);\n          } else {\n            swiper.slideTo(swiper.slides.length - 1);\n          }\n          return;\n        }\n        if (params.freeModeMomentum) {\n          if (data.velocities.length > 1) {\n            var lastMoveEvent = data.velocities.pop();\n            var velocityEvent = data.velocities.pop();\n            var distance = lastMoveEvent.position - velocityEvent.position;\n            var time = lastMoveEvent.time - velocityEvent.time;\n            swiper.velocity = distance / time;\n            swiper.velocity /= 2;\n            if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n              swiper.velocity = 0;\n            }\n            // this implies that the user stopped moving a finger then released.\n            // There would be no events with distance zero, so the last event is stale.\n            if (time > 150 || Utils.now() - lastMoveEvent.time > 300) {\n              swiper.velocity = 0;\n            }\n          } else {\n            swiper.velocity = 0;\n          }\n          swiper.velocity *= params.freeModeMomentumVelocityRatio;\n          data.velocities.length = 0;\n          var momentumDuration = 1000 * params.freeModeMomentumRatio;\n          var momentumDistance = swiper.velocity * momentumDuration;\n          var newPosition = swiper.translate + momentumDistance;\n          if (rtl) {\n            newPosition = -newPosition;\n          }\n          var doBounce = false;\n          var afterBouncePosition;\n          var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n          var needsLoopFix;\n          if (newPosition < swiper.maxTranslate()) {\n            if (params.freeModeMomentumBounce) {\n              if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n                newPosition = swiper.maxTranslate() - bounceAmount;\n              }\n              afterBouncePosition = swiper.maxTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.maxTranslate();\n            }\n            if (params.loop && params.centeredSlides) {\n              needsLoopFix = true;\n            }\n          } else if (newPosition > swiper.minTranslate()) {\n            if (params.freeModeMomentumBounce) {\n              if (newPosition - swiper.minTranslate() > bounceAmount) {\n                newPosition = swiper.minTranslate() + bounceAmount;\n              }\n              afterBouncePosition = swiper.minTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.minTranslate();\n            }\n            if (params.loop && params.centeredSlides) {\n              needsLoopFix = true;\n            }\n          } else if (params.freeModeSticky) {\n            var nextSlide;\n            for (var j = 0; j < snapGrid.length; j += 1) {\n              if (snapGrid[j] > -newPosition) {\n                nextSlide = j;\n                break;\n              }\n            }\n            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n              newPosition = snapGrid[nextSlide];\n            } else {\n              newPosition = snapGrid[nextSlide - 1];\n            }\n            newPosition = -newPosition;\n          }\n          if (needsLoopFix) {\n            swiper.once('transitionEnd', function () {\n              swiper.loopFix();\n            });\n          }\n          // Fix duration\n          if (swiper.velocity !== 0) {\n            if (rtl) {\n              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n            } else {\n              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n            }\n            if (params.freeModeSticky) {\n              // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n              // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n              // It's easy to see this when simulating touch with mouse events. To fix this,\n              // limit single-slide swipes to the default slide duration. This also has the\n              // nice side effect of matching slide speed if the user stopped moving before\n              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n              // For faster swipes, also apply limits (albeit higher ones).\n              var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n              var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n              if (moveDistance < currentSlideSize) {\n                momentumDuration = params.speed;\n              } else if (moveDistance < 2 * currentSlideSize) {\n                momentumDuration = params.speed * 1.5;\n              } else {\n                momentumDuration = params.speed * 2.5;\n              }\n            }\n          } else if (params.freeModeSticky) {\n            swiper.slideToClosest();\n            return;\n          }\n          if (params.freeModeMomentumBounce && doBounce) {\n            swiper.updateProgress(afterBouncePosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            swiper.animating = true;\n            $wrapperEl.transitionEnd(function () {\n              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) {\n                return;\n              }\n              swiper.emit('momentumBounce');\n              swiper.setTransition(params.speed);\n              swiper.setTranslate(afterBouncePosition);\n              $wrapperEl.transitionEnd(function () {\n                if (!swiper || swiper.destroyed) {\n                  return;\n                }\n                swiper.transitionEnd();\n              });\n            });\n          } else if (swiper.velocity) {\n            swiper.updateProgress(newPosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            if (!swiper.animating) {\n              swiper.animating = true;\n              $wrapperEl.transitionEnd(function () {\n                if (!swiper || swiper.destroyed) {\n                  return;\n                }\n                swiper.transitionEnd();\n              });\n            }\n          } else {\n            swiper.updateProgress(newPosition);\n          }\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        } else if (params.freeModeSticky) {\n          swiper.slideToClosest();\n          return;\n        }\n        if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n        return;\n      }\n\n      // Find current slide\n      var stopIndex = 0;\n      var groupSize = swiper.slidesSizesGrid[0];\n      for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n        var increment$1 = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n        if (typeof slidesGrid[i + increment$1] !== 'undefined') {\n          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment$1]) {\n            stopIndex = i;\n            groupSize = slidesGrid[i + increment$1] - slidesGrid[i];\n          }\n        } else if (currentPos >= slidesGrid[i]) {\n          stopIndex = i;\n          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n      }\n\n      // Find current slide size\n      var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n      var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n      if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        if (swiper.swipeDirection === 'next') {\n          if (ratio >= params.longSwipesRatio) {\n            swiper.slideTo(stopIndex + increment);\n          } else {\n            swiper.slideTo(stopIndex);\n          }\n        }\n        if (swiper.swipeDirection === 'prev') {\n          if (ratio > 1 - params.longSwipesRatio) {\n            swiper.slideTo(stopIndex + increment);\n          } else {\n            swiper.slideTo(stopIndex);\n          }\n        }\n      } else {\n        // Short swipes\n        if (!params.shortSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n        if (!isNavButtonTarget) {\n          if (swiper.swipeDirection === 'next') {\n            swiper.slideTo(stopIndex + increment);\n          }\n          if (swiper.swipeDirection === 'prev') {\n            swiper.slideTo(stopIndex);\n          }\n        } else if (e.target === swiper.navigation.nextEl) {\n          swiper.slideTo(stopIndex + increment);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n    }\n    function onResize() {\n      var swiper = this;\n      var params = swiper.params;\n      var el = swiper.el;\n      if (el && el.offsetWidth === 0) {\n        return;\n      }\n\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Save locks\n      var allowSlideNext = swiper.allowSlideNext;\n      var allowSlidePrev = swiper.allowSlidePrev;\n      var snapGrid = swiper.snapGrid;\n\n      // Disable locks on resize\n      swiper.allowSlideNext = true;\n      swiper.allowSlidePrev = true;\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateSlidesClasses();\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.run();\n      }\n      // Return locks after resize\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n    }\n    function onClick(e) {\n      var swiper = this;\n      if (!swiper.allowClick) {\n        if (swiper.params.preventClicks) {\n          e.preventDefault();\n        }\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }\n      }\n    }\n    function onScroll() {\n      var swiper = this;\n      var wrapperEl = swiper.wrapperEl;\n      swiper.previousTranslate = swiper.translate;\n      swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n      // eslint-disable-next-line\n      if (swiper.translate === -0) {\n        swiper.translate = 0;\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n      var newProgress;\n      var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n      }\n      if (newProgress !== swiper.progress) {\n        swiper.updateProgress(swiper.translate);\n      }\n      swiper.emit('setTranslate', swiper.translate, false);\n    }\n    var dummyEventAttached = false;\n    function dummyEventListener() {}\n    function attachEvents() {\n      var swiper = this;\n      var params = swiper.params;\n      var touchEvents = swiper.touchEvents;\n      var el = swiper.el;\n      var wrapperEl = swiper.wrapperEl;\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n      if (params.cssMode) {\n        swiper.onScroll = onScroll.bind(swiper);\n      }\n      swiper.onClick = onClick.bind(swiper);\n      var capture = !!params.nested;\n\n      // Touch Events\n      if (!Support.touch && Support.pointerEvents) {\n        el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? {\n            passive: true,\n            capture: false\n          } : false;\n          el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? {\n            passive: false,\n            capture: capture\n          } : capture);\n          el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n          if (touchEvents.cancel) {\n            el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n          }\n          if (!dummyEventAttached) {\n            doc.addEventListener('touchstart', dummyEventListener);\n            dummyEventAttached = true;\n          }\n        }\n        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {\n          el.addEventListener('mousedown', swiper.onTouchStart, false);\n          doc.addEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.addEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        el.addEventListener('click', swiper.onClick, true);\n      }\n      if (params.cssMode) {\n        wrapperEl.addEventListener('scroll', swiper.onScroll);\n      }\n\n      // Resize handler\n      if (params.updateOnWindowResize) {\n        swiper.on(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n      } else {\n        swiper.on('observerUpdate', onResize, true);\n      }\n    }\n    function detachEvents() {\n      var swiper = this;\n      var params = swiper.params;\n      var touchEvents = swiper.touchEvents;\n      var el = swiper.el;\n      var wrapperEl = swiper.wrapperEl;\n      var capture = !!params.nested;\n\n      // Touch Events\n      if (!Support.touch && Support.pointerEvents) {\n        el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n        doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n      } else {\n        if (Support.touch) {\n          var passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? {\n            passive: true,\n            capture: false\n          } : false;\n          el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n          el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n          el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n          if (touchEvents.cancel) {\n            el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n          }\n        }\n        if (params.simulateTouch && !Device.ios && !Device.android || params.simulateTouch && !Support.touch && Device.ios) {\n          el.removeEventListener('mousedown', swiper.onTouchStart, false);\n          doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\n          doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\n        }\n      }\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        el.removeEventListener('click', swiper.onClick, true);\n      }\n      if (params.cssMode) {\n        wrapperEl.removeEventListener('scroll', swiper.onScroll);\n      }\n\n      // Resize handler\n      swiper.off(Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize);\n    }\n    var events = {\n      attachEvents: attachEvents,\n      detachEvents: detachEvents\n    };\n    function setBreakpoint() {\n      var swiper = this;\n      var activeIndex = swiper.activeIndex;\n      var initialized = swiper.initialized;\n      var loopedSlides = swiper.loopedSlides;\n      if (loopedSlides === void 0) loopedSlides = 0;\n      var params = swiper.params;\n      var $el = swiper.$el;\n      var breakpoints = params.breakpoints;\n      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) {\n        return;\n      }\n\n      // Get breakpoint for window width and update parameters\n      var breakpoint = swiper.getBreakpoint(breakpoints);\n      if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n        var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n        if (breakpointOnlyParams) {\n          ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach(function (param) {\n            var paramValue = breakpointOnlyParams[param];\n            if (typeof paramValue === 'undefined') {\n              return;\n            }\n            if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n              breakpointOnlyParams[param] = 'auto';\n            } else if (param === 'slidesPerView') {\n              breakpointOnlyParams[param] = parseFloat(paramValue);\n            } else {\n              breakpointOnlyParams[param] = parseInt(paramValue, 10);\n            }\n          });\n        }\n        var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n        var wasMultiRow = params.slidesPerColumn > 1;\n        var isMultiRow = breakpointParams.slidesPerColumn > 1;\n        if (wasMultiRow && !isMultiRow) {\n          $el.removeClass(params.containerModifierClass + \"multirow \" + params.containerModifierClass + \"multirow-column\");\n        } else if (!wasMultiRow && isMultiRow) {\n          $el.addClass(params.containerModifierClass + \"multirow\");\n          if (breakpointParams.slidesPerColumnFill === 'column') {\n            $el.addClass(params.containerModifierClass + \"multirow-column\");\n          }\n        }\n        var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n        var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n        if (directionChanged && initialized) {\n          swiper.changeDirection();\n        }\n        Utils.extend(swiper.params, breakpointParams);\n        Utils.extend(swiper, {\n          allowTouchMove: swiper.params.allowTouchMove,\n          allowSlideNext: swiper.params.allowSlideNext,\n          allowSlidePrev: swiper.params.allowSlidePrev\n        });\n        swiper.currentBreakpoint = breakpoint;\n        if (needsReLoop && initialized) {\n          swiper.loopDestroy();\n          swiper.loopCreate();\n          swiper.updateSlides();\n          swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n        }\n        swiper.emit('breakpoint', breakpointParams);\n      }\n    }\n    function getBreakpoint(breakpoints) {\n      // Get breakpoint for window width\n      if (!breakpoints) {\n        return undefined;\n      }\n      var breakpoint = false;\n      var points = Object.keys(breakpoints).map(function (point) {\n        if (typeof point === 'string' && point.indexOf('@') === 0) {\n          var minRatio = parseFloat(point.substr(1));\n          var value = win.innerHeight * minRatio;\n          return {\n            value: value,\n            point: point\n          };\n        }\n        return {\n          value: point,\n          point: point\n        };\n      });\n      points.sort(function (a, b) {\n        return parseInt(a.value, 10) - parseInt(b.value, 10);\n      });\n      for (var i = 0; i < points.length; i += 1) {\n        var ref = points[i];\n        var point = ref.point;\n        var value = ref.value;\n        if (value <= win.innerWidth) {\n          breakpoint = point;\n        }\n      }\n      return breakpoint || 'max';\n    }\n    var breakpoints = {\n      setBreakpoint: setBreakpoint,\n      getBreakpoint: getBreakpoint\n    };\n    function addClasses() {\n      var swiper = this;\n      var classNames = swiper.classNames;\n      var params = swiper.params;\n      var rtl = swiper.rtl;\n      var $el = swiper.$el;\n      var suffixes = [];\n      suffixes.push('initialized');\n      suffixes.push(params.direction);\n      if (params.freeMode) {\n        suffixes.push('free-mode');\n      }\n      if (params.autoHeight) {\n        suffixes.push('autoheight');\n      }\n      if (rtl) {\n        suffixes.push('rtl');\n      }\n      if (params.slidesPerColumn > 1) {\n        suffixes.push('multirow');\n        if (params.slidesPerColumnFill === 'column') {\n          suffixes.push('multirow-column');\n        }\n      }\n      if (Device.android) {\n        suffixes.push('android');\n      }\n      if (Device.ios) {\n        suffixes.push('ios');\n      }\n      if (params.cssMode) {\n        suffixes.push('css-mode');\n      }\n      suffixes.forEach(function (suffix) {\n        classNames.push(params.containerModifierClass + suffix);\n      });\n      $el.addClass(classNames.join(' '));\n    }\n    function removeClasses() {\n      var swiper = this;\n      var $el = swiper.$el;\n      var classNames = swiper.classNames;\n      $el.removeClass(classNames.join(' '));\n    }\n    var classes = {\n      addClasses: addClasses,\n      removeClasses: removeClasses\n    };\n    function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n      var image;\n      function onReady() {\n        if (callback) {\n          callback();\n        }\n      }\n      if (!imageEl.complete || !checkForComplete) {\n        if (src) {\n          image = new win.Image();\n          image.onload = onReady;\n          image.onerror = onReady;\n          if (sizes) {\n            image.sizes = sizes;\n          }\n          if (srcset) {\n            image.srcset = srcset;\n          }\n          if (src) {\n            image.src = src;\n          }\n        } else {\n          onReady();\n        }\n      } else {\n        // image already loaded...\n        onReady();\n      }\n    }\n    function preloadImages() {\n      var swiper = this;\n      swiper.imagesToLoad = swiper.$el.find('img');\n      function onReady() {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) {\n          return;\n        }\n        if (swiper.imagesLoaded !== undefined) {\n          swiper.imagesLoaded += 1;\n        }\n        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n          if (swiper.params.updateOnImagesReady) {\n            swiper.update();\n          }\n          swiper.emit('imagesReady');\n        }\n      }\n      for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {\n        var imageEl = swiper.imagesToLoad[i];\n        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n      }\n    }\n    var images = {\n      loadImage: loadImage,\n      preloadImages: preloadImages\n    };\n    function checkOverflow() {\n      var swiper = this;\n      var params = swiper.params;\n      var wasLocked = swiper.isLocked;\n      var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;\n      if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n        swiper.isLocked = lastSlidePosition <= swiper.size;\n      } else {\n        swiper.isLocked = swiper.snapGrid.length === 1;\n      }\n      swiper.allowSlideNext = !swiper.isLocked;\n      swiper.allowSlidePrev = !swiper.isLocked;\n\n      // events\n      if (wasLocked !== swiper.isLocked) {\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n      }\n      if (wasLocked && wasLocked !== swiper.isLocked) {\n        swiper.isEnd = false;\n        swiper.navigation.update();\n      }\n    }\n    var checkOverflow$1 = {\n      checkOverflow: checkOverflow\n    };\n    var defaults = {\n      init: true,\n      direction: 'horizontal',\n      touchEventsTarget: 'container',\n      initialSlide: 0,\n      speed: 300,\n      cssMode: false,\n      updateOnWindowResize: true,\n      //\n      preventInteractionOnTransition: false,\n      // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n      edgeSwipeDetection: false,\n      edgeSwipeThreshold: 20,\n      // Free mode\n      freeMode: false,\n      freeModeMomentum: true,\n      freeModeMomentumRatio: 1,\n      freeModeMomentumBounce: true,\n      freeModeMomentumBounceRatio: 1,\n      freeModeMomentumVelocityRatio: 1,\n      freeModeSticky: false,\n      freeModeMinimumVelocity: 0.02,\n      // Autoheight\n      autoHeight: false,\n      // Set wrapper width\n      setWrapperSize: false,\n      // Virtual Translate\n      virtualTranslate: false,\n      // Effects\n      effect: 'slide',\n      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n      // Breakpoints\n      breakpoints: undefined,\n      // Slides grid\n      spaceBetween: 0,\n      slidesPerView: 1,\n      slidesPerColumn: 1,\n      slidesPerColumnFill: 'column',\n      slidesPerGroup: 1,\n      slidesPerGroupSkip: 0,\n      centeredSlides: false,\n      centeredSlidesBounds: false,\n      slidesOffsetBefore: 0,\n      // in px\n      slidesOffsetAfter: 0,\n      // in px\n      normalizeSlideIndex: true,\n      centerInsufficientSlides: false,\n      // Disable swiper and hide navigation when container not overflow\n      watchOverflow: false,\n      // Round length\n      roundLengths: false,\n      // Touches\n      touchRatio: 1,\n      touchAngle: 45,\n      simulateTouch: true,\n      shortSwipes: true,\n      longSwipes: true,\n      longSwipesRatio: 0.5,\n      longSwipesMs: 300,\n      followFinger: true,\n      allowTouchMove: true,\n      threshold: 0,\n      touchMoveStopPropagation: false,\n      touchStartPreventDefault: true,\n      touchStartForcePreventDefault: false,\n      touchReleaseOnEdges: false,\n      // Unique Navigation Elements\n      uniqueNavElements: true,\n      // Resistance\n      resistance: true,\n      resistanceRatio: 0.85,\n      // Progress\n      watchSlidesProgress: false,\n      watchSlidesVisibility: false,\n      // Cursor\n      grabCursor: false,\n      // Clicks\n      preventClicks: true,\n      preventClicksPropagation: true,\n      slideToClickedSlide: false,\n      // Images\n      preloadImages: true,\n      updateOnImagesReady: true,\n      // loop\n      loop: false,\n      loopAdditionalSlides: 0,\n      loopedSlides: null,\n      loopFillGroupWithBlank: false,\n      // Swiping/no swiping\n      allowSlidePrev: true,\n      allowSlideNext: true,\n      swipeHandler: null,\n      // '.swipe-handler',\n      noSwiping: true,\n      noSwipingClass: 'swiper-no-swiping',\n      noSwipingSelector: null,\n      // Passive Listeners\n      passiveListeners: true,\n      // NS\n      containerModifierClass: 'swiper-container-',\n      // NEW\n      slideClass: 'swiper-slide',\n      slideBlankClass: 'swiper-slide-invisible-blank',\n      slideActiveClass: 'swiper-slide-active',\n      slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n      slideVisibleClass: 'swiper-slide-visible',\n      slideDuplicateClass: 'swiper-slide-duplicate',\n      slideNextClass: 'swiper-slide-next',\n      slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n      slidePrevClass: 'swiper-slide-prev',\n      slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n      wrapperClass: 'swiper-wrapper',\n      // Callbacks\n      runCallbacksOnInit: true\n    };\n\n    /* eslint no-param-reassign: \"off\" */\n\n    var prototypes = {\n      update: update,\n      translate: translate,\n      transition: transition$1,\n      slide: slide,\n      loop: loop,\n      grabCursor: grabCursor,\n      manipulation: manipulation,\n      events: events,\n      breakpoints: breakpoints,\n      checkOverflow: checkOverflow$1,\n      classes: classes,\n      images: images\n    };\n    var extendedDefaults = {};\n    var Swiper = /*@__PURE__*/function (SwiperClass) {\n      function Swiper() {\n        var assign;\n        var args = [],\n          len = arguments.length;\n        while (len--) {\n          args[len] = arguments[len];\n        }\n        var el;\n        var params;\n        if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n          params = args[0];\n        } else {\n          assign = args, el = assign[0], params = assign[1];\n        }\n        if (!params) {\n          params = {};\n        }\n        params = Utils.extend({}, params);\n        if (el && !params.el) {\n          params.el = el;\n        }\n        SwiperClass.call(this, params);\n        Object.keys(prototypes).forEach(function (prototypeGroup) {\n          Object.keys(prototypes[prototypeGroup]).forEach(function (protoMethod) {\n            if (!Swiper.prototype[protoMethod]) {\n              Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n            }\n          });\n        });\n\n        // Swiper Instance\n        var swiper = this;\n        if (typeof swiper.modules === 'undefined') {\n          swiper.modules = {};\n        }\n        Object.keys(swiper.modules).forEach(function (moduleName) {\n          var module = swiper.modules[moduleName];\n          if (module.params) {\n            var moduleParamName = Object.keys(module.params)[0];\n            var moduleParams = module.params[moduleParamName];\n            if (_typeof(moduleParams) !== 'object' || moduleParams === null) {\n              return;\n            }\n            if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n              return;\n            }\n            if (params[moduleParamName] === true) {\n              params[moduleParamName] = {\n                enabled: true\n              };\n            }\n            if (_typeof(params[moduleParamName]) === 'object' && !('enabled' in params[moduleParamName])) {\n              params[moduleParamName].enabled = true;\n            }\n            if (!params[moduleParamName]) {\n              params[moduleParamName] = {\n                enabled: false\n              };\n            }\n          }\n        });\n\n        // Extend defaults with modules params\n        var swiperParams = Utils.extend({}, defaults);\n        swiper.useModulesParams(swiperParams);\n\n        // Extend defaults with passed params\n        swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n        swiper.originalParams = Utils.extend({}, swiper.params);\n        swiper.passedParams = Utils.extend({}, params);\n\n        // Save Dom lib\n        swiper.$ = $;\n\n        // Find el\n        var $el = $(swiper.params.el);\n        el = $el[0];\n        if (!el) {\n          return undefined;\n        }\n        if ($el.length > 1) {\n          var swipers = [];\n          $el.each(function (index, containerEl) {\n            var newParams = Utils.extend({}, params, {\n              el: containerEl\n            });\n            swipers.push(new Swiper(newParams));\n          });\n          return swipers;\n        }\n        el.swiper = swiper;\n        $el.data('swiper', swiper);\n\n        // Find Wrapper\n        var $wrapperEl;\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n          $wrapperEl = $(el.shadowRoot.querySelector(\".\" + swiper.params.wrapperClass));\n          // Children needs to return slot items\n          $wrapperEl.children = function (options) {\n            return $el.children(options);\n          };\n        } else {\n          $wrapperEl = $el.children(\".\" + swiper.params.wrapperClass);\n        }\n        // Extend Swiper\n        Utils.extend(swiper, {\n          $el: $el,\n          el: el,\n          $wrapperEl: $wrapperEl,\n          wrapperEl: $wrapperEl[0],\n          // Classes\n          classNames: [],\n          // Slides\n          slides: $(),\n          slidesGrid: [],\n          snapGrid: [],\n          slidesSizesGrid: [],\n          // isDirection\n          isHorizontal: function isHorizontal() {\n            return swiper.params.direction === 'horizontal';\n          },\n          isVertical: function isVertical() {\n            return swiper.params.direction === 'vertical';\n          },\n          // RTL\n          rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n          rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n          wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n          // Indexes\n          activeIndex: 0,\n          realIndex: 0,\n          //\n          isBeginning: true,\n          isEnd: false,\n          // Props\n          translate: 0,\n          previousTranslate: 0,\n          progress: 0,\n          velocity: 0,\n          animating: false,\n          // Locks\n          allowSlideNext: swiper.params.allowSlideNext,\n          allowSlidePrev: swiper.params.allowSlidePrev,\n          // Touch Events\n          touchEvents: function touchEvents() {\n            var touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n            var desktop = ['mousedown', 'mousemove', 'mouseup'];\n            if (Support.pointerEvents) {\n              desktop = ['pointerdown', 'pointermove', 'pointerup'];\n            }\n            swiper.touchEventsTouch = {\n              start: touch[0],\n              move: touch[1],\n              end: touch[2],\n              cancel: touch[3]\n            };\n            swiper.touchEventsDesktop = {\n              start: desktop[0],\n              move: desktop[1],\n              end: desktop[2]\n            };\n            return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n          }(),\n          touchEventsData: {\n            isTouched: undefined,\n            isMoved: undefined,\n            allowTouchCallbacks: undefined,\n            touchStartTime: undefined,\n            isScrolling: undefined,\n            currentTranslate: undefined,\n            startTranslate: undefined,\n            allowThresholdMove: undefined,\n            // Form elements to match\n            formElements: 'input, select, option, textarea, button, video, label',\n            // Last click time\n            lastClickTime: Utils.now(),\n            clickTimeout: undefined,\n            // Velocities\n            velocities: [],\n            allowMomentumBounce: undefined,\n            isTouchEvent: undefined,\n            startMoving: undefined\n          },\n          // Clicks\n          allowClick: true,\n          // Touches\n          allowTouchMove: swiper.params.allowTouchMove,\n          touches: {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n          },\n          // Images\n          imagesToLoad: [],\n          imagesLoaded: 0\n        });\n\n        // Install Modules\n        swiper.useModules();\n\n        // Init\n        if (swiper.params.init) {\n          swiper.init();\n        }\n\n        // Return app instance\n        return swiper;\n      }\n      if (SwiperClass) Swiper.__proto__ = SwiperClass;\n      Swiper.prototype = Object.create(SwiperClass && SwiperClass.prototype);\n      Swiper.prototype.constructor = Swiper;\n      var staticAccessors = {\n        extendedDefaults: {\n          configurable: true\n        },\n        defaults: {\n          configurable: true\n        },\n        Class: {\n          configurable: true\n        },\n        $: {\n          configurable: true\n        }\n      };\n      Swiper.prototype.slidesPerViewDynamic = function slidesPerViewDynamic() {\n        var swiper = this;\n        var params = swiper.params;\n        var slides = swiper.slides;\n        var slidesGrid = swiper.slidesGrid;\n        var swiperSize = swiper.size;\n        var activeIndex = swiper.activeIndex;\n        var spv = 1;\n        if (params.centeredSlides) {\n          var slideSize = slides[activeIndex].swiperSlideSize;\n          var breakLoop;\n          for (var i = activeIndex + 1; i < slides.length; i += 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) {\n                breakLoop = true;\n              }\n            }\n          }\n          for (var i$1 = activeIndex - 1; i$1 >= 0; i$1 -= 1) {\n            if (slides[i$1] && !breakLoop) {\n              slideSize += slides[i$1].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) {\n                breakLoop = true;\n              }\n            }\n          }\n        } else {\n          for (var i$2 = activeIndex + 1; i$2 < slides.length; i$2 += 1) {\n            if (slidesGrid[i$2] - slidesGrid[activeIndex] < swiperSize) {\n              spv += 1;\n            }\n          }\n        }\n        return spv;\n      };\n      Swiper.prototype.update = function update() {\n        var swiper = this;\n        if (!swiper || swiper.destroyed) {\n          return;\n        }\n        var snapGrid = swiper.snapGrid;\n        var params = swiper.params;\n        // Breakpoints\n        if (params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        function setTranslate() {\n          var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n          var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n          swiper.setTranslate(newTranslate);\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n        var translated;\n        if (swiper.params.freeMode) {\n          setTranslate();\n          if (swiper.params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        } else {\n          if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n            translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n          } else {\n            translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n          }\n          if (!translated) {\n            setTranslate();\n          }\n        }\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n          swiper.checkOverflow();\n        }\n        swiper.emit('update');\n      };\n      Swiper.prototype.changeDirection = function changeDirection(newDirection, needUpdate) {\n        if (needUpdate === void 0) needUpdate = true;\n        var swiper = this;\n        var currentDirection = swiper.params.direction;\n        if (!newDirection) {\n          // eslint-disable-next-line\n          newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n        }\n        if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n          return swiper;\n        }\n        swiper.$el.removeClass(\"\" + swiper.params.containerModifierClass + currentDirection).addClass(\"\" + swiper.params.containerModifierClass + newDirection);\n        swiper.params.direction = newDirection;\n        swiper.slides.each(function (slideIndex, slideEl) {\n          if (newDirection === 'vertical') {\n            slideEl.style.width = '';\n          } else {\n            slideEl.style.height = '';\n          }\n        });\n        swiper.emit('changeDirection');\n        if (needUpdate) {\n          swiper.update();\n        }\n        return swiper;\n      };\n      Swiper.prototype.init = function init() {\n        var swiper = this;\n        if (swiper.initialized) {\n          return;\n        }\n        swiper.emit('beforeInit');\n\n        // Set breakpoint\n        if (swiper.params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n\n        // Add Classes\n        swiper.addClasses();\n\n        // Create loop\n        if (swiper.params.loop) {\n          swiper.loopCreate();\n        }\n\n        // Update size\n        swiper.updateSize();\n\n        // Update slides\n        swiper.updateSlides();\n        if (swiper.params.watchOverflow) {\n          swiper.checkOverflow();\n        }\n\n        // Set Grab Cursor\n        if (swiper.params.grabCursor) {\n          swiper.setGrabCursor();\n        }\n        if (swiper.params.preloadImages) {\n          swiper.preloadImages();\n        }\n\n        // Slide To Initial Slide\n        if (swiper.params.loop) {\n          swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n        } else {\n          swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n        }\n\n        // Attach events\n        swiper.attachEvents();\n\n        // Init Flag\n        swiper.initialized = true;\n\n        // Emit\n        swiper.emit('init');\n      };\n      Swiper.prototype.destroy = function destroy(deleteInstance, cleanStyles) {\n        if (deleteInstance === void 0) deleteInstance = true;\n        if (cleanStyles === void 0) cleanStyles = true;\n        var swiper = this;\n        var params = swiper.params;\n        var $el = swiper.$el;\n        var $wrapperEl = swiper.$wrapperEl;\n        var slides = swiper.slides;\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n          return null;\n        }\n        swiper.emit('beforeDestroy');\n\n        // Init Flag\n        swiper.initialized = false;\n\n        // Detach events\n        swiper.detachEvents();\n\n        // Destroy loop\n        if (params.loop) {\n          swiper.loopDestroy();\n        }\n\n        // Cleanup styles\n        if (cleanStyles) {\n          swiper.removeClasses();\n          $el.removeAttr('style');\n          $wrapperEl.removeAttr('style');\n          if (slides && slides.length) {\n            slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n          }\n        }\n        swiper.emit('destroy');\n\n        // Detach emitter events\n        Object.keys(swiper.eventsListeners).forEach(function (eventName) {\n          swiper.off(eventName);\n        });\n        if (deleteInstance !== false) {\n          swiper.$el[0].swiper = null;\n          swiper.$el.data('swiper', null);\n          Utils.deleteProps(swiper);\n        }\n        swiper.destroyed = true;\n        return null;\n      };\n      Swiper.extendDefaults = function extendDefaults(newDefaults) {\n        Utils.extend(extendedDefaults, newDefaults);\n      };\n      staticAccessors.extendedDefaults.get = function () {\n        return extendedDefaults;\n      };\n      staticAccessors.defaults.get = function () {\n        return defaults;\n      };\n      staticAccessors.Class.get = function () {\n        return SwiperClass;\n      };\n      staticAccessors.$.get = function () {\n        return $;\n      };\n      Object.defineProperties(Swiper, staticAccessors);\n      return Swiper;\n    }(SwiperClass);\n    var Device$1 = {\n      name: 'device',\n      proto: {\n        device: Device\n      },\n      static: {\n        device: Device\n      }\n    };\n    var Support$1 = {\n      name: 'support',\n      proto: {\n        support: Support\n      },\n      static: {\n        support: Support\n      }\n    };\n    var Browser = function Browser() {\n      function isSafari() {\n        var ua = win.navigator.userAgent.toLowerCase();\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n      }\n      return {\n        isEdge: !!win.navigator.userAgent.match(/Edge/g),\n        isSafari: isSafari(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent)\n      };\n    }();\n    var Browser$1 = {\n      name: 'browser',\n      proto: {\n        browser: Browser\n      },\n      static: {\n        browser: Browser\n      }\n    };\n    var Resize = {\n      name: 'resize',\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          resize: {\n            resizeHandler: function resizeHandler() {\n              if (!swiper || swiper.destroyed || !swiper.initialized) {\n                return;\n              }\n              swiper.emit('beforeResize');\n              swiper.emit('resize');\n            },\n            orientationChangeHandler: function orientationChangeHandler() {\n              if (!swiper || swiper.destroyed || !swiper.initialized) {\n                return;\n              }\n              swiper.emit('orientationchange');\n            }\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          // Emit resize\n          win.addEventListener('resize', swiper.resize.resizeHandler);\n\n          // Emit orientationchange\n          win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          win.removeEventListener('resize', swiper.resize.resizeHandler);\n          win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n        }\n      }\n    };\n    var Observer = {\n      func: win.MutationObserver || win.WebkitMutationObserver,\n      attach: function attach(target, options) {\n        if (options === void 0) options = {};\n        var swiper = this;\n        var ObserverFunc = Observer.func;\n        var observer = new ObserverFunc(function (mutations) {\n          // The observerUpdate event should only be triggered\n          // once despite the number of mutations.  Additional\n          // triggers are redundant and are very costly\n          if (mutations.length === 1) {\n            swiper.emit('observerUpdate', mutations[0]);\n            return;\n          }\n          var observerUpdate = function observerUpdate() {\n            swiper.emit('observerUpdate', mutations[0]);\n          };\n          if (win.requestAnimationFrame) {\n            win.requestAnimationFrame(observerUpdate);\n          } else {\n            win.setTimeout(observerUpdate, 0);\n          }\n        });\n        observer.observe(target, {\n          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n          childList: typeof options.childList === 'undefined' ? true : options.childList,\n          characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n        });\n        swiper.observer.observers.push(observer);\n      },\n      init: function init() {\n        var swiper = this;\n        if (!Support.observer || !swiper.params.observer) {\n          return;\n        }\n        if (swiper.params.observeParents) {\n          var containerParents = swiper.$el.parents();\n          for (var i = 0; i < containerParents.length; i += 1) {\n            swiper.observer.attach(containerParents[i]);\n          }\n        }\n        // Observe container\n        swiper.observer.attach(swiper.$el[0], {\n          childList: swiper.params.observeSlideChildren\n        });\n\n        // Observe wrapper\n        swiper.observer.attach(swiper.$wrapperEl[0], {\n          attributes: false\n        });\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.observer.observers.forEach(function (observer) {\n          observer.disconnect();\n        });\n        swiper.observer.observers = [];\n      }\n    };\n    var Observer$1 = {\n      name: 'observer',\n      params: {\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          observer: {\n            init: Observer.init.bind(swiper),\n            attach: Observer.attach.bind(swiper),\n            destroy: Observer.destroy.bind(swiper),\n            observers: []\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.observer.init();\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.observer.destroy();\n        }\n      }\n    };\n    var Virtual = {\n      update: function update(force) {\n        var swiper = this;\n        var ref = swiper.params;\n        var slidesPerView = ref.slidesPerView;\n        var slidesPerGroup = ref.slidesPerGroup;\n        var centeredSlides = ref.centeredSlides;\n        var ref$1 = swiper.params.virtual;\n        var addSlidesBefore = ref$1.addSlidesBefore;\n        var addSlidesAfter = ref$1.addSlidesAfter;\n        var ref$2 = swiper.virtual;\n        var previousFrom = ref$2.from;\n        var previousTo = ref$2.to;\n        var slides = ref$2.slides;\n        var previousSlidesGrid = ref$2.slidesGrid;\n        var renderSlide = ref$2.renderSlide;\n        var previousOffset = ref$2.offset;\n        swiper.updateActiveIndex();\n        var activeIndex = swiper.activeIndex || 0;\n        var offsetProp;\n        if (swiper.rtlTranslate) {\n          offsetProp = 'right';\n        } else {\n          offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n        }\n        var slidesAfter;\n        var slidesBefore;\n        if (centeredSlides) {\n          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n        } else {\n          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n          slidesBefore = slidesPerGroup + addSlidesAfter;\n        }\n        var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n        var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n        var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n        Utils.extend(swiper.virtual, {\n          from: from,\n          to: to,\n          offset: offset,\n          slidesGrid: swiper.slidesGrid\n        });\n        function onRendered() {\n          swiper.updateSlides();\n          swiper.updateProgress();\n          swiper.updateSlidesClasses();\n          if (swiper.lazy && swiper.params.lazy.enabled) {\n            swiper.lazy.load();\n          }\n        }\n        if (previousFrom === from && previousTo === to && !force) {\n          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n            swiper.slides.css(offsetProp, offset + \"px\");\n          }\n          swiper.updateProgress();\n          return;\n        }\n        if (swiper.params.virtual.renderExternal) {\n          swiper.params.virtual.renderExternal.call(swiper, {\n            offset: offset,\n            from: from,\n            to: to,\n            slides: function getSlides() {\n              var slidesToRender = [];\n              for (var i = from; i <= to; i += 1) {\n                slidesToRender.push(slides[i]);\n              }\n              return slidesToRender;\n            }()\n          });\n          onRendered();\n          return;\n        }\n        var prependIndexes = [];\n        var appendIndexes = [];\n        if (force) {\n          swiper.$wrapperEl.find(\".\" + swiper.params.slideClass).remove();\n        } else {\n          for (var i = previousFrom; i <= previousTo; i += 1) {\n            if (i < from || i > to) {\n              swiper.$wrapperEl.find(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + i + \"\\\"]\").remove();\n            }\n          }\n        }\n        for (var i$1 = 0; i$1 < slides.length; i$1 += 1) {\n          if (i$1 >= from && i$1 <= to) {\n            if (typeof previousTo === 'undefined' || force) {\n              appendIndexes.push(i$1);\n            } else {\n              if (i$1 > previousTo) {\n                appendIndexes.push(i$1);\n              }\n              if (i$1 < previousFrom) {\n                prependIndexes.push(i$1);\n              }\n            }\n          }\n        }\n        appendIndexes.forEach(function (index) {\n          swiper.$wrapperEl.append(renderSlide(slides[index], index));\n        });\n        prependIndexes.sort(function (a, b) {\n          return b - a;\n        }).forEach(function (index) {\n          swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n        });\n        swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, offset + \"px\");\n        onRendered();\n      },\n      renderSlide: function renderSlide(slide, index) {\n        var swiper = this;\n        var params = swiper.params.virtual;\n        if (params.cache && swiper.virtual.cache[index]) {\n          return swiper.virtual.cache[index];\n        }\n        var $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(\"<div class=\\\"\" + swiper.params.slideClass + \"\\\" data-swiper-slide-index=\\\"\" + index + \"\\\">\" + slide + \"</div>\");\n        if (!$slideEl.attr('data-swiper-slide-index')) {\n          $slideEl.attr('data-swiper-slide-index', index);\n        }\n        if (params.cache) {\n          swiper.virtual.cache[index] = $slideEl;\n        }\n        return $slideEl;\n      },\n      appendSlide: function appendSlide(slides) {\n        var swiper = this;\n        if (_typeof(slides) === 'object' && 'length' in slides) {\n          for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i]) {\n              swiper.virtual.slides.push(slides[i]);\n            }\n          }\n        } else {\n          swiper.virtual.slides.push(slides);\n        }\n        swiper.virtual.update(true);\n      },\n      prependSlide: function prependSlide(slides) {\n        var swiper = this;\n        var activeIndex = swiper.activeIndex;\n        var newActiveIndex = activeIndex + 1;\n        var numberOfNewSlides = 1;\n        if (Array.isArray(slides)) {\n          for (var i = 0; i < slides.length; i += 1) {\n            if (slides[i]) {\n              swiper.virtual.slides.unshift(slides[i]);\n            }\n          }\n          newActiveIndex = activeIndex + slides.length;\n          numberOfNewSlides = slides.length;\n        } else {\n          swiper.virtual.slides.unshift(slides);\n        }\n        if (swiper.params.virtual.cache) {\n          var cache = swiper.virtual.cache;\n          var newCache = {};\n          Object.keys(cache).forEach(function (cachedIndex) {\n            var $cachedEl = cache[cachedIndex];\n            var cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n            if (cachedElIndex) {\n              $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n            }\n            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n          });\n          swiper.virtual.cache = newCache;\n        }\n        swiper.virtual.update(true);\n        swiper.slideTo(newActiveIndex, 0);\n      },\n      removeSlide: function removeSlide(slidesIndexes) {\n        var swiper = this;\n        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) {\n          return;\n        }\n        var activeIndex = swiper.activeIndex;\n        if (Array.isArray(slidesIndexes)) {\n          for (var i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\n            if (swiper.params.virtual.cache) {\n              delete swiper.virtual.cache[slidesIndexes[i]];\n            }\n            if (slidesIndexes[i] < activeIndex) {\n              activeIndex -= 1;\n            }\n            activeIndex = Math.max(activeIndex, 0);\n          }\n        } else {\n          swiper.virtual.slides.splice(slidesIndexes, 1);\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes];\n          }\n          if (slidesIndexes < activeIndex) {\n            activeIndex -= 1;\n          }\n          activeIndex = Math.max(activeIndex, 0);\n        }\n        swiper.virtual.update(true);\n        swiper.slideTo(activeIndex, 0);\n      },\n      removeAllSlides: function removeAllSlides() {\n        var swiper = this;\n        swiper.virtual.slides = [];\n        if (swiper.params.virtual.cache) {\n          swiper.virtual.cache = {};\n        }\n        swiper.virtual.update(true);\n        swiper.slideTo(0, 0);\n      }\n    };\n    var Virtual$1 = {\n      name: 'virtual',\n      params: {\n        virtual: {\n          enabled: false,\n          slides: [],\n          cache: true,\n          renderSlide: null,\n          renderExternal: null,\n          addSlidesBefore: 0,\n          addSlidesAfter: 0\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          virtual: {\n            update: Virtual.update.bind(swiper),\n            appendSlide: Virtual.appendSlide.bind(swiper),\n            prependSlide: Virtual.prependSlide.bind(swiper),\n            removeSlide: Virtual.removeSlide.bind(swiper),\n            removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n            renderSlide: Virtual.renderSlide.bind(swiper),\n            slides: swiper.params.virtual.slides,\n            cache: {}\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          if (!swiper.params.virtual.enabled) {\n            return;\n          }\n          swiper.classNames.push(swiper.params.containerModifierClass + \"virtual\");\n          var overwriteParams = {\n            watchSlidesProgress: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n          if (!swiper.params.initialSlide) {\n            swiper.virtual.update();\n          }\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          if (!swiper.params.virtual.enabled) {\n            return;\n          }\n          swiper.virtual.update();\n        }\n      }\n    };\n    var Keyboard = {\n      handle: function handle(event) {\n        var swiper = this;\n        var rtl = swiper.rtlTranslate;\n        var e = event;\n        if (e.originalEvent) {\n          e = e.originalEvent;\n        } // jquery fix\n        var kc = e.keyCode || e.charCode;\n        // Directions locks\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && kc === 39 || swiper.isVertical() && kc === 40 || kc === 34)) {\n          return false;\n        }\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && kc === 37 || swiper.isVertical() && kc === 38 || kc === 33)) {\n          return false;\n        }\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n          return undefined;\n        }\n        if (doc.activeElement && doc.activeElement.nodeName && (doc.activeElement.nodeName.toLowerCase() === 'input' || doc.activeElement.nodeName.toLowerCase() === 'textarea')) {\n          return undefined;\n        }\n        if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n          var inView = false;\n          // Check that swiper should be inside of visible area of window\n          if (swiper.$el.parents(\".\" + swiper.params.slideClass).length > 0 && swiper.$el.parents(\".\" + swiper.params.slideActiveClass).length === 0) {\n            return undefined;\n          }\n          var windowWidth = win.innerWidth;\n          var windowHeight = win.innerHeight;\n          var swiperOffset = swiper.$el.offset();\n          if (rtl) {\n            swiperOffset.left -= swiper.$el[0].scrollLeft;\n          }\n          var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n          for (var i = 0; i < swiperCoord.length; i += 1) {\n            var point = swiperCoord[i];\n            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n              inView = true;\n            }\n          }\n          if (!inView) {\n            return undefined;\n          }\n        }\n        if (swiper.isHorizontal()) {\n          if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n            if (e.preventDefault) {\n              e.preventDefault();\n            } else {\n              e.returnValue = false;\n            }\n          }\n          if ((kc === 34 || kc === 39) && !rtl || (kc === 33 || kc === 37) && rtl) {\n            swiper.slideNext();\n          }\n          if ((kc === 33 || kc === 37) && !rtl || (kc === 34 || kc === 39) && rtl) {\n            swiper.slidePrev();\n          }\n        } else {\n          if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n            if (e.preventDefault) {\n              e.preventDefault();\n            } else {\n              e.returnValue = false;\n            }\n          }\n          if (kc === 34 || kc === 40) {\n            swiper.slideNext();\n          }\n          if (kc === 33 || kc === 38) {\n            swiper.slidePrev();\n          }\n        }\n        swiper.emit('keyPress', kc);\n        return undefined;\n      },\n      enable: function enable() {\n        var swiper = this;\n        if (swiper.keyboard.enabled) {\n          return;\n        }\n        $(doc).on('keydown', swiper.keyboard.handle);\n        swiper.keyboard.enabled = true;\n      },\n      disable: function disable() {\n        var swiper = this;\n        if (!swiper.keyboard.enabled) {\n          return;\n        }\n        $(doc).off('keydown', swiper.keyboard.handle);\n        swiper.keyboard.enabled = false;\n      }\n    };\n    var Keyboard$1 = {\n      name: 'keyboard',\n      params: {\n        keyboard: {\n          enabled: false,\n          onlyInViewport: true\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          keyboard: {\n            enabled: false,\n            enable: Keyboard.enable.bind(swiper),\n            disable: Keyboard.disable.bind(swiper),\n            handle: Keyboard.handle.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          if (swiper.params.keyboard.enabled) {\n            swiper.keyboard.enable();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          if (swiper.keyboard.enabled) {\n            swiper.keyboard.disable();\n          }\n        }\n      }\n    };\n    function isEventSupported() {\n      var eventName = 'onwheel';\n      var isSupported = (eventName in doc);\n      if (!isSupported) {\n        var element = doc.createElement('div');\n        element.setAttribute(eventName, 'return;');\n        isSupported = typeof element[eventName] === 'function';\n      }\n      if (!isSupported && doc.implementation && doc.implementation.hasFeature\n      // always returns true in newer browsers as per the standard.\n      // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n      && doc.implementation.hasFeature('', '') !== true) {\n        // This is the only way to test support for the `wheel` event in IE9+.\n        isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\n      }\n      return isSupported;\n    }\n    var Mousewheel = {\n      lastScrollTime: Utils.now(),\n      lastEventBeforeSnap: undefined,\n      recentWheelEvents: [],\n      event: function event() {\n        if (win.navigator.userAgent.indexOf('firefox') > -1) {\n          return 'DOMMouseScroll';\n        }\n        return isEventSupported() ? 'wheel' : 'mousewheel';\n      },\n      normalize: function normalize(e) {\n        // Reasonable defaults\n        var PIXEL_STEP = 10;\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        var sX = 0;\n        var sY = 0; // spinX, spinY\n        var pX = 0;\n        var pY = 0; // pixelX, pixelY\n\n        // Legacy\n        if ('detail' in e) {\n          sY = e.detail;\n        }\n        if ('wheelDelta' in e) {\n          sY = -e.wheelDelta / 120;\n        }\n        if ('wheelDeltaY' in e) {\n          sY = -e.wheelDeltaY / 120;\n        }\n        if ('wheelDeltaX' in e) {\n          sX = -e.wheelDeltaX / 120;\n        }\n\n        // side scrolling on FF with DOMMouseScroll\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n          sX = sY;\n          sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if ('deltaY' in e) {\n          pY = e.deltaY;\n        }\n        if ('deltaX' in e) {\n          pX = e.deltaX;\n        }\n        if (e.shiftKey && !pX) {\n          // if user scrolls with shift he wants horizontal scroll\n          pX = pY;\n          pY = 0;\n        }\n        if ((pX || pY) && e.deltaMode) {\n          if (e.deltaMode === 1) {\n            // delta in LINE units\n            pX *= LINE_HEIGHT;\n            pY *= LINE_HEIGHT;\n          } else {\n            // delta in PAGE units\n            pX *= PAGE_HEIGHT;\n            pY *= PAGE_HEIGHT;\n          }\n        }\n\n        // Fall-back if spin cannot be determined\n        if (pX && !sX) {\n          sX = pX < 1 ? -1 : 1;\n        }\n        if (pY && !sY) {\n          sY = pY < 1 ? -1 : 1;\n        }\n        return {\n          spinX: sX,\n          spinY: sY,\n          pixelX: pX,\n          pixelY: pY\n        };\n      },\n      handleMouseEnter: function handleMouseEnter() {\n        var swiper = this;\n        swiper.mouseEntered = true;\n      },\n      handleMouseLeave: function handleMouseLeave() {\n        var swiper = this;\n        swiper.mouseEntered = false;\n      },\n      handle: function handle(event) {\n        var e = event;\n        var swiper = this;\n        var params = swiper.params.mousewheel;\n        if (swiper.params.cssMode) {\n          e.preventDefault();\n        }\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarged);\n        }\n        if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) {\n          return true;\n        }\n        if (e.originalEvent) {\n          e = e.originalEvent;\n        } // jquery fix\n        var delta = 0;\n        var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        var data = Mousewheel.normalize(e);\n        if (params.forceToAxis) {\n          if (swiper.isHorizontal()) {\n            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) {\n              delta = data.pixelX * rtlFactor;\n            } else {\n              return true;\n            }\n          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) {\n            delta = data.pixelY;\n          } else {\n            return true;\n          }\n        } else {\n          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n        }\n        if (delta === 0) {\n          return true;\n        }\n        if (params.invert) {\n          delta = -delta;\n        }\n        if (!swiper.params.freeMode) {\n          // Register the new event in a variable which stores the relevant data\n          var newEvent = {\n            time: Utils.now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta),\n            raw: event\n          };\n\n          // Keep the most recent events\n          var recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 2) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          recentWheelEvents.push(newEvent);\n\n          // If there is at least one previous recorded event:\n          //   If direction has changed or\n          //   if the scroll is quicker than the previous one:\n          //     Animate the slider.\n          // Else (this is the first time the wheel is moved):\n          //     Animate the slider.\n          if (prevEvent) {\n            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n              swiper.mousewheel.animateSlider(newEvent);\n            }\n          } else {\n            swiper.mousewheel.animateSlider(newEvent);\n          }\n\n          // If it's time to release the scroll:\n          //   Return now so you don't hit the preventDefault.\n          if (swiper.mousewheel.releaseScroll(newEvent)) {\n            return true;\n          }\n        } else {\n          // Freemode or scrollContainer:\n\n          // If we recently snapped after a momentum scroll, then ignore wheel events\n          // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n          // or if it's a new scroll (larger delta or inverse sign as last event before\n          // an end-of-momentum snap).\n          var newEvent$1 = {\n            time: Utils.now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta)\n          };\n          var ref = swiper.mousewheel;\n          var lastEventBeforeSnap = ref.lastEventBeforeSnap;\n          var ignoreWheelEvents = lastEventBeforeSnap && newEvent$1.time < lastEventBeforeSnap.time + 500 && newEvent$1.delta <= lastEventBeforeSnap.delta && newEvent$1.direction === lastEventBeforeSnap.direction;\n          if (!ignoreWheelEvents) {\n            swiper.mousewheel.lastEventBeforeSnap = undefined;\n            if (swiper.params.loop) {\n              swiper.loopFix();\n            }\n            var position = swiper.getTranslate() + delta * params.sensitivity;\n            var wasBeginning = swiper.isBeginning;\n            var wasEnd = swiper.isEnd;\n            if (position >= swiper.minTranslate()) {\n              position = swiper.minTranslate();\n            }\n            if (position <= swiper.maxTranslate()) {\n              position = swiper.maxTranslate();\n            }\n            swiper.setTransition(0);\n            swiper.setTranslate(position);\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n              swiper.updateSlidesClasses();\n            }\n            if (swiper.params.freeModeSticky) {\n              // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n              // the end of a momentum scroll by storing recent (N=15?) wheel events.\n              // 1. do all N events have decreasing or same (absolute value) delta?\n              // 2. did all N events arrive in the last M (M=500?) msecs?\n              // 3. does the earliest event have an (absolute value) delta that's\n              //    at least P (P=1?) larger than the most recent event's delta?\n              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n              // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n              // Snap immediately and ignore remaining wheel events in this scroll.\n              // See comment above for \"remaining wheel events in this scroll\" determination.\n              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n              clearTimeout(swiper.mousewheel.timeout);\n              swiper.mousewheel.timeout = undefined;\n              var recentWheelEvents$1 = swiper.mousewheel.recentWheelEvents;\n              if (recentWheelEvents$1.length >= 15) {\n                recentWheelEvents$1.shift(); // only store the last N events\n              }\n\n              var prevEvent$1 = recentWheelEvents$1.length ? recentWheelEvents$1[recentWheelEvents$1.length - 1] : undefined;\n              var firstEvent = recentWheelEvents$1[0];\n              recentWheelEvents$1.push(newEvent$1);\n              if (prevEvent$1 && (newEvent$1.delta > prevEvent$1.delta || newEvent$1.direction !== prevEvent$1.direction)) {\n                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                recentWheelEvents$1.splice(0);\n              } else if (recentWheelEvents$1.length >= 15 && newEvent$1.time - firstEvent.time < 500 && firstEvent.delta - newEvent$1.delta >= 1 && newEvent$1.delta <= 6) {\n                // We're at the end of the deceleration of a momentum scroll, so there's no need\n                // to wait for more events. Snap ASAP on the next tick.\n                // Also, because there's some remaining momentum we'll bias the snap in the\n                // direction of the ongoing scroll because it's better UX for the scroll to snap\n                // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                // if it's already scrolled more than 20% in the current direction, keep going.\n                var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                swiper.mousewheel.lastEventBeforeSnap = newEvent$1;\n                recentWheelEvents$1.splice(0);\n                swiper.mousewheel.timeout = Utils.nextTick(function () {\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 0); // no delay; move on next tick\n              }\n\n              if (!swiper.mousewheel.timeout) {\n                // if we get here, then we haven't detected the end of a momentum scroll, so\n                // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                // for 500ms.\n                swiper.mousewheel.timeout = Utils.nextTick(function () {\n                  var snapToThreshold = 0.5;\n                  swiper.mousewheel.lastEventBeforeSnap = newEvent$1;\n                  recentWheelEvents$1.splice(0);\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 500);\n              }\n            }\n\n            // Emit event\n            if (!ignoreWheelEvents) {\n              swiper.emit('scroll', e);\n            }\n\n            // Stop autoplay\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) {\n              swiper.autoplay.stop();\n            }\n            // Return page scroll on edge positions\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) {\n              return true;\n            }\n          }\n        }\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n        return false;\n      },\n      animateSlider: function animateSlider(newEvent) {\n        var swiper = this;\n        // If the movement is NOT big enough and\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n        //   Don't go any further (avoid insignificant scroll movement).\n        if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n          // Return false as a default\n          return true;\n        }\n        // If user is scrolling towards the end:\n        //   If the slider hasn't hit the latest slide or\n        //   if the slider is a loop and\n        //   if the slider isn't moving right now:\n        //     Go to next slide and\n        //     emit a scroll event.\n        // Else (the user is scrolling towards the beginning) and\n        // if the slider hasn't hit the first slide or\n        // if the slider is a loop and\n        // if the slider isn't moving right now:\n        //   Go to prev slide and\n        //   emit a scroll event.\n        if (newEvent.direction < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', newEvent.raw);\n          }\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', newEvent.raw);\n        }\n        // If you got here is because an animation has been triggered so store the current time\n        swiper.mousewheel.lastScrollTime = new win.Date().getTime();\n        // Return false as a default\n        return false;\n      },\n      releaseScroll: function releaseScroll(newEvent) {\n        var swiper = this;\n        var params = swiper.params.mousewheel;\n        if (newEvent.direction < 0) {\n          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n            // Return true to animate scroll on edges\n            return true;\n          }\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n        return false;\n      },\n      enable: function enable() {\n        var swiper = this;\n        var event = Mousewheel.event();\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n          return true;\n        }\n        if (!event) {\n          return false;\n        }\n        if (swiper.mousewheel.enabled) {\n          return false;\n        }\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarged);\n        }\n        target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n        target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n        target.on(event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = true;\n        return true;\n      },\n      disable: function disable() {\n        var swiper = this;\n        var event = Mousewheel.event();\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n          return true;\n        }\n        if (!event) {\n          return false;\n        }\n        if (!swiper.mousewheel.enabled) {\n          return false;\n        }\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarged !== 'container') {\n          target = $(swiper.params.mousewheel.eventsTarged);\n        }\n        target.off(event, swiper.mousewheel.handle);\n        swiper.mousewheel.enabled = false;\n        return true;\n      }\n    };\n    var Mousewheel$1 = {\n      name: 'mousewheel',\n      params: {\n        mousewheel: {\n          enabled: false,\n          releaseOnEdges: false,\n          invert: false,\n          forceToAxis: false,\n          sensitivity: 1,\n          eventsTarged: 'container'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          mousewheel: {\n            enabled: false,\n            enable: Mousewheel.enable.bind(swiper),\n            disable: Mousewheel.disable.bind(swiper),\n            handle: Mousewheel.handle.bind(swiper),\n            handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n            handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n            animateSlider: Mousewheel.animateSlider.bind(swiper),\n            releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n            lastScrollTime: Utils.now(),\n            lastEventBeforeSnap: undefined,\n            recentWheelEvents: []\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n            swiper.mousewheel.disable();\n          }\n          if (swiper.params.mousewheel.enabled) {\n            swiper.mousewheel.enable();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          if (swiper.params.cssMode) {\n            swiper.mousewheel.enable();\n          }\n          if (swiper.mousewheel.enabled) {\n            swiper.mousewheel.disable();\n          }\n        }\n      }\n    };\n    var Navigation = {\n      update: function update() {\n        // Update Navigation Buttons\n        var swiper = this;\n        var params = swiper.params.navigation;\n        if (swiper.params.loop) {\n          return;\n        }\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if ($prevEl && $prevEl.length > 0) {\n          if (swiper.isBeginning) {\n            $prevEl.addClass(params.disabledClass);\n          } else {\n            $prevEl.removeClass(params.disabledClass);\n          }\n          $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n        if ($nextEl && $nextEl.length > 0) {\n          if (swiper.isEnd) {\n            $nextEl.addClass(params.disabledClass);\n          } else {\n            $nextEl.removeClass(params.disabledClass);\n          }\n          $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n        }\n      },\n      onPrevClick: function onPrevClick(e) {\n        var swiper = this;\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) {\n          return;\n        }\n        swiper.slidePrev();\n      },\n      onNextClick: function onNextClick(e) {\n        var swiper = this;\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) {\n          return;\n        }\n        swiper.slideNext();\n      },\n      init: function init() {\n        var swiper = this;\n        var params = swiper.params.navigation;\n        if (!(params.nextEl || params.prevEl)) {\n          return;\n        }\n        var $nextEl;\n        var $prevEl;\n        if (params.nextEl) {\n          $nextEl = $(params.nextEl);\n          if (swiper.params.uniqueNavElements && typeof params.nextEl === 'string' && $nextEl.length > 1 && swiper.$el.find(params.nextEl).length === 1) {\n            $nextEl = swiper.$el.find(params.nextEl);\n          }\n        }\n        if (params.prevEl) {\n          $prevEl = $(params.prevEl);\n          if (swiper.params.uniqueNavElements && typeof params.prevEl === 'string' && $prevEl.length > 1 && swiper.$el.find(params.prevEl).length === 1) {\n            $prevEl = swiper.$el.find(params.prevEl);\n          }\n        }\n        if ($nextEl && $nextEl.length > 0) {\n          $nextEl.on('click', swiper.navigation.onNextClick);\n        }\n        if ($prevEl && $prevEl.length > 0) {\n          $prevEl.on('click', swiper.navigation.onPrevClick);\n        }\n        Utils.extend(swiper.navigation, {\n          $nextEl: $nextEl,\n          nextEl: $nextEl && $nextEl[0],\n          $prevEl: $prevEl,\n          prevEl: $prevEl && $prevEl[0]\n        });\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if ($nextEl && $nextEl.length) {\n          $nextEl.off('click', swiper.navigation.onNextClick);\n          $nextEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n        if ($prevEl && $prevEl.length) {\n          $prevEl.off('click', swiper.navigation.onPrevClick);\n          $prevEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n      }\n    };\n    var Navigation$1 = {\n      name: 'navigation',\n      params: {\n        navigation: {\n          nextEl: null,\n          prevEl: null,\n          hideOnClick: false,\n          disabledClass: 'swiper-button-disabled',\n          hiddenClass: 'swiper-button-hidden',\n          lockClass: 'swiper-button-lock'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          navigation: {\n            init: Navigation.init.bind(swiper),\n            update: Navigation.update.bind(swiper),\n            destroy: Navigation.destroy.bind(swiper),\n            onNextClick: Navigation.onNextClick.bind(swiper),\n            onPrevClick: Navigation.onPrevClick.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.navigation.init();\n          swiper.navigation.update();\n        },\n        toEdge: function toEdge() {\n          var swiper = this;\n          swiper.navigation.update();\n        },\n        fromEdge: function fromEdge() {\n          var swiper = this;\n          swiper.navigation.update();\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.navigation.destroy();\n        },\n        click: function click(e) {\n          var swiper = this;\n          var ref = swiper.navigation;\n          var $nextEl = ref.$nextEl;\n          var $prevEl = ref.$prevEl;\n          if (swiper.params.navigation.hideOnClick && !$(e.target).is($prevEl) && !$(e.target).is($nextEl)) {\n            var isHidden;\n            if ($nextEl) {\n              isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n            } else if ($prevEl) {\n              isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n            }\n            if (isHidden === true) {\n              swiper.emit('navigationShow', swiper);\n            } else {\n              swiper.emit('navigationHide', swiper);\n            }\n            if ($nextEl) {\n              $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n            }\n            if ($prevEl) {\n              $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n            }\n          }\n        }\n      }\n    };\n    var Pagination = {\n      update: function update() {\n        // Render || Update Pagination bullets/items\n        var swiper = this;\n        var rtl = swiper.rtl;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n          return;\n        }\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        // Current/Total\n        var current;\n        var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        if (swiper.params.loop) {\n          current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n          if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n            current -= slidesLength - swiper.loopedSlides * 2;\n          }\n          if (current > total - 1) {\n            current -= total;\n          }\n          if (current < 0 && swiper.params.paginationType !== 'bullets') {\n            current = total + current;\n          }\n        } else if (typeof swiper.snapIndex !== 'undefined') {\n          current = swiper.snapIndex;\n        } else {\n          current = swiper.activeIndex || 0;\n        }\n        // Types\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n          var bullets = swiper.pagination.bullets;\n          var firstIndex;\n          var lastIndex;\n          var midIndex;\n          if (params.dynamicBullets) {\n            swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n            $el.css(swiper.isHorizontal() ? 'width' : 'height', swiper.pagination.bulletSize * (params.dynamicMainBullets + 4) + \"px\");\n            if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n              swiper.pagination.dynamicBulletIndex += current - swiper.previousIndex;\n              if (swiper.pagination.dynamicBulletIndex > params.dynamicMainBullets - 1) {\n                swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n              } else if (swiper.pagination.dynamicBulletIndex < 0) {\n                swiper.pagination.dynamicBulletIndex = 0;\n              }\n            }\n            firstIndex = current - swiper.pagination.dynamicBulletIndex;\n            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n            midIndex = (lastIndex + firstIndex) / 2;\n          }\n          bullets.removeClass(params.bulletActiveClass + \" \" + params.bulletActiveClass + \"-next \" + params.bulletActiveClass + \"-next-next \" + params.bulletActiveClass + \"-prev \" + params.bulletActiveClass + \"-prev-prev \" + params.bulletActiveClass + \"-main\");\n          if ($el.length > 1) {\n            bullets.each(function (index, bullet) {\n              var $bullet = $(bullet);\n              var bulletIndex = $bullet.index();\n              if (bulletIndex === current) {\n                $bullet.addClass(params.bulletActiveClass);\n              }\n              if (params.dynamicBullets) {\n                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                  $bullet.addClass(params.bulletActiveClass + \"-main\");\n                }\n                if (bulletIndex === firstIndex) {\n                  $bullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                }\n                if (bulletIndex === lastIndex) {\n                  $bullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n                }\n              }\n            });\n          } else {\n            var $bullet = bullets.eq(current);\n            var bulletIndex = $bullet.index();\n            $bullet.addClass(params.bulletActiveClass);\n            if (params.dynamicBullets) {\n              var $firstDisplayedBullet = bullets.eq(firstIndex);\n              var $lastDisplayedBullet = bullets.eq(lastIndex);\n              for (var i = firstIndex; i <= lastIndex; i += 1) {\n                bullets.eq(i).addClass(params.bulletActiveClass + \"-main\");\n              }\n              if (swiper.params.loop) {\n                if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n                  for (var i$1 = params.dynamicMainBullets; i$1 >= 0; i$1 -= 1) {\n                    bullets.eq(bullets.length - i$1).addClass(params.bulletActiveClass + \"-main\");\n                  }\n                  bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(params.bulletActiveClass + \"-prev\");\n                } else {\n                  $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                  $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n                }\n              } else {\n                $firstDisplayedBullet.prev().addClass(params.bulletActiveClass + \"-prev\").prev().addClass(params.bulletActiveClass + \"-prev-prev\");\n                $lastDisplayedBullet.next().addClass(params.bulletActiveClass + \"-next\").next().addClass(params.bulletActiveClass + \"-next-next\");\n              }\n            }\n          }\n          if (params.dynamicBullets) {\n            var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n            var bulletsOffset = (swiper.pagination.bulletSize * dynamicBulletsLength - swiper.pagination.bulletSize) / 2 - midIndex * swiper.pagination.bulletSize;\n            var offsetProp = rtl ? 'right' : 'left';\n            bullets.css(swiper.isHorizontal() ? offsetProp : 'top', bulletsOffset + \"px\");\n          }\n        }\n        if (params.type === 'fraction') {\n          $el.find(\".\" + params.currentClass).text(params.formatFractionCurrent(current + 1));\n          $el.find(\".\" + params.totalClass).text(params.formatFractionTotal(total));\n        }\n        if (params.type === 'progressbar') {\n          var progressbarDirection;\n          if (params.progressbarOpposite) {\n            progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n          } else {\n            progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n          }\n          var scale = (current + 1) / total;\n          var scaleX = 1;\n          var scaleY = 1;\n          if (progressbarDirection === 'horizontal') {\n            scaleX = scale;\n          } else {\n            scaleY = scale;\n          }\n          $el.find(\".\" + params.progressbarFillClass).transform(\"translate3d(0,0,0) scaleX(\" + scaleX + \") scaleY(\" + scaleY + \")\").transition(swiper.params.speed);\n        }\n        if (params.type === 'custom' && params.renderCustom) {\n          $el.html(params.renderCustom(swiper, current + 1, total));\n          swiper.emit('paginationRender', swiper, $el[0]);\n        } else {\n          swiper.emit('paginationUpdate', swiper, $el[0]);\n        }\n        $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      },\n      render: function render() {\n        // Render Container\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n          return;\n        }\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        var paginationHTML = '';\n        if (params.type === 'bullets') {\n          var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n          for (var i = 0; i < numberOfBullets; i += 1) {\n            if (params.renderBullet) {\n              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n            } else {\n              paginationHTML += \"<\" + params.bulletElement + \" class=\\\"\" + params.bulletClass + \"\\\"></\" + params.bulletElement + \">\";\n            }\n          }\n          $el.html(paginationHTML);\n          swiper.pagination.bullets = $el.find(\".\" + params.bulletClass);\n        }\n        if (params.type === 'fraction') {\n          if (params.renderFraction) {\n            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n          } else {\n            paginationHTML = \"<span class=\\\"\" + params.currentClass + \"\\\"></span>\" + ' / ' + \"<span class=\\\"\" + params.totalClass + \"\\\"></span>\";\n          }\n          $el.html(paginationHTML);\n        }\n        if (params.type === 'progressbar') {\n          if (params.renderProgressbar) {\n            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n          } else {\n            paginationHTML = \"<span class=\\\"\" + params.progressbarFillClass + \"\\\"></span>\";\n          }\n          $el.html(paginationHTML);\n        }\n        if (params.type !== 'custom') {\n          swiper.emit('paginationRender', swiper.pagination.$el[0]);\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el) {\n          return;\n        }\n        var $el = $(params.el);\n        if ($el.length === 0) {\n          return;\n        }\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && swiper.$el.find(params.el).length === 1) {\n          $el = swiper.$el.find(params.el);\n        }\n        if (params.type === 'bullets' && params.clickable) {\n          $el.addClass(params.clickableClass);\n        }\n        $el.addClass(params.modifierClass + params.type);\n        if (params.type === 'bullets' && params.dynamicBullets) {\n          $el.addClass(\"\" + params.modifierClass + params.type + \"-dynamic\");\n          swiper.pagination.dynamicBulletIndex = 0;\n          if (params.dynamicMainBullets < 1) {\n            params.dynamicMainBullets = 1;\n          }\n        }\n        if (params.type === 'progressbar' && params.progressbarOpposite) {\n          $el.addClass(params.progressbarOppositeClass);\n        }\n        if (params.clickable) {\n          $el.on('click', \".\" + params.bulletClass, function onClick(e) {\n            e.preventDefault();\n            var index = $(this).index() * swiper.params.slidesPerGroup;\n            if (swiper.params.loop) {\n              index += swiper.loopedSlides;\n            }\n            swiper.slideTo(index);\n          });\n        }\n        Utils.extend(swiper.pagination, {\n          $el: $el,\n          el: $el[0]\n        });\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        var params = swiper.params.pagination;\n        if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) {\n          return;\n        }\n        var $el = swiper.pagination.$el;\n        $el.removeClass(params.hiddenClass);\n        $el.removeClass(params.modifierClass + params.type);\n        if (swiper.pagination.bullets) {\n          swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n        }\n        if (params.clickable) {\n          $el.off('click', \".\" + params.bulletClass);\n        }\n      }\n    };\n    var Pagination$1 = {\n      name: 'pagination',\n      params: {\n        pagination: {\n          el: null,\n          bulletElement: 'span',\n          clickable: false,\n          hideOnClick: false,\n          renderBullet: null,\n          renderProgressbar: null,\n          renderFraction: null,\n          renderCustom: null,\n          progressbarOpposite: false,\n          type: 'bullets',\n          // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n          dynamicBullets: false,\n          dynamicMainBullets: 1,\n          formatFractionCurrent: function formatFractionCurrent(number) {\n            return number;\n          },\n          formatFractionTotal: function formatFractionTotal(number) {\n            return number;\n          },\n          bulletClass: 'swiper-pagination-bullet',\n          bulletActiveClass: 'swiper-pagination-bullet-active',\n          modifierClass: 'swiper-pagination-',\n          // NEW\n          currentClass: 'swiper-pagination-current',\n          totalClass: 'swiper-pagination-total',\n          hiddenClass: 'swiper-pagination-hidden',\n          progressbarFillClass: 'swiper-pagination-progressbar-fill',\n          progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n          clickableClass: 'swiper-pagination-clickable',\n          // NEW\n          lockClass: 'swiper-pagination-lock'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          pagination: {\n            init: Pagination.init.bind(swiper),\n            render: Pagination.render.bind(swiper),\n            update: Pagination.update.bind(swiper),\n            destroy: Pagination.destroy.bind(swiper),\n            dynamicBulletIndex: 0\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.pagination.init();\n          swiper.pagination.render();\n          swiper.pagination.update();\n        },\n        activeIndexChange: function activeIndexChange() {\n          var swiper = this;\n          if (swiper.params.loop) {\n            swiper.pagination.update();\n          } else if (typeof swiper.snapIndex === 'undefined') {\n            swiper.pagination.update();\n          }\n        },\n        snapIndexChange: function snapIndexChange() {\n          var swiper = this;\n          if (!swiper.params.loop) {\n            swiper.pagination.update();\n          }\n        },\n        slidesLengthChange: function slidesLengthChange() {\n          var swiper = this;\n          if (swiper.params.loop) {\n            swiper.pagination.render();\n            swiper.pagination.update();\n          }\n        },\n        snapGridLengthChange: function snapGridLengthChange() {\n          var swiper = this;\n          if (!swiper.params.loop) {\n            swiper.pagination.render();\n            swiper.pagination.update();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.pagination.destroy();\n        },\n        click: function click(e) {\n          var swiper = this;\n          if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && swiper.pagination.$el.length > 0 && !$(e.target).hasClass(swiper.params.pagination.bulletClass)) {\n            var isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n            if (isHidden === true) {\n              swiper.emit('paginationShow', swiper);\n            } else {\n              swiper.emit('paginationHide', swiper);\n            }\n            swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n          }\n        }\n      }\n    };\n    var Scrollbar = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n          return;\n        }\n        var scrollbar = swiper.scrollbar;\n        var rtl = swiper.rtlTranslate;\n        var progress = swiper.progress;\n        var dragSize = scrollbar.dragSize;\n        var trackSize = scrollbar.trackSize;\n        var $dragEl = scrollbar.$dragEl;\n        var $el = scrollbar.$el;\n        var params = swiper.params.scrollbar;\n        var newSize = dragSize;\n        var newPos = (trackSize - dragSize) * progress;\n        if (rtl) {\n          newPos = -newPos;\n          if (newPos > 0) {\n            newSize = dragSize - newPos;\n            newPos = 0;\n          } else if (-newPos + dragSize > trackSize) {\n            newSize = trackSize + newPos;\n          }\n        } else if (newPos < 0) {\n          newSize = dragSize + newPos;\n          newPos = 0;\n        } else if (newPos + dragSize > trackSize) {\n          newSize = trackSize - newPos;\n        }\n        if (swiper.isHorizontal()) {\n          $dragEl.transform(\"translate3d(\" + newPos + \"px, 0, 0)\");\n          $dragEl[0].style.width = newSize + \"px\";\n        } else {\n          $dragEl.transform(\"translate3d(0px, \" + newPos + \"px, 0)\");\n          $dragEl[0].style.height = newSize + \"px\";\n        }\n        if (params.hide) {\n          clearTimeout(swiper.scrollbar.timeout);\n          $el[0].style.opacity = 1;\n          swiper.scrollbar.timeout = setTimeout(function () {\n            $el[0].style.opacity = 0;\n            $el.transition(400);\n          }, 1000);\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n          return;\n        }\n        swiper.scrollbar.$dragEl.transition(duration);\n      },\n      updateSize: function updateSize() {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) {\n          return;\n        }\n        var scrollbar = swiper.scrollbar;\n        var $dragEl = scrollbar.$dragEl;\n        var $el = scrollbar.$el;\n        $dragEl[0].style.width = '';\n        $dragEl[0].style.height = '';\n        var trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n        var divider = swiper.size / swiper.virtualSize;\n        var moveDivider = divider * (trackSize / swiper.size);\n        var dragSize;\n        if (swiper.params.scrollbar.dragSize === 'auto') {\n          dragSize = trackSize * divider;\n        } else {\n          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        }\n        if (swiper.isHorizontal()) {\n          $dragEl[0].style.width = dragSize + \"px\";\n        } else {\n          $dragEl[0].style.height = dragSize + \"px\";\n        }\n        if (divider >= 1) {\n          $el[0].style.display = 'none';\n        } else {\n          $el[0].style.display = '';\n        }\n        if (swiper.params.scrollbar.hide) {\n          $el[0].style.opacity = 0;\n        }\n        Utils.extend(scrollbar, {\n          trackSize: trackSize,\n          divider: divider,\n          moveDivider: moveDivider,\n          dragSize: dragSize\n        });\n        scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n      },\n      getPointerPosition: function getPointerPosition(e) {\n        var swiper = this;\n        if (swiper.isHorizontal()) {\n          return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n        }\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n      },\n      setDragPosition: function setDragPosition(e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar;\n        var rtl = swiper.rtlTranslate;\n        var $el = scrollbar.$el;\n        var dragSize = scrollbar.dragSize;\n        var trackSize = scrollbar.trackSize;\n        var dragStartPos = scrollbar.dragStartPos;\n        var positionRatio;\n        positionRatio = (scrollbar.getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n        if (rtl) {\n          positionRatio = 1 - positionRatio;\n        }\n        var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      },\n      onDragStart: function onDragStart(e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar;\n        var $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el;\n        var $dragEl = scrollbar.$dragEl;\n        swiper.scrollbar.isTouched = true;\n        swiper.scrollbar.dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n        e.preventDefault();\n        e.stopPropagation();\n        $wrapperEl.transition(100);\n        $dragEl.transition(100);\n        scrollbar.setDragPosition(e);\n        clearTimeout(swiper.scrollbar.dragTimeout);\n        $el.transition(0);\n        if (params.hide) {\n          $el.css('opacity', 1);\n        }\n        if (swiper.params.cssMode) {\n          swiper.$wrapperEl.css('scroll-snap-type', 'none');\n        }\n        swiper.emit('scrollbarDragStart', e);\n      },\n      onDragMove: function onDragMove(e) {\n        var swiper = this;\n        var scrollbar = swiper.scrollbar;\n        var $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el;\n        var $dragEl = scrollbar.$dragEl;\n        if (!swiper.scrollbar.isTouched) {\n          return;\n        }\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n        scrollbar.setDragPosition(e);\n        $wrapperEl.transition(0);\n        $el.transition(0);\n        $dragEl.transition(0);\n        swiper.emit('scrollbarDragMove', e);\n      },\n      onDragEnd: function onDragEnd(e) {\n        var swiper = this;\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar;\n        var $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el;\n        if (!swiper.scrollbar.isTouched) {\n          return;\n        }\n        swiper.scrollbar.isTouched = false;\n        if (swiper.params.cssMode) {\n          swiper.$wrapperEl.css('scroll-snap-type', '');\n          $wrapperEl.transition('');\n        }\n        if (params.hide) {\n          clearTimeout(swiper.scrollbar.dragTimeout);\n          swiper.scrollbar.dragTimeout = Utils.nextTick(function () {\n            $el.css('opacity', 0);\n            $el.transition(400);\n          }, 1000);\n        }\n        swiper.emit('scrollbarDragEnd', e);\n        if (params.snapOnRelease) {\n          swiper.slideToClosest();\n        }\n      },\n      enableDraggable: function enableDraggable() {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el) {\n          return;\n        }\n        var scrollbar = swiper.scrollbar;\n        var touchEventsTouch = swiper.touchEventsTouch;\n        var touchEventsDesktop = swiper.touchEventsDesktop;\n        var params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? {\n          passive: false,\n          capture: false\n        } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        if (!Support.touch) {\n          target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n          doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n          doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        } else {\n          target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n          target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n          target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      },\n      disableDraggable: function disableDraggable() {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el) {\n          return;\n        }\n        var scrollbar = swiper.scrollbar;\n        var touchEventsTouch = swiper.touchEventsTouch;\n        var touchEventsDesktop = swiper.touchEventsDesktop;\n        var params = swiper.params;\n        var $el = scrollbar.$el;\n        var target = $el[0];\n        var activeListener = Support.passiveListener && params.passiveListeners ? {\n          passive: false,\n          capture: false\n        } : false;\n        var passiveListener = Support.passiveListener && params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        if (!Support.touch) {\n          target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n          doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n          doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n        } else {\n          target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n          target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n          target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.scrollbar.el) {\n          return;\n        }\n        var scrollbar = swiper.scrollbar;\n        var $swiperEl = swiper.$el;\n        var params = swiper.params.scrollbar;\n        var $el = $(params.el);\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n          $el = $swiperEl.find(params.el);\n        }\n        var $dragEl = $el.find(\".\" + swiper.params.scrollbar.dragClass);\n        if ($dragEl.length === 0) {\n          $dragEl = $(\"<div class=\\\"\" + swiper.params.scrollbar.dragClass + \"\\\"></div>\");\n          $el.append($dragEl);\n        }\n        Utils.extend(scrollbar, {\n          $el: $el,\n          el: $el[0],\n          $dragEl: $dragEl,\n          dragEl: $dragEl[0]\n        });\n        if (params.draggable) {\n          scrollbar.enableDraggable();\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        swiper.scrollbar.disableDraggable();\n      }\n    };\n    var Scrollbar$1 = {\n      name: 'scrollbar',\n      params: {\n        scrollbar: {\n          el: null,\n          dragSize: 'auto',\n          hide: false,\n          draggable: false,\n          snapOnRelease: true,\n          lockClass: 'swiper-scrollbar-lock',\n          dragClass: 'swiper-scrollbar-drag'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          scrollbar: {\n            init: Scrollbar.init.bind(swiper),\n            destroy: Scrollbar.destroy.bind(swiper),\n            updateSize: Scrollbar.updateSize.bind(swiper),\n            setTranslate: Scrollbar.setTranslate.bind(swiper),\n            setTransition: Scrollbar.setTransition.bind(swiper),\n            enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n            disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n            setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n            getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n            onDragStart: Scrollbar.onDragStart.bind(swiper),\n            onDragMove: Scrollbar.onDragMove.bind(swiper),\n            onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n            isTouched: false,\n            timeout: null,\n            dragTimeout: null\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          swiper.scrollbar.init();\n          swiper.scrollbar.updateSize();\n          swiper.scrollbar.setTranslate();\n        },\n        update: function update() {\n          var swiper = this;\n          swiper.scrollbar.updateSize();\n        },\n        resize: function resize() {\n          var swiper = this;\n          swiper.scrollbar.updateSize();\n        },\n        observerUpdate: function observerUpdate() {\n          var swiper = this;\n          swiper.scrollbar.updateSize();\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          swiper.scrollbar.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          swiper.scrollbar.setTransition(duration);\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.scrollbar.destroy();\n        }\n      }\n    };\n    var Parallax = {\n      setTransform: function setTransform(el, progress) {\n        var swiper = this;\n        var rtl = swiper.rtl;\n        var $el = $(el);\n        var rtlFactor = rtl ? -1 : 1;\n        var p = $el.attr('data-swiper-parallax') || '0';\n        var x = $el.attr('data-swiper-parallax-x');\n        var y = $el.attr('data-swiper-parallax-y');\n        var scale = $el.attr('data-swiper-parallax-scale');\n        var opacity = $el.attr('data-swiper-parallax-opacity');\n        if (x || y) {\n          x = x || '0';\n          y = y || '0';\n        } else if (swiper.isHorizontal()) {\n          x = p;\n          y = '0';\n        } else {\n          y = p;\n          x = '0';\n        }\n        if (x.indexOf('%') >= 0) {\n          x = parseInt(x, 10) * progress * rtlFactor + \"%\";\n        } else {\n          x = x * progress * rtlFactor + \"px\";\n        }\n        if (y.indexOf('%') >= 0) {\n          y = parseInt(y, 10) * progress + \"%\";\n        } else {\n          y = y * progress + \"px\";\n        }\n        if (typeof opacity !== 'undefined' && opacity !== null) {\n          var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n          $el[0].style.opacity = currentOpacity;\n        }\n        if (typeof scale === 'undefined' || scale === null) {\n          $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px)\");\n        } else {\n          var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n          $el.transform(\"translate3d(\" + x + \", \" + y + \", 0px) scale(\" + currentScale + \")\");\n        }\n      },\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var $el = swiper.$el;\n        var slides = swiper.slides;\n        var progress = swiper.progress;\n        var snapGrid = swiper.snapGrid;\n        $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, el) {\n          swiper.parallax.setTransform(el, progress);\n        });\n        slides.each(function (slideIndex, slideEl) {\n          var slideProgress = slideEl.progress;\n          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n          }\n          slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n          $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, el) {\n            swiper.parallax.setTransform(el, slideProgress);\n          });\n        });\n      },\n      setTransition: function setTransition(duration) {\n        if (duration === void 0) duration = this.params.speed;\n        var swiper = this;\n        var $el = swiper.$el;\n        $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(function (index, parallaxEl) {\n          var $parallaxEl = $(parallaxEl);\n          var parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) {\n            parallaxDuration = 0;\n          }\n          $parallaxEl.transition(parallaxDuration);\n        });\n      }\n    };\n    var Parallax$1 = {\n      name: 'parallax',\n      params: {\n        parallax: {\n          enabled: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          parallax: {\n            setTransform: Parallax.setTransform.bind(swiper),\n            setTranslate: Parallax.setTranslate.bind(swiper),\n            setTransition: Parallax.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n          swiper.params.watchSlidesProgress = true;\n          swiper.originalParams.watchSlidesProgress = true;\n        },\n        init: function init() {\n          var swiper = this;\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n          swiper.parallax.setTranslate();\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n          swiper.parallax.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          if (!swiper.params.parallax.enabled) {\n            return;\n          }\n          swiper.parallax.setTransition(duration);\n        }\n      }\n    };\n    var Zoom = {\n      // Calc Scale From Multi-touches\n      getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {\n        if (e.targetTouches.length < 2) {\n          return 1;\n        }\n        var x1 = e.targetTouches[0].pageX;\n        var y1 = e.targetTouches[0].pageY;\n        var x2 = e.targetTouches[1].pageX;\n        var y2 = e.targetTouches[1].pageY;\n        var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        return distance;\n      },\n      // Events\n      onGestureStart: function onGestureStart(e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        zoom.fakeGestureTouched = false;\n        zoom.fakeGestureMoved = false;\n        if (!Support.gestures) {\n          if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n            return;\n          }\n          zoom.fakeGestureTouched = true;\n          gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$slideEl || !gesture.$slideEl.length) {\n          gesture.$slideEl = $(e.target).closest(\".\" + swiper.params.slideClass);\n          if (gesture.$slideEl.length === 0) {\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          }\n          gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n          gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n          if (gesture.$imageWrapEl.length === 0) {\n            gesture.$imageEl = undefined;\n            return;\n          }\n        }\n        gesture.$imageEl.transition(0);\n        swiper.zoom.isScaling = true;\n      },\n      onGestureChange: function onGestureChange(e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (!Support.gestures) {\n          if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n            return;\n          }\n          zoom.fakeGestureMoved = true;\n          gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n        if (Support.gestures) {\n          zoom.scale = e.scale * zoom.currentScale;\n        } else {\n          zoom.scale = gesture.scaleMove / gesture.scaleStart * zoom.currentScale;\n        }\n        if (zoom.scale > gesture.maxRatio) {\n          zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n        }\n        if (zoom.scale < params.minRatio) {\n          zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n        }\n        gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      },\n      onGestureEnd: function onGestureEnd(e) {\n        var swiper = this;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (!Support.gestures) {\n          if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n            return;\n          }\n          if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android) {\n            return;\n          }\n          zoom.fakeGestureTouched = false;\n          zoom.fakeGestureMoved = false;\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n        zoom.currentScale = zoom.scale;\n        zoom.isScaling = false;\n        if (zoom.scale === 1) {\n          gesture.$slideEl = undefined;\n        }\n      },\n      onTouchStart: function onTouchStart(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n        if (image.isTouched) {\n          return;\n        }\n        if (Device.android) {\n          e.preventDefault();\n        }\n        image.isTouched = true;\n        image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n      },\n      onTouchMove: function onTouchMove(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n        var velocity = zoom.velocity;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n        swiper.allowClick = false;\n        if (!image.isTouched || !gesture.$slideEl) {\n          return;\n        }\n        if (!image.isMoved) {\n          image.width = gesture.$imageEl[0].offsetWidth;\n          image.height = gesture.$imageEl[0].offsetHeight;\n          image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n          image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n          gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n          gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n          gesture.$imageWrapEl.transition(0);\n          if (swiper.rtl) {\n            image.startX = -image.startX;\n            image.startY = -image.startY;\n          }\n        }\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) {\n          return;\n        }\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        if (!image.isMoved && !zoom.isScaling) {\n          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n            image.isTouched = false;\n            return;\n          }\n          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n            image.isTouched = false;\n            return;\n          }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        image.isMoved = true;\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n        if (image.currentX < image.minX) {\n          image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n        }\n        if (image.currentX > image.maxX) {\n          image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n        }\n        if (image.currentY < image.minY) {\n          image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n        }\n        if (image.currentY > image.maxY) {\n          image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n        }\n\n        // Velocity\n        if (!velocity.prevPositionX) {\n          velocity.prevPositionX = image.touchesCurrent.x;\n        }\n        if (!velocity.prevPositionY) {\n          velocity.prevPositionY = image.touchesCurrent.y;\n        }\n        if (!velocity.prevTime) {\n          velocity.prevTime = Date.now();\n        }\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) {\n          velocity.x = 0;\n        }\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) {\n          velocity.y = 0;\n        }\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.$imageWrapEl.transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n      },\n      onTouchEnd: function onTouchEnd() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n        var velocity = zoom.velocity;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n        if (!image.isTouched || !image.isMoved) {\n          image.isTouched = false;\n          image.isMoved = false;\n          return;\n        }\n        image.isTouched = false;\n        image.isMoved = false;\n        var momentumDurationX = 300;\n        var momentumDurationY = 300;\n        var momentumDistanceX = velocity.x * momentumDurationX;\n        var newPositionX = image.currentX + momentumDistanceX;\n        var momentumDistanceY = velocity.y * momentumDurationY;\n        var newPositionY = image.currentY + momentumDistanceY;\n\n        // Fix duration\n        if (velocity.x !== 0) {\n          momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        }\n        if (velocity.y !== 0) {\n          momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        }\n        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY;\n\n        // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\" + image.currentX + \"px, \" + image.currentY + \"px,0)\");\n      },\n      onTransitionEnd: function onTransitionEnd() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var gesture = zoom.gesture;\n        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n          zoom.scale = 1;\n          zoom.currentScale = 1;\n          gesture.$slideEl = undefined;\n          gesture.$imageEl = undefined;\n          gesture.$imageWrapEl = undefined;\n        }\n      },\n      // Toggle Zoom\n      toggle: function toggle(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (zoom.scale && zoom.scale !== 1) {\n          // Zoom Out\n          zoom.out();\n        } else {\n          // Zoom In\n          zoom.in(e);\n        }\n      },\n      in: function in$1(e) {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture;\n        var image = zoom.image;\n        if (!gesture.$slideEl) {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n        gesture.$slideEl.addClass(\"\" + params.zoomedSlideClass);\n        var touchX;\n        var touchY;\n        var offsetX;\n        var offsetY;\n        var diffX;\n        var diffY;\n        var translateX;\n        var translateY;\n        var imageWidth;\n        var imageHeight;\n        var scaledWidth;\n        var scaledHeight;\n        var translateMinX;\n        var translateMinY;\n        var translateMaxX;\n        var translateMaxY;\n        var slideWidth;\n        var slideHeight;\n        if (typeof image.touchesStart.x === 'undefined' && e) {\n          touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n          touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n        } else {\n          touchX = image.touchesStart.x;\n          touchY = image.touchesStart.y;\n        }\n        zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n        if (e) {\n          slideWidth = gesture.$slideEl[0].offsetWidth;\n          slideHeight = gesture.$slideEl[0].offsetHeight;\n          offsetX = gesture.$slideEl.offset().left;\n          offsetY = gesture.$slideEl.offset().top;\n          diffX = offsetX + slideWidth / 2 - touchX;\n          diffY = offsetY + slideHeight / 2 - touchY;\n          imageWidth = gesture.$imageEl[0].offsetWidth;\n          imageHeight = gesture.$imageEl[0].offsetHeight;\n          scaledWidth = imageWidth * zoom.scale;\n          scaledHeight = imageHeight * zoom.scale;\n          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n          translateMaxX = -translateMinX;\n          translateMaxY = -translateMinY;\n          translateX = diffX * zoom.scale;\n          translateY = diffY * zoom.scale;\n          if (translateX < translateMinX) {\n            translateX = translateMinX;\n          }\n          if (translateX > translateMaxX) {\n            translateX = translateMaxX;\n          }\n          if (translateY < translateMinY) {\n            translateY = translateMinY;\n          }\n          if (translateY > translateMaxY) {\n            translateY = translateMaxY;\n          }\n        } else {\n          translateX = 0;\n          translateY = 0;\n        }\n        gesture.$imageWrapEl.transition(300).transform(\"translate3d(\" + translateX + \"px, \" + translateY + \"px,0)\");\n        gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\" + zoom.scale + \")\");\n      },\n      out: function out() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        var gesture = zoom.gesture;\n        if (!gesture.$slideEl) {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n          gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n          gesture.$imageWrapEl = gesture.$imageEl.parent(\".\" + params.containerClass);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n          return;\n        }\n        zoom.scale = 1;\n        zoom.currentScale = 1;\n        gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n        gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n        gesture.$slideEl.removeClass(\"\" + params.zoomedSlideClass);\n        gesture.$slideEl = undefined;\n      },\n      // Attach/Detach Events\n      enable: function enable() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (zoom.enabled) {\n          return;\n        }\n        zoom.enabled = true;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        var activeListenerWithCapture = Support.passiveListener ? {\n          passive: false,\n          capture: true\n        } : true;\n        var slideSelector = \".\" + swiper.params.slideClass;\n\n        // Scale image\n        if (Support.gestures) {\n          swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n          swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n        } else if (swiper.touchEvents.start === 'touchstart') {\n          swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n          swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n          if (swiper.touchEvents.cancel) {\n            swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n          }\n        }\n\n        // Move image\n        swiper.$wrapperEl.on(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n      },\n      disable: function disable() {\n        var swiper = this;\n        var zoom = swiper.zoom;\n        if (!zoom.enabled) {\n          return;\n        }\n        swiper.zoom.enabled = false;\n        var passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        var activeListenerWithCapture = Support.passiveListener ? {\n          passive: false,\n          capture: true\n        } : true;\n        var slideSelector = \".\" + swiper.params.slideClass;\n\n        // Scale image\n        if (Support.gestures) {\n          swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n          swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n        } else if (swiper.touchEvents.start === 'touchstart') {\n          swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n          swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n          swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n          if (swiper.touchEvents.cancel) {\n            swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n          }\n        }\n\n        // Move image\n        swiper.$wrapperEl.off(swiper.touchEvents.move, \".\" + swiper.params.zoom.containerClass, zoom.onTouchMove, activeListenerWithCapture);\n      }\n    };\n    var Zoom$1 = {\n      name: 'zoom',\n      params: {\n        zoom: {\n          enabled: false,\n          maxRatio: 3,\n          minRatio: 1,\n          toggle: true,\n          containerClass: 'swiper-zoom-container',\n          zoomedSlideClass: 'swiper-slide-zoomed'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        var zoom = {\n          enabled: false,\n          scale: 1,\n          currentScale: 1,\n          isScaling: false,\n          gesture: {\n            $slideEl: undefined,\n            slideWidth: undefined,\n            slideHeight: undefined,\n            $imageEl: undefined,\n            $imageWrapEl: undefined,\n            maxRatio: 3\n          },\n          image: {\n            isTouched: undefined,\n            isMoved: undefined,\n            currentX: undefined,\n            currentY: undefined,\n            minX: undefined,\n            minY: undefined,\n            maxX: undefined,\n            maxY: undefined,\n            width: undefined,\n            height: undefined,\n            startX: undefined,\n            startY: undefined,\n            touchesStart: {},\n            touchesCurrent: {}\n          },\n          velocity: {\n            x: undefined,\n            y: undefined,\n            prevPositionX: undefined,\n            prevPositionY: undefined,\n            prevTime: undefined\n          }\n        };\n        'onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out'.split(' ').forEach(function (methodName) {\n          zoom[methodName] = Zoom[methodName].bind(swiper);\n        });\n        Utils.extend(swiper, {\n          zoom: zoom\n        });\n        var scale = 1;\n        Object.defineProperty(swiper.zoom, 'scale', {\n          get: function get() {\n            return scale;\n          },\n          set: function set(value) {\n            if (scale !== value) {\n              var imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n              var slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n              swiper.emit('zoomChange', value, imageEl, slideEl);\n            }\n            scale = value;\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          if (swiper.params.zoom.enabled) {\n            swiper.zoom.enable();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          swiper.zoom.disable();\n        },\n        touchStart: function touchStart(e) {\n          var swiper = this;\n          if (!swiper.zoom.enabled) {\n            return;\n          }\n          swiper.zoom.onTouchStart(e);\n        },\n        touchEnd: function touchEnd(e) {\n          var swiper = this;\n          if (!swiper.zoom.enabled) {\n            return;\n          }\n          swiper.zoom.onTouchEnd(e);\n        },\n        doubleTap: function doubleTap(e) {\n          var swiper = this;\n          if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n            swiper.zoom.toggle(e);\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n          if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n            swiper.zoom.onTransitionEnd();\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n          if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n            swiper.zoom.onTransitionEnd();\n          }\n        }\n      }\n    };\n    var Lazy = {\n      loadInSlide: function loadInSlide(index, loadInDuplicate) {\n        if (loadInDuplicate === void 0) loadInDuplicate = true;\n        var swiper = this;\n        var params = swiper.params.lazy;\n        if (typeof index === 'undefined') {\n          return;\n        }\n        if (swiper.slides.length === 0) {\n          return;\n        }\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\") : swiper.slides.eq(index);\n        var $images = $slideEl.find(\".\" + params.elementClass + \":not(.\" + params.loadedClass + \"):not(.\" + params.loadingClass + \")\");\n        if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n          $images = $images.add($slideEl[0]);\n        }\n        if ($images.length === 0) {\n          return;\n        }\n        $images.each(function (imageIndex, imageEl) {\n          var $imageEl = $(imageEl);\n          $imageEl.addClass(params.loadingClass);\n          var background = $imageEl.attr('data-background');\n          var src = $imageEl.attr('data-src');\n          var srcset = $imageEl.attr('data-srcset');\n          var sizes = $imageEl.attr('data-sizes');\n          swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function () {\n            if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) {\n              return;\n            }\n            if (background) {\n              $imageEl.css('background-image', \"url(\\\"\" + background + \"\\\")\");\n              $imageEl.removeAttr('data-background');\n            } else {\n              if (srcset) {\n                $imageEl.attr('srcset', srcset);\n                $imageEl.removeAttr('data-srcset');\n              }\n              if (sizes) {\n                $imageEl.attr('sizes', sizes);\n                $imageEl.removeAttr('data-sizes');\n              }\n              if (src) {\n                $imageEl.attr('src', src);\n                $imageEl.removeAttr('data-src');\n              }\n            }\n            $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n            $slideEl.find(\".\" + params.preloaderClass).remove();\n            if (swiper.params.loop && loadInDuplicate) {\n              var slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n              if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n                var originalSlide = swiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]:not(.\" + swiper.params.slideDuplicateClass + \")\");\n                swiper.lazy.loadInSlide(originalSlide.index(), false);\n              } else {\n                var duplicatedSlide = swiper.$wrapperEl.children(\".\" + swiper.params.slideDuplicateClass + \"[data-swiper-slide-index=\\\"\" + slideOriginalIndex + \"\\\"]\");\n                swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n              }\n            }\n            swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n            if (swiper.params.autoHeight) {\n              swiper.updateAutoHeight();\n            }\n          });\n          swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n        });\n      },\n      load: function load() {\n        var swiper = this;\n        var $wrapperEl = swiper.$wrapperEl;\n        var swiperParams = swiper.params;\n        var slides = swiper.slides;\n        var activeIndex = swiper.activeIndex;\n        var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n        var params = swiperParams.lazy;\n        var slidesPerView = swiperParams.slidesPerView;\n        if (slidesPerView === 'auto') {\n          slidesPerView = 0;\n        }\n        function slideExist(index) {\n          if (isVirtual) {\n            if ($wrapperEl.children(\".\" + swiperParams.slideClass + \"[data-swiper-slide-index=\\\"\" + index + \"\\\"]\").length) {\n              return true;\n            }\n          } else if (slides[index]) {\n            return true;\n          }\n          return false;\n        }\n        function slideIndex(slideEl) {\n          if (isVirtual) {\n            return $(slideEl).attr('data-swiper-slide-index');\n          }\n          return $(slideEl).index();\n        }\n        if (!swiper.lazy.initialImageLoaded) {\n          swiper.lazy.initialImageLoaded = true;\n        }\n        if (swiper.params.watchSlidesVisibility) {\n          $wrapperEl.children(\".\" + swiperParams.slideVisibleClass).each(function (elIndex, slideEl) {\n            var index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n            swiper.lazy.loadInSlide(index);\n          });\n        } else if (slidesPerView > 1) {\n          for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n            if (slideExist(i)) {\n              swiper.lazy.loadInSlide(i);\n            }\n          }\n        } else {\n          swiper.lazy.loadInSlide(activeIndex);\n        }\n        if (params.loadPrevNext) {\n          if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n            var amount = params.loadPrevNextAmount;\n            var spv = slidesPerView;\n            var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n            var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n            // Next Slides\n            for (var i$1 = activeIndex + slidesPerView; i$1 < maxIndex; i$1 += 1) {\n              if (slideExist(i$1)) {\n                swiper.lazy.loadInSlide(i$1);\n              }\n            }\n            // Prev Slides\n            for (var i$2 = minIndex; i$2 < activeIndex; i$2 += 1) {\n              if (slideExist(i$2)) {\n                swiper.lazy.loadInSlide(i$2);\n              }\n            }\n          } else {\n            var nextSlide = $wrapperEl.children(\".\" + swiperParams.slideNextClass);\n            if (nextSlide.length > 0) {\n              swiper.lazy.loadInSlide(slideIndex(nextSlide));\n            }\n            var prevSlide = $wrapperEl.children(\".\" + swiperParams.slidePrevClass);\n            if (prevSlide.length > 0) {\n              swiper.lazy.loadInSlide(slideIndex(prevSlide));\n            }\n          }\n        }\n      }\n    };\n    var Lazy$1 = {\n      name: 'lazy',\n      params: {\n        lazy: {\n          enabled: false,\n          loadPrevNext: false,\n          loadPrevNextAmount: 1,\n          loadOnTransitionStart: false,\n          elementClass: 'swiper-lazy',\n          loadingClass: 'swiper-lazy-loading',\n          loadedClass: 'swiper-lazy-loaded',\n          preloaderClass: 'swiper-lazy-preloader'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          lazy: {\n            initialImageLoaded: false,\n            load: Lazy.load.bind(swiper),\n            loadInSlide: Lazy.loadInSlide.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n            swiper.params.preloadImages = false;\n          }\n        },\n        init: function init() {\n          var swiper = this;\n          if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n            swiper.lazy.load();\n          }\n        },\n        scroll: function scroll() {\n          var swiper = this;\n          if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n            swiper.lazy.load();\n          }\n        },\n        resize: function resize() {\n          var swiper = this;\n          if (swiper.params.lazy.enabled) {\n            swiper.lazy.load();\n          }\n        },\n        scrollbarDragMove: function scrollbarDragMove() {\n          var swiper = this;\n          if (swiper.params.lazy.enabled) {\n            swiper.lazy.load();\n          }\n        },\n        transitionStart: function transitionStart() {\n          var swiper = this;\n          if (swiper.params.lazy.enabled) {\n            if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) {\n              swiper.lazy.load();\n            }\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n          if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n            swiper.lazy.load();\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n          if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n            swiper.lazy.load();\n          }\n        }\n      }\n    };\n\n    /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\n    var Controller = {\n      LinearSpline: function LinearSpline(x, y) {\n        var binarySearch = function search() {\n          var maxIndex;\n          var minIndex;\n          var guess;\n          return function (array, val) {\n            minIndex = -1;\n            maxIndex = array.length;\n            while (maxIndex - minIndex > 1) {\n              guess = maxIndex + minIndex >> 1;\n              if (array[guess] <= val) {\n                minIndex = guess;\n              } else {\n                maxIndex = guess;\n              }\n            }\n            return maxIndex;\n          };\n        }();\n        this.x = x;\n        this.y = y;\n        this.lastIndex = x.length - 1;\n        // Given an x value (x2), return the expected y2 value:\n        // (x1,y1) is the known point before given value,\n        // (x3,y3) is the known point after given value.\n        var i1;\n        var i3;\n        this.interpolate = function interpolate(x2) {\n          if (!x2) {\n            return 0;\n          }\n\n          // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n          i3 = binarySearch(this.x, x2);\n          i1 = i3 - 1;\n\n          // We have our indexes i1 & i3, so we can calculate already:\n          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n        };\n        return this;\n      },\n      // xxx: for now i will just save one spline function to to\n      getInterpolateFunction: function getInterpolateFunction(c) {\n        var swiper = this;\n        if (!swiper.controller.spline) {\n          swiper.controller.spline = swiper.params.loop ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid) : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n        }\n      },\n      setTranslate: function setTranslate(setTranslate$1, byController) {\n        var swiper = this;\n        var controlled = swiper.controller.control;\n        var multiplier;\n        var controlledTranslate;\n        function setControlledTranslate(c) {\n          // this will create an Interpolate function based on the snapGrids\n          // x is the Grid of the scrolled scroller and y will be the controlled scroller\n          // it makes sense to create this only once and recall it for the interpolation\n          // the function does a lot of value caching for performance\n          var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n          if (swiper.params.controller.by === 'slide') {\n            swiper.controller.getInterpolateFunction(c);\n            // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n            // but it did not work out\n            controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n          }\n          if (!controlledTranslate || swiper.params.controller.by === 'container') {\n            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n          }\n          if (swiper.params.controller.inverse) {\n            controlledTranslate = c.maxTranslate() - controlledTranslate;\n          }\n          c.updateProgress(controlledTranslate);\n          c.setTranslate(controlledTranslate, swiper);\n          c.updateActiveIndex();\n          c.updateSlidesClasses();\n        }\n        if (Array.isArray(controlled)) {\n          for (var i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTranslate(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTranslate(controlled);\n        }\n      },\n      setTransition: function setTransition(duration, byController) {\n        var swiper = this;\n        var controlled = swiper.controller.control;\n        var i;\n        function setControlledTransition(c) {\n          c.setTransition(duration, swiper);\n          if (duration !== 0) {\n            c.transitionStart();\n            if (c.params.autoHeight) {\n              Utils.nextTick(function () {\n                c.updateAutoHeight();\n              });\n            }\n            c.$wrapperEl.transitionEnd(function () {\n              if (!controlled) {\n                return;\n              }\n              if (c.params.loop && swiper.params.controller.by === 'slide') {\n                c.loopFix();\n              }\n              c.transitionEnd();\n            });\n          }\n        }\n        if (Array.isArray(controlled)) {\n          for (i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTransition(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTransition(controlled);\n        }\n      }\n    };\n    var Controller$1 = {\n      name: 'controller',\n      params: {\n        controller: {\n          control: undefined,\n          inverse: false,\n          by: 'slide' // or 'container'\n        }\n      },\n\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          controller: {\n            control: swiper.params.controller.control,\n            getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n            setTranslate: Controller.setTranslate.bind(swiper),\n            setTransition: Controller.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        update: function update() {\n          var swiper = this;\n          if (!swiper.controller.control) {\n            return;\n          }\n          if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n          }\n        },\n        resize: function resize() {\n          var swiper = this;\n          if (!swiper.controller.control) {\n            return;\n          }\n          if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n          }\n        },\n        observerUpdate: function observerUpdate() {\n          var swiper = this;\n          if (!swiper.controller.control) {\n            return;\n          }\n          if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n          }\n        },\n        setTranslate: function setTranslate(translate, byController) {\n          var swiper = this;\n          if (!swiper.controller.control) {\n            return;\n          }\n          swiper.controller.setTranslate(translate, byController);\n        },\n        setTransition: function setTransition(duration, byController) {\n          var swiper = this;\n          if (!swiper.controller.control) {\n            return;\n          }\n          swiper.controller.setTransition(duration, byController);\n        }\n      }\n    };\n    var a11y = {\n      makeElFocusable: function makeElFocusable($el) {\n        $el.attr('tabIndex', '0');\n        return $el;\n      },\n      addElRole: function addElRole($el, role) {\n        $el.attr('role', role);\n        return $el;\n      },\n      addElLabel: function addElLabel($el, label) {\n        $el.attr('aria-label', label);\n        return $el;\n      },\n      disableEl: function disableEl($el) {\n        $el.attr('aria-disabled', true);\n        return $el;\n      },\n      enableEl: function enableEl($el) {\n        $el.attr('aria-disabled', false);\n        return $el;\n      },\n      onEnterKey: function onEnterKey(e) {\n        var swiper = this;\n        var params = swiper.params.a11y;\n        if (e.keyCode !== 13) {\n          return;\n        }\n        var $targetEl = $(e.target);\n        if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n          if (!(swiper.isEnd && !swiper.params.loop)) {\n            swiper.slideNext();\n          }\n          if (swiper.isEnd) {\n            swiper.a11y.notify(params.lastSlideMessage);\n          } else {\n            swiper.a11y.notify(params.nextSlideMessage);\n          }\n        }\n        if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n          if (!(swiper.isBeginning && !swiper.params.loop)) {\n            swiper.slidePrev();\n          }\n          if (swiper.isBeginning) {\n            swiper.a11y.notify(params.firstSlideMessage);\n          } else {\n            swiper.a11y.notify(params.prevSlideMessage);\n          }\n        }\n        if (swiper.pagination && $targetEl.is(\".\" + swiper.params.pagination.bulletClass)) {\n          $targetEl[0].click();\n        }\n      },\n      notify: function notify(message) {\n        var swiper = this;\n        var notification = swiper.a11y.liveRegion;\n        if (notification.length === 0) {\n          return;\n        }\n        notification.html('');\n        notification.html(message);\n      },\n      updateNavigation: function updateNavigation() {\n        var swiper = this;\n        if (swiper.params.loop || !swiper.navigation) {\n          return;\n        }\n        var ref = swiper.navigation;\n        var $nextEl = ref.$nextEl;\n        var $prevEl = ref.$prevEl;\n        if ($prevEl && $prevEl.length > 0) {\n          if (swiper.isBeginning) {\n            swiper.a11y.disableEl($prevEl);\n          } else {\n            swiper.a11y.enableEl($prevEl);\n          }\n        }\n        if ($nextEl && $nextEl.length > 0) {\n          if (swiper.isEnd) {\n            swiper.a11y.disableEl($nextEl);\n          } else {\n            swiper.a11y.enableEl($nextEl);\n          }\n        }\n      },\n      updatePagination: function updatePagination() {\n        var swiper = this;\n        var params = swiper.params.a11y;\n        if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n          swiper.pagination.bullets.each(function (bulletIndex, bulletEl) {\n            var $bulletEl = $(bulletEl);\n            swiper.a11y.makeElFocusable($bulletEl);\n            swiper.a11y.addElRole($bulletEl, 'button');\n            swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n          });\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        swiper.$el.append(swiper.a11y.liveRegion);\n\n        // Navigation\n        var params = swiper.params.a11y;\n        var $nextEl;\n        var $prevEl;\n        if (swiper.navigation && swiper.navigation.$nextEl) {\n          $nextEl = swiper.navigation.$nextEl;\n        }\n        if (swiper.navigation && swiper.navigation.$prevEl) {\n          $prevEl = swiper.navigation.$prevEl;\n        }\n        if ($nextEl) {\n          swiper.a11y.makeElFocusable($nextEl);\n          swiper.a11y.addElRole($nextEl, 'button');\n          swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n          $nextEl.on('keydown', swiper.a11y.onEnterKey);\n        }\n        if ($prevEl) {\n          swiper.a11y.makeElFocusable($prevEl);\n          swiper.a11y.addElRole($prevEl, 'button');\n          swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n          $prevEl.on('keydown', swiper.a11y.onEnterKey);\n        }\n\n        // Pagination\n        if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n          swiper.pagination.$el.on('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) {\n          swiper.a11y.liveRegion.remove();\n        }\n        var $nextEl;\n        var $prevEl;\n        if (swiper.navigation && swiper.navigation.$nextEl) {\n          $nextEl = swiper.navigation.$nextEl;\n        }\n        if (swiper.navigation && swiper.navigation.$prevEl) {\n          $prevEl = swiper.navigation.$prevEl;\n        }\n        if ($nextEl) {\n          $nextEl.off('keydown', swiper.a11y.onEnterKey);\n        }\n        if ($prevEl) {\n          $prevEl.off('keydown', swiper.a11y.onEnterKey);\n        }\n\n        // Pagination\n        if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n          swiper.pagination.$el.off('keydown', \".\" + swiper.params.pagination.bulletClass, swiper.a11y.onEnterKey);\n        }\n      }\n    };\n    var A11y = {\n      name: 'a11y',\n      params: {\n        a11y: {\n          enabled: true,\n          notificationClass: 'swiper-notification',\n          prevSlideMessage: 'Previous slide',\n          nextSlideMessage: 'Next slide',\n          firstSlideMessage: 'This is the first slide',\n          lastSlideMessage: 'This is the last slide',\n          paginationBulletMessage: 'Go to slide {{index}}'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          a11y: {\n            liveRegion: $(\"<span class=\\\"\" + swiper.params.a11y.notificationClass + \"\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"></span>\")\n          }\n        });\n        Object.keys(a11y).forEach(function (methodName) {\n          swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n          swiper.a11y.init();\n          swiper.a11y.updateNavigation();\n        },\n        toEdge: function toEdge() {\n          var swiper = this;\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n          swiper.a11y.updateNavigation();\n        },\n        fromEdge: function fromEdge() {\n          var swiper = this;\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n          swiper.a11y.updateNavigation();\n        },\n        paginationUpdate: function paginationUpdate() {\n          var swiper = this;\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n          swiper.a11y.updatePagination();\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          if (!swiper.params.a11y.enabled) {\n            return;\n          }\n          swiper.a11y.destroy();\n        }\n      }\n    };\n    var History = {\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.history) {\n          return;\n        }\n        if (!win.history || !win.history.pushState) {\n          swiper.params.history.enabled = false;\n          swiper.params.hashNavigation.enabled = true;\n          return;\n        }\n        var history = swiper.history;\n        history.initialized = true;\n        history.paths = History.getPathValues();\n        if (!history.paths.key && !history.paths.value) {\n          return;\n        }\n        history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n        if (!swiper.params.history.replaceState) {\n          win.addEventListener('popstate', swiper.history.setHistoryPopState);\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (!swiper.params.history.replaceState) {\n          win.removeEventListener('popstate', swiper.history.setHistoryPopState);\n        }\n      },\n      setHistoryPopState: function setHistoryPopState() {\n        var swiper = this;\n        swiper.history.paths = History.getPathValues();\n        swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n      },\n      getPathValues: function getPathValues() {\n        var pathArray = win.location.pathname.slice(1).split('/').filter(function (part) {\n          return part !== '';\n        });\n        var total = pathArray.length;\n        var key = pathArray[total - 2];\n        var value = pathArray[total - 1];\n        return {\n          key: key,\n          value: value\n        };\n      },\n      setHistory: function setHistory(key, index) {\n        var swiper = this;\n        if (!swiper.history.initialized || !swiper.params.history.enabled) {\n          return;\n        }\n        var slide = swiper.slides.eq(index);\n        var value = History.slugify(slide.attr('data-history'));\n        if (!win.location.pathname.includes(key)) {\n          value = key + \"/\" + value;\n        }\n        var currentState = win.history.state;\n        if (currentState && currentState.value === value) {\n          return;\n        }\n        if (swiper.params.history.replaceState) {\n          win.history.replaceState({\n            value: value\n          }, null, value);\n        } else {\n          win.history.pushState({\n            value: value\n          }, null, value);\n        }\n      },\n      slugify: function slugify(text) {\n        return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n      },\n      scrollToSlide: function scrollToSlide(speed, value, runCallbacks) {\n        var swiper = this;\n        if (value) {\n          for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n            var slide = swiper.slides.eq(i);\n            var slideHistory = History.slugify(slide.attr('data-history'));\n            if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n              var index = slide.index();\n              swiper.slideTo(index, speed, runCallbacks);\n            }\n          }\n        } else {\n          swiper.slideTo(0, speed, runCallbacks);\n        }\n      }\n    };\n    var History$1 = {\n      name: 'history',\n      params: {\n        history: {\n          enabled: false,\n          replaceState: false,\n          key: 'slides'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          history: {\n            init: History.init.bind(swiper),\n            setHistory: History.setHistory.bind(swiper),\n            setHistoryPopState: History.setHistoryPopState.bind(swiper),\n            scrollToSlide: History.scrollToSlide.bind(swiper),\n            destroy: History.destroy.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          if (swiper.params.history.enabled) {\n            swiper.history.init();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          if (swiper.params.history.enabled) {\n            swiper.history.destroy();\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n          if (swiper.history.initialized) {\n            swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n          if (swiper.history.initialized && swiper.params.cssMode) {\n            swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n          }\n        }\n      }\n    };\n    var HashNavigation = {\n      onHashCange: function onHashCange() {\n        var swiper = this;\n        var newHash = doc.location.hash.replace('#', '');\n        var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n        if (newHash !== activeSlideHash) {\n          var newIndex = swiper.$wrapperEl.children(\".\" + swiper.params.slideClass + \"[data-hash=\\\"\" + newHash + \"\\\"]\").index();\n          if (typeof newIndex === 'undefined') {\n            return;\n          }\n          swiper.slideTo(newIndex);\n        }\n      },\n      setHash: function setHash() {\n        var swiper = this;\n        if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) {\n          return;\n        }\n        if (swiper.params.hashNavigation.replaceState && win.history && win.history.replaceState) {\n          win.history.replaceState(null, null, \"#\" + swiper.slides.eq(swiper.activeIndex).attr('data-hash') || false);\n        } else {\n          var slide = swiper.slides.eq(swiper.activeIndex);\n          var hash = slide.attr('data-hash') || slide.attr('data-history');\n          doc.location.hash = hash || '';\n        }\n      },\n      init: function init() {\n        var swiper = this;\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) {\n          return;\n        }\n        swiper.hashNavigation.initialized = true;\n        var hash = doc.location.hash.replace('#', '');\n        if (hash) {\n          var speed = 0;\n          for (var i = 0, length = swiper.slides.length; i < length; i += 1) {\n            var slide = swiper.slides.eq(i);\n            var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n            if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n              var index = slide.index();\n              swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n            }\n          }\n        }\n        if (swiper.params.hashNavigation.watchState) {\n          $(win).on('hashchange', swiper.hashNavigation.onHashCange);\n        }\n      },\n      destroy: function destroy() {\n        var swiper = this;\n        if (swiper.params.hashNavigation.watchState) {\n          $(win).off('hashchange', swiper.hashNavigation.onHashCange);\n        }\n      }\n    };\n    var HashNavigation$1 = {\n      name: 'hash-navigation',\n      params: {\n        hashNavigation: {\n          enabled: false,\n          replaceState: false,\n          watchState: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          hashNavigation: {\n            initialized: false,\n            init: HashNavigation.init.bind(swiper),\n            destroy: HashNavigation.destroy.bind(swiper),\n            setHash: HashNavigation.setHash.bind(swiper),\n            onHashCange: HashNavigation.onHashCange.bind(swiper)\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          if (swiper.params.hashNavigation.enabled) {\n            swiper.hashNavigation.init();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          if (swiper.params.hashNavigation.enabled) {\n            swiper.hashNavigation.destroy();\n          }\n        },\n        transitionEnd: function transitionEnd() {\n          var swiper = this;\n          if (swiper.hashNavigation.initialized) {\n            swiper.hashNavigation.setHash();\n          }\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n          if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n            swiper.hashNavigation.setHash();\n          }\n        }\n      }\n    };\n\n    /* eslint no-underscore-dangle: \"off\" */\n\n    var Autoplay = {\n      run: function run() {\n        var swiper = this;\n        var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n        var delay = swiper.params.autoplay.delay;\n        if ($activeSlideEl.attr('data-swiper-autoplay')) {\n          delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n        }\n        clearTimeout(swiper.autoplay.timeout);\n        swiper.autoplay.timeout = Utils.nextTick(function () {\n          if (swiper.params.autoplay.reverseDirection) {\n            if (swiper.params.loop) {\n              swiper.loopFix();\n              swiper.slidePrev(swiper.params.speed, true, true);\n              swiper.emit('autoplay');\n            } else if (!swiper.isBeginning) {\n              swiper.slidePrev(swiper.params.speed, true, true);\n              swiper.emit('autoplay');\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n              swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n              swiper.emit('autoplay');\n            } else {\n              swiper.autoplay.stop();\n            }\n          } else if (swiper.params.loop) {\n            swiper.loopFix();\n            swiper.slideNext(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.isEnd) {\n            swiper.slideNext(swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\n            swiper.slideTo(0, swiper.params.speed, true, true);\n            swiper.emit('autoplay');\n          } else {\n            swiper.autoplay.stop();\n          }\n          if (swiper.params.cssMode && swiper.autoplay.running) {\n            swiper.autoplay.run();\n          }\n        }, delay);\n      },\n      start: function start() {\n        var swiper = this;\n        if (typeof swiper.autoplay.timeout !== 'undefined') {\n          return false;\n        }\n        if (swiper.autoplay.running) {\n          return false;\n        }\n        swiper.autoplay.running = true;\n        swiper.emit('autoplayStart');\n        swiper.autoplay.run();\n        return true;\n      },\n      stop: function stop() {\n        var swiper = this;\n        if (!swiper.autoplay.running) {\n          return false;\n        }\n        if (typeof swiper.autoplay.timeout === 'undefined') {\n          return false;\n        }\n        if (swiper.autoplay.timeout) {\n          clearTimeout(swiper.autoplay.timeout);\n          swiper.autoplay.timeout = undefined;\n        }\n        swiper.autoplay.running = false;\n        swiper.emit('autoplayStop');\n        return true;\n      },\n      pause: function pause(speed) {\n        var swiper = this;\n        if (!swiper.autoplay.running) {\n          return;\n        }\n        if (swiper.autoplay.paused) {\n          return;\n        }\n        if (swiper.autoplay.timeout) {\n          clearTimeout(swiper.autoplay.timeout);\n        }\n        swiper.autoplay.paused = true;\n        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n          swiper.autoplay.paused = false;\n          swiper.autoplay.run();\n        } else {\n          swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n        }\n      }\n    };\n    var Autoplay$1 = {\n      name: 'autoplay',\n      params: {\n        autoplay: {\n          enabled: false,\n          delay: 3000,\n          waitForTransition: true,\n          disableOnInteraction: true,\n          stopOnLastSlide: false,\n          reverseDirection: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          autoplay: {\n            running: false,\n            paused: false,\n            run: Autoplay.run.bind(swiper),\n            start: Autoplay.start.bind(swiper),\n            stop: Autoplay.stop.bind(swiper),\n            pause: Autoplay.pause.bind(swiper),\n            onVisibilityChange: function onVisibilityChange() {\n              if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n                swiper.autoplay.pause();\n              }\n              if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n                swiper.autoplay.run();\n                swiper.autoplay.paused = false;\n              }\n            },\n            onTransitionEnd: function onTransitionEnd(e) {\n              if (!swiper || swiper.destroyed || !swiper.$wrapperEl) {\n                return;\n              }\n              if (e.target !== this) {\n                return;\n              }\n              swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n              swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n              swiper.autoplay.paused = false;\n              if (!swiper.autoplay.running) {\n                swiper.autoplay.stop();\n              } else {\n                swiper.autoplay.run();\n              }\n            }\n          }\n        });\n      },\n      on: {\n        init: function init() {\n          var swiper = this;\n          if (swiper.params.autoplay.enabled) {\n            swiper.autoplay.start();\n            document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n          }\n        },\n        beforeTransitionStart: function beforeTransitionStart(speed, internal) {\n          var swiper = this;\n          if (swiper.autoplay.running) {\n            if (internal || !swiper.params.autoplay.disableOnInteraction) {\n              swiper.autoplay.pause(speed);\n            } else {\n              swiper.autoplay.stop();\n            }\n          }\n        },\n        sliderFirstMove: function sliderFirstMove() {\n          var swiper = this;\n          if (swiper.autoplay.running) {\n            if (swiper.params.autoplay.disableOnInteraction) {\n              swiper.autoplay.stop();\n            } else {\n              swiper.autoplay.pause();\n            }\n          }\n        },\n        touchEnd: function touchEnd() {\n          var swiper = this;\n          if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n            swiper.autoplay.run();\n          }\n        },\n        destroy: function destroy() {\n          var swiper = this;\n          if (swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          }\n          document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n        }\n      }\n    };\n    var Fade = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var slides = swiper.slides;\n        for (var i = 0; i < slides.length; i += 1) {\n          var $slideEl = swiper.slides.eq(i);\n          var offset = $slideEl[0].swiperSlideOffset;\n          var tx = -offset;\n          if (!swiper.params.virtualTranslate) {\n            tx -= swiper.translate;\n          }\n          var ty = 0;\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n          }\n          var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n          $slideEl.css({\n            opacity: slideOpacity\n          }).transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px)\");\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var slides = swiper.slides;\n        var $wrapperEl = swiper.$wrapperEl;\n        slides.transition(duration);\n        if (swiper.params.virtualTranslate && duration !== 0) {\n          var eventTriggered = false;\n          slides.transitionEnd(function () {\n            if (eventTriggered) {\n              return;\n            }\n            if (!swiper || swiper.destroyed) {\n              return;\n            }\n            eventTriggered = true;\n            swiper.animating = false;\n            var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n            for (var i = 0; i < triggerEvents.length; i += 1) {\n              $wrapperEl.trigger(triggerEvents[i]);\n            }\n          });\n        }\n      }\n    };\n    var EffectFade = {\n      name: 'effect-fade',\n      params: {\n        fadeEffect: {\n          crossFade: false\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          fadeEffect: {\n            setTranslate: Fade.setTranslate.bind(swiper),\n            setTransition: Fade.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          if (swiper.params.effect !== 'fade') {\n            return;\n          }\n          swiper.classNames.push(swiper.params.containerModifierClass + \"fade\");\n          var overwriteParams = {\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: true,\n            spaceBetween: 0,\n            virtualTranslate: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          if (swiper.params.effect !== 'fade') {\n            return;\n          }\n          swiper.fadeEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          if (swiper.params.effect !== 'fade') {\n            return;\n          }\n          swiper.fadeEffect.setTransition(duration);\n        }\n      }\n    };\n    var Cube = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var $el = swiper.$el;\n        var $wrapperEl = swiper.$wrapperEl;\n        var slides = swiper.slides;\n        var swiperWidth = swiper.width;\n        var swiperHeight = swiper.height;\n        var rtl = swiper.rtlTranslate;\n        var swiperSize = swiper.size;\n        var params = swiper.params.cubeEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var wrapperRotate = 0;\n        var $cubeShadowEl;\n        if (params.shadow) {\n          if (isHorizontal) {\n            $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n            if ($cubeShadowEl.length === 0) {\n              $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n              $wrapperEl.append($cubeShadowEl);\n            }\n            $cubeShadowEl.css({\n              height: swiperWidth + \"px\"\n            });\n          } else {\n            $cubeShadowEl = $el.find('.swiper-cube-shadow');\n            if ($cubeShadowEl.length === 0) {\n              $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n              $el.append($cubeShadowEl);\n            }\n          }\n        }\n        for (var i = 0; i < slides.length; i += 1) {\n          var $slideEl = slides.eq(i);\n          var slideIndex = i;\n          if (isVirtual) {\n            slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n          }\n          var slideAngle = slideIndex * 90;\n          var round = Math.floor(slideAngle / 360);\n          if (rtl) {\n            slideAngle = -slideAngle;\n            round = Math.floor(-slideAngle / 360);\n          }\n          var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n          var tx = 0;\n          var ty = 0;\n          var tz = 0;\n          if (slideIndex % 4 === 0) {\n            tx = -round * 4 * swiperSize;\n            tz = 0;\n          } else if ((slideIndex - 1) % 4 === 0) {\n            tx = 0;\n            tz = -round * 4 * swiperSize;\n          } else if ((slideIndex - 2) % 4 === 0) {\n            tx = swiperSize + round * 4 * swiperSize;\n            tz = swiperSize;\n          } else if ((slideIndex - 3) % 4 === 0) {\n            tx = -swiperSize;\n            tz = 3 * swiperSize + swiperSize * 4 * round;\n          }\n          if (rtl) {\n            tx = -tx;\n          }\n          if (!isHorizontal) {\n            ty = tx;\n            tx = 0;\n          }\n          var transform = \"rotateX(\" + (isHorizontal ? 0 : -slideAngle) + \"deg) rotateY(\" + (isHorizontal ? slideAngle : 0) + \"deg) translate3d(\" + tx + \"px, \" + ty + \"px, \" + tz + \"px)\";\n          if (progress <= 1 && progress > -1) {\n            wrapperRotate = slideIndex * 90 + progress * 90;\n            if (rtl) {\n              wrapperRotate = -slideIndex * 90 - progress * 90;\n            }\n          }\n          $slideEl.transform(transform);\n          if (params.slideShadows) {\n            // Set shadows\n            var shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            var shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n            if (shadowBefore.length === 0) {\n              shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n              $slideEl.append(shadowBefore);\n            }\n            if (shadowAfter.length === 0) {\n              shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n              $slideEl.append(shadowAfter);\n            }\n            if (shadowBefore.length) {\n              shadowBefore[0].style.opacity = Math.max(-progress, 0);\n            }\n            if (shadowAfter.length) {\n              shadowAfter[0].style.opacity = Math.max(progress, 0);\n            }\n          }\n        }\n        $wrapperEl.css({\n          '-webkit-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n          '-moz-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n          '-ms-transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\",\n          'transform-origin': \"50% 50% -\" + swiperSize / 2 + \"px\"\n        });\n        if (params.shadow) {\n          if (isHorizontal) {\n            $cubeShadowEl.transform(\"translate3d(0px, \" + (swiperWidth / 2 + params.shadowOffset) + \"px, \" + -swiperWidth / 2 + \"px) rotateX(90deg) rotateZ(0deg) scale(\" + params.shadowScale + \")\");\n          } else {\n            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n            var scale1 = params.shadowScale;\n            var scale2 = params.shadowScale / multiplier;\n            var offset = params.shadowOffset;\n            $cubeShadowEl.transform(\"scale3d(\" + scale1 + \", 1, \" + scale2 + \") translate3d(0px, \" + (swiperHeight / 2 + offset) + \"px, \" + -swiperHeight / 2 / scale2 + \"px) rotateX(-90deg)\");\n          }\n        }\n        var zFactor = Browser.isSafari || Browser.isUiWebView ? -swiperSize / 2 : 0;\n        $wrapperEl.transform(\"translate3d(0px,0,\" + zFactor + \"px) rotateX(\" + (swiper.isHorizontal() ? 0 : wrapperRotate) + \"deg) rotateY(\" + (swiper.isHorizontal() ? -wrapperRotate : 0) + \"deg)\");\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var $el = swiper.$el;\n        var slides = swiper.slides;\n        slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n          $el.find('.swiper-cube-shadow').transition(duration);\n        }\n      }\n    };\n    var EffectCube = {\n      name: 'effect-cube',\n      params: {\n        cubeEffect: {\n          slideShadows: true,\n          shadow: true,\n          shadowOffset: 20,\n          shadowScale: 0.94\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          cubeEffect: {\n            setTranslate: Cube.setTranslate.bind(swiper),\n            setTransition: Cube.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          if (swiper.params.effect !== 'cube') {\n            return;\n          }\n          swiper.classNames.push(swiper.params.containerModifierClass + \"cube\");\n          swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n          var overwriteParams = {\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: true,\n            resistanceRatio: 0,\n            spaceBetween: 0,\n            centeredSlides: false,\n            virtualTranslate: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          if (swiper.params.effect !== 'cube') {\n            return;\n          }\n          swiper.cubeEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          if (swiper.params.effect !== 'cube') {\n            return;\n          }\n          swiper.cubeEffect.setTransition(duration);\n        }\n      }\n    };\n    var Flip = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var slides = swiper.slides;\n        var rtl = swiper.rtlTranslate;\n        for (var i = 0; i < slides.length; i += 1) {\n          var $slideEl = slides.eq(i);\n          var progress = $slideEl[0].progress;\n          if (swiper.params.flipEffect.limitRotation) {\n            progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n          }\n          var offset = $slideEl[0].swiperSlideOffset;\n          var rotate = -180 * progress;\n          var rotateY = rotate;\n          var rotateX = 0;\n          var tx = -offset;\n          var ty = 0;\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n            rotateX = -rotateY;\n            rotateY = 0;\n          } else if (rtl) {\n            rotateY = -rotateY;\n          }\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n          if (swiper.params.flipEffect.slideShadows) {\n            // Set shadows\n            var shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            var shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n            if (shadowBefore.length === 0) {\n              shadowBefore = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'left' : 'top') + \"\\\"></div>\");\n              $slideEl.append(shadowBefore);\n            }\n            if (shadowAfter.length === 0) {\n              shadowAfter = $(\"<div class=\\\"swiper-slide-shadow-\" + (swiper.isHorizontal() ? 'right' : 'bottom') + \"\\\"></div>\");\n              $slideEl.append(shadowAfter);\n            }\n            if (shadowBefore.length) {\n              shadowBefore[0].style.opacity = Math.max(-progress, 0);\n            }\n            if (shadowAfter.length) {\n              shadowAfter[0].style.opacity = Math.max(progress, 0);\n            }\n          }\n          $slideEl.transform(\"translate3d(\" + tx + \"px, \" + ty + \"px, 0px) rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\");\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        var slides = swiper.slides;\n        var activeIndex = swiper.activeIndex;\n        var $wrapperEl = swiper.$wrapperEl;\n        slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n        if (swiper.params.virtualTranslate && duration !== 0) {\n          var eventTriggered = false;\n          // eslint-disable-next-line\n          slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n            if (eventTriggered) {\n              return;\n            }\n            if (!swiper || swiper.destroyed) {\n              return;\n            }\n            // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n            eventTriggered = true;\n            swiper.animating = false;\n            var triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n            for (var i = 0; i < triggerEvents.length; i += 1) {\n              $wrapperEl.trigger(triggerEvents[i]);\n            }\n          });\n        }\n      }\n    };\n    var EffectFlip = {\n      name: 'effect-flip',\n      params: {\n        flipEffect: {\n          slideShadows: true,\n          limitRotation: true\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          flipEffect: {\n            setTranslate: Flip.setTranslate.bind(swiper),\n            setTransition: Flip.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          if (swiper.params.effect !== 'flip') {\n            return;\n          }\n          swiper.classNames.push(swiper.params.containerModifierClass + \"flip\");\n          swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n          var overwriteParams = {\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerGroup: 1,\n            watchSlidesProgress: true,\n            spaceBetween: 0,\n            virtualTranslate: true\n          };\n          Utils.extend(swiper.params, overwriteParams);\n          Utils.extend(swiper.originalParams, overwriteParams);\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          if (swiper.params.effect !== 'flip') {\n            return;\n          }\n          swiper.flipEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          if (swiper.params.effect !== 'flip') {\n            return;\n          }\n          swiper.flipEffect.setTransition(duration);\n        }\n      }\n    };\n    var Coverflow = {\n      setTranslate: function setTranslate() {\n        var swiper = this;\n        var swiperWidth = swiper.width;\n        var swiperHeight = swiper.height;\n        var slides = swiper.slides;\n        var $wrapperEl = swiper.$wrapperEl;\n        var slidesSizesGrid = swiper.slidesSizesGrid;\n        var params = swiper.params.coverflowEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var transform = swiper.translate;\n        var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n        var rotate = isHorizontal ? params.rotate : -params.rotate;\n        var translate = params.depth;\n        // Each slide offset from center\n        for (var i = 0, length = slides.length; i < length; i += 1) {\n          var $slideEl = slides.eq(i);\n          var slideSize = slidesSizesGrid[i];\n          var slideOffset = $slideEl[0].swiperSlideOffset;\n          var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * params.modifier;\n          var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n          var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n          // var rotateZ = 0\n          var translateZ = -translate * Math.abs(offsetMultiplier);\n          var stretch = params.stretch;\n          // Allow percentage to make a relative stretch for responsive sliders\n          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n            stretch = parseFloat(params.stretch) / 100 * slideSize;\n          }\n          var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n          var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n\n          // Fix for ultra small values\n          if (Math.abs(translateX) < 0.001) {\n            translateX = 0;\n          }\n          if (Math.abs(translateY) < 0.001) {\n            translateY = 0;\n          }\n          if (Math.abs(translateZ) < 0.001) {\n            translateZ = 0;\n          }\n          if (Math.abs(rotateY) < 0.001) {\n            rotateY = 0;\n          }\n          if (Math.abs(rotateX) < 0.001) {\n            rotateX = 0;\n          }\n          var slideTransform = \"translate3d(\" + translateX + \"px,\" + translateY + \"px,\" + translateZ + \"px)  rotateX(\" + rotateX + \"deg) rotateY(\" + rotateY + \"deg)\";\n          $slideEl.transform(slideTransform);\n          $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n          if (params.slideShadows) {\n            // Set shadows\n            var $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n            var $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n            if ($shadowBeforeEl.length === 0) {\n              $shadowBeforeEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'left' : 'top') + \"\\\"></div>\");\n              $slideEl.append($shadowBeforeEl);\n            }\n            if ($shadowAfterEl.length === 0) {\n              $shadowAfterEl = $(\"<div class=\\\"swiper-slide-shadow-\" + (isHorizontal ? 'right' : 'bottom') + \"\\\"></div>\");\n              $slideEl.append($shadowAfterEl);\n            }\n            if ($shadowBeforeEl.length) {\n              $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n            }\n            if ($shadowAfterEl.length) {\n              $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n            }\n          }\n        }\n\n        // Set correct perspective for IE10\n        if (Support.pointerEvents || Support.prefixedPointerEvents) {\n          var ws = $wrapperEl[0].style;\n          ws.perspectiveOrigin = center + \"px 50%\";\n        }\n      },\n      setTransition: function setTransition(duration) {\n        var swiper = this;\n        swiper.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n      }\n    };\n    var EffectCoverflow = {\n      name: 'effect-coverflow',\n      params: {\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          modifier: 1,\n          slideShadows: true\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          coverflowEffect: {\n            setTranslate: Coverflow.setTranslate.bind(swiper),\n            setTransition: Coverflow.setTransition.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          if (swiper.params.effect !== 'coverflow') {\n            return;\n          }\n          swiper.classNames.push(swiper.params.containerModifierClass + \"coverflow\");\n          swiper.classNames.push(swiper.params.containerModifierClass + \"3d\");\n          swiper.params.watchSlidesProgress = true;\n          swiper.originalParams.watchSlidesProgress = true;\n        },\n        setTranslate: function setTranslate() {\n          var swiper = this;\n          if (swiper.params.effect !== 'coverflow') {\n            return;\n          }\n          swiper.coverflowEffect.setTranslate();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          if (swiper.params.effect !== 'coverflow') {\n            return;\n          }\n          swiper.coverflowEffect.setTransition(duration);\n        }\n      }\n    };\n    var Thumbs = {\n      init: function init() {\n        var swiper = this;\n        var ref = swiper.params;\n        var thumbsParams = ref.thumbs;\n        var SwiperClass = swiper.constructor;\n        if (thumbsParams.swiper instanceof SwiperClass) {\n          swiper.thumbs.swiper = thumbsParams.swiper;\n          Utils.extend(swiper.thumbs.swiper.originalParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          Utils.extend(swiper.thumbs.swiper.params, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n        } else if (Utils.isObject(thumbsParams.swiper)) {\n          swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n            watchSlidesVisibility: true,\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          }));\n          swiper.thumbs.swiperCreated = true;\n        }\n        swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n        swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n      },\n      onThumbClick: function onThumbClick() {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) {\n          return;\n        }\n        var clickedIndex = thumbsSwiper.clickedIndex;\n        var clickedSlide = thumbsSwiper.clickedSlide;\n        if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) {\n          return;\n        }\n        if (typeof clickedIndex === 'undefined' || clickedIndex === null) {\n          return;\n        }\n        var slideToIndex;\n        if (thumbsSwiper.params.loop) {\n          slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n        } else {\n          slideToIndex = clickedIndex;\n        }\n        if (swiper.params.loop) {\n          var currentIndex = swiper.activeIndex;\n          if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n            swiper.loopFix();\n            // eslint-disable-next-line\n            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n            currentIndex = swiper.activeIndex;\n          }\n          var prevIndex = swiper.slides.eq(currentIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n          var nextIndex = swiper.slides.eq(currentIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + slideToIndex + \"\\\"]\").eq(0).index();\n          if (typeof prevIndex === 'undefined') {\n            slideToIndex = nextIndex;\n          } else if (typeof nextIndex === 'undefined') {\n            slideToIndex = prevIndex;\n          } else if (nextIndex - currentIndex < currentIndex - prevIndex) {\n            slideToIndex = nextIndex;\n          } else {\n            slideToIndex = prevIndex;\n          }\n        }\n        swiper.slideTo(slideToIndex);\n      },\n      update: function update(initial) {\n        var swiper = this;\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper) {\n          return;\n        }\n        var slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n        if (swiper.realIndex !== thumbsSwiper.realIndex) {\n          var currentThumbsIndex = thumbsSwiper.activeIndex;\n          var newThumbsIndex;\n          if (thumbsSwiper.params.loop) {\n            if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n              thumbsSwiper.loopFix();\n              // eslint-disable-next-line\n              thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n              currentThumbsIndex = thumbsSwiper.activeIndex;\n            }\n            // Find actual thumbs index to slide to\n            var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n            var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(\"[data-swiper-slide-index=\\\"\" + swiper.realIndex + \"\\\"]\").eq(0).index();\n            if (typeof prevThumbsIndex === 'undefined') {\n              newThumbsIndex = nextThumbsIndex;\n            } else if (typeof nextThumbsIndex === 'undefined') {\n              newThumbsIndex = prevThumbsIndex;\n            } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n              newThumbsIndex = currentThumbsIndex;\n            } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n              newThumbsIndex = nextThumbsIndex;\n            } else {\n              newThumbsIndex = prevThumbsIndex;\n            }\n          } else {\n            newThumbsIndex = swiper.realIndex;\n          }\n          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n            if (thumbsSwiper.params.centeredSlides) {\n              if (newThumbsIndex > currentThumbsIndex) {\n                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n              } else {\n                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n              }\n            } else if (newThumbsIndex > currentThumbsIndex) {\n              newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n            }\n            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n          }\n        }\n\n        // Activate thumbs\n        var thumbsToActivate = 1;\n        var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n          thumbsToActivate = swiper.params.slidesPerView;\n        }\n        if (!swiper.params.thumbs.multipleActiveThumbs) {\n          thumbsToActivate = 1;\n        }\n        thumbsToActivate = Math.floor(thumbsToActivate);\n        thumbsSwiper.slides.removeClass(thumbActiveClass);\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n          for (var i = 0; i < thumbsToActivate; i += 1) {\n            thumbsSwiper.$wrapperEl.children(\"[data-swiper-slide-index=\\\"\" + (swiper.realIndex + i) + \"\\\"]\").addClass(thumbActiveClass);\n          }\n        } else {\n          for (var i$1 = 0; i$1 < thumbsToActivate; i$1 += 1) {\n            thumbsSwiper.slides.eq(swiper.realIndex + i$1).addClass(thumbActiveClass);\n          }\n        }\n      }\n    };\n    var Thumbs$1 = {\n      name: 'thumbs',\n      params: {\n        thumbs: {\n          multipleActiveThumbs: true,\n          swiper: null,\n          slideThumbActiveClass: 'swiper-slide-thumb-active',\n          thumbsContainerClass: 'swiper-container-thumbs'\n        }\n      },\n      create: function create() {\n        var swiper = this;\n        Utils.extend(swiper, {\n          thumbs: {\n            swiper: null,\n            init: Thumbs.init.bind(swiper),\n            update: Thumbs.update.bind(swiper),\n            onThumbClick: Thumbs.onThumbClick.bind(swiper)\n          }\n        });\n      },\n      on: {\n        beforeInit: function beforeInit() {\n          var swiper = this;\n          var ref = swiper.params;\n          var thumbs = ref.thumbs;\n          if (!thumbs || !thumbs.swiper) {\n            return;\n          }\n          swiper.thumbs.init();\n          swiper.thumbs.update(true);\n        },\n        slideChange: function slideChange() {\n          var swiper = this;\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n          swiper.thumbs.update();\n        },\n        update: function update() {\n          var swiper = this;\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n          swiper.thumbs.update();\n        },\n        resize: function resize() {\n          var swiper = this;\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n          swiper.thumbs.update();\n        },\n        observerUpdate: function observerUpdate() {\n          var swiper = this;\n          if (!swiper.thumbs.swiper) {\n            return;\n          }\n          swiper.thumbs.update();\n        },\n        setTransition: function setTransition(duration) {\n          var swiper = this;\n          var thumbsSwiper = swiper.thumbs.swiper;\n          if (!thumbsSwiper) {\n            return;\n          }\n          thumbsSwiper.setTransition(duration);\n        },\n        beforeDestroy: function beforeDestroy() {\n          var swiper = this;\n          var thumbsSwiper = swiper.thumbs.swiper;\n          if (!thumbsSwiper) {\n            return;\n          }\n          if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n            thumbsSwiper.destroy();\n          }\n        }\n      }\n    };\n\n    // Swiper Class\n\n    var components = [Device$1, Support$1, Browser$1, Resize, Observer$1, Virtual$1, Keyboard$1, Mousewheel$1, Navigation$1, Pagination$1, Scrollbar$1, Parallax$1, Zoom$1, Lazy$1, Controller$1, A11y, History$1, HashNavigation$1, Autoplay$1, EffectFade, EffectCube, EffectFlip, EffectCoverflow, Thumbs$1];\n    if (typeof Swiper.use === 'undefined') {\n      Swiper.use = Swiper.Class.use;\n      Swiper.installModule = Swiper.Class.installModule;\n    }\n    Swiper.use(components);\n    return Swiper;\n  });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (swiper());\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"../node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///./js/vendor/swiper.js?")}});